{"version":3,"sources":["redux/client/actions.js","redux/user/actions.js","redux/holiday/actions.js","redux/auth/actions.js","redux/requirement/actions.js","redux/salesuser/actions.js","redux/layout/actions.js","redux/role/actions.js","redux/salesrevenue/actions.js","redux/salesmonthreport/actions.js","redux/teammaster/actions.js","redux/salescallreport/actions.js","redux/recruiter/actions.js","redux/teamLead/actions.js","redux/reportingmanager/actions.js","redux/appMenu/actions.js","redux/leave/actions.js","redux/activity/constants.js","redux/list/constants.js","redux/allreport/constants.js","redux/auth/constants.js","redux/layout/constants.js","redux/requirement/constants.js","pages/master/usermaster/ViewUser.js","redux/activity/actions.js","redux/user/constants.js","redux/salesrevenue/constants.js","redux/salesmonthreport/constants.js","redux/salescallreport/constants.js","redux/appMenu/constants.js","helpers/baseurl.js","redux/client/constants.js","redux/clientwisesales/constants.js","redux/teammaster/constants.js","redux/role/constants.js","redux/list/actions.js","redux/allreport/actions.js","pages/hr/AttendanceReport.js","pages/hr/Holidays.js","pages/hr/ApplyForLeave.js","pages/hr/LeaveBalance.js","pages/hr/ViewLeave.js","pages/hr/Hr.js","pages/attendance/Attedance.js","pages/acyivity/TargetSubmission.js","pages/acyivity/OfferAndHire/LastMonthJoining.js","pages/acyivity/OfferAndHire/MonthOffer.js","pages/acyivity/OfferAndHire/TodaysInterView.js","pages/acyivity/OfferAndHire.js","pages/acyivity/Graph.js","pages/acyivity/AtsActivity.js","pages/acyivity/SearchResumeData.js","pages/acyivity/SearchResume.js","pages/acyivity/Activity.js","pages/clientwisesales/AssignClient.js","pages/clientwisesales/ViewSalesClient.js","pages/clientwisesales/ClientWiseSales.js","routes/index.js","routes/Routes.js","helpers/fake-backend.js","App.js","serviceWorker.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/user/reducers.js","redux/requirement/reducers.js","redux/client/reducers.js","redux/recruiter/reducers.js","redux/attendance/reducers.js","redux/list/reducers.js","redux/activity/reducers.js","redux/teammaster/reducers.js","redux/role/reducers.js","redux/leave/reducers.js","redux/holiday/reducers.js","redux/clientwisesales/reducers.js","redux/salesuser/reducers.js","redux/allreport/reducers.js","redux/teamLead/reducers.js","redux/salesrevenue/reducers.js","redux/salesmonthreport/reducers.js","redux/salescallreport/reducers.js","redux/reportingmanager/reducers.js","redux/reducers.js","helpers/api.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","helpers/axios.js","helpers/restApi.js","redux/user/sagas.js","redux/requirement/sagas.js","redux/client/sagas.js","redux/recruiter/sagas.js","redux/attendance/sagas.js","redux/list/sagas.js","redux/activity/sagas.js","redux/teammaster/sagas.js","redux/role/sagas.js","redux/leave/sagas.js","redux/holiday/sagas.js","redux/clientwisesales/sagas.js","redux/salesuser/sagas.js","redux/allreport/sagas.js","redux/teamLead/sagas.js","redux/salesrevenue/sagas.js","redux/salesmonthreport/sagas.js","redux/salescallreport/sagas.js","redux/reportingmanager/sagas.js","redux/sagas.js","redux/store.js","index.js","redux/clientwisesales/actions.js","constants/layout.js","components/PageTitle.js","redux/attendance/constants.js","redux/holiday/constants.js","redux/salesuser/constants.js","redux/recruiter/constants.js","redux/leave/constants.js","redux/teamLead/constants.js","redux/reportingmanager/constants.js","redux/attendance/actions.js","helpers/authUtils.js"],"names":["getClientList","type","GET_CLIENT_LIST_REQUEST","setClientList","clients","SET_CLIENT_LIST_REQUEST","payload","createClient","CREATE_CLIENT","createClientSuccess","createclients","CREATE_CLIENT_SUCCESS","getUserList","GET_USER_LIST_REQUEST","getUser","users","SET_USER_LIST_REQUEST","setUser","user","ADD_USER","setUserRquest","ADD_USER_REQUEST","getHolidayList","GET_HOLIDAY_LIST_REQUEST","setHoliday","holiday","SET_HOLIDAY_LIST_REQUEST","loginUser","username","password","rememberme","LOGIN_USER","loginUserSuccess","console","log","LOGIN_USER_SUCCESS","registerUser","fullname","email","REGISTER_USER","registerUserSuccess","REGISTER_USER_SUCCESS","registerUserFailed","error","REGISTER_USER_FAILED","logoutUser","history","LOGOUT_USER","forgetPasswordSuccess","passwordResetStatus","FORGET_PASSWORD_SUCCESS","forgetPasswordFailed","FORGET_PASSWORD_FAILED","getRequirementList","GET_REQUIREMENTS_LIST_REQUEST","setRequirement","requirements","SET_REQUIREMENTS_LIST_REQUEST","getCriticalRequirementList","GET_CRITICAL_REQUIREMENTS_LIST","setCriticalRequirement","criticalreq","SET_CRITICAL_REQUIREMENTS_LIST","setSaveRequirement","requirement","jid","SET_SAVE_REQUIREMENTS","id","getRequirementModal","GET_REQUIREMENTS_MODAL","hideRequirementModal","HIDE_REQUIREMENTS_MODAL","getSalesUserList","GET_SALESUSER_LIST_REQUEST","setSalesUser","salesuser","SET_SALESUSER_LIST_REQUEST","changeLayout","layout","CHANGE_LAYOUT","changeLayoutWidth","width","CHANGE_LAYOUT_WIDTH","changeSidebarTheme","theme","CHANGE_SIDEBAR_THEME","changeSidebarType","sidebarType","CHANGE_SIDEBAR_TYPE","showRightSidebar","SHOW_RIGHT_SIDEBAR","hideRightSidebar","HIDE_RIGHT_SIDEBAR","getRoleList","GET_ROLE_LIST_REQUEST","getRolelistRequest","role","SET_ROLE_LIST_REQUEST","createRole","createrole","CREATE_ROLE","createRoleSuccess","CREATE_ROLE_SUCCESS","getRevenueList","GET_REVENUE_LIST_REQUEST","getRevenue","revenues","SET_REVENUE_LIST_REQUEST","setRevenue","revenue","ADD_REVENUE","setRevenueRquest","ADD_REVENUE_REQUEST","getMonthList","GET_MONTH_LIST_REQUEST","getMonth","months","SET_MONTH_LIST_REQUEST","setMonth","month","ADD_MONTH","setMonthRquest","ADD_MONTH_REQUEST","getTeamList","GET_TEAM_LIST_REQUEST","setTeam","teams","SET_TEAM_LIST_REQUEST","createTeam","createteam","CREATE_TEAM","createTeamSuccess","CREATE_TEAM_SUCCESS","getCall","calls","SET_CALL_LIST_REQUEST","setCall","call","ADD_CALL","setCallRquest","ADD_CALL_REQUEST","getRecruiterList","GET_RECRUITER_LIST_REQUEST","setRecruiter","recruiters","SET_RECRUITER_LIST_REQUEST","getTeamLeadList","GET_TEAMLEAD_LIST_REQUEST","setTeamLead","teamlead","SET_TEAMLEAD_LIST_REQUEST","getReportingManList","GET_REPORTING_MAN_LIST_REQUEST","setReportingMan","reportingmanager","SET_REPORTING_MAN_LIST_REQUEST","initMenu","INIT_MENU","initMenuSuccess","menuItems","INIT_MENU_SUCCESS","changeActiveMenuFromLocation","CHANGE_ACTIVE_MENU_FROM_LOCATION","changeActiveMenuFromLocationSuccess","activatedMenuItemIds","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","setLeave","leave","SET_LEAVE_LIST_REQUEST","GET_DT_LIST_REQUEST","SET_DT_LIST_REQUEST","GET_TOIN_LIST_REQUEST","SET_TOIN_LIST_REQUEST","GET_MONOF_LIST_REQUEST","SET_MONOF_LIST_REQUEST","GET_MONTHJOIN_LIST_REQUEST","SET_MONTHJOIN_LIST_REQUEST","GET_ATSACTI_LIST_REQUEST","SET_ATSACTI_LIST_REQUEST","GET_LIST_LIST_REQUEST","SET_LIST_LIST_REQUEST","GET_OFFER_LIST_REQUEST","SET_OFFER_LIST_REQUEST","GET_VTBJ_LIST_REQUEST","SET_VTBJ_LIST_REQUEST","GET_JOIN_LIST_REQUEST","SET_JOIN_LIST_REQUEST","GET_BD_LIST_REQUEST","SET_BD_LIST_REQUEST","GET_DATEWISE_LIST_REQUEST","SET_DATEWISE_LIST_REQUEST","GET_MONTHCOUNT_LIST_REQUEST","SET_MONTHCOUNT_LIST_REQUEST","GET_TODAY_LIST_REQUEST","SET_TODAY_LIST_REQUEST","GET_REVENU_LIST_REQUEST","SET_REVENU_LIST_REQUEST","GET_RPR_LIST_REQUEST","SET_RPR_LIST_REQUEST","LOGIN_USER_FAILED","FORGET_PASSWORD","TOGGLE_RIGHT_SIDEBAR","SAVE_REQUIREMENTS","defaultSorted","dataField","order","sizePerPageRenderer","options","currSizePerPage","onSizePerPageChange","Fragment","className","name","defaultValue","onChange","e","target","value","map","option","idx","key","text","TableWithSearch","props","SearchBar","Search","useState","rowData","setrowData","rowEvent","onDoubleClick","row","alert","NoDataIndication","bootstrap4","keyField","data","records","columns","search","md","searchProps","baseProps","bordered","rowEvents","noDataIndication","pagination","paginationFactory","sizePerPage","sizePerPageList","length","ViewUser","dispatch","useDispatch","useSelector","state","Users","useEffect","hidden","sort","formatter","cellContent","onClick","title","getDailyTargetList","setDailyTargetList","dailytarget","getTodaysInterviewList","setTodaysInterviewList","todaysinterview","getMonthOfferList","setMonthOfferList","monthoffer","getMonthToBeJoinList","setMonthToBeJoinList","monthtobejoin","getAtsActivityList","setAtsActivityList","atsactivity","GET_ERROR","GET_CALL_LIST_REQUEST","module","exports","baseUrl","GET_CWS_LIST_REQUEST","SET_CWS_LIST_REQUEST","CREATE_CWS","CREATE_CWS_SUCCESS","setList","list","getOfferList","setOfferList","offer","getViewToBeJoinList","setViewToBeJoinList","viewtobejoin","getJoinList","setJoinList","joinlist","getBDList","setBDList","bdlist","setDatewiseReport","datewsiereport","setMonthCountReport","monthcountreport","setTodayReport","todayrepoert","setRevenuReport","revenureport","getReqReportList","setReqReport","reqreport","Input","Row","Col","AttendanceReport","Attendance","attendance","getAttendanceList","urlpattern","config","Holidays","Holiday","getUsername","Auth","Username","date","setdate","setname","day","setday","onSubmit","preventDefault","method","url","axios","then","response","JSON","stringify","swal","catch","placeholder","ApplyForLeave","settype","inwords","setinwords","startdate","setstartdate","enddate","setenddate","reason","setreason","createby","noofdays","for","class","ExportCSVButton","CSVExport","UncontrolledDropdown","DropdownToggle","data-toggle","tag","DropdownMenu","right","csvProps","wrapperClasses","LeaveBalance","ViewLeave","leaverecord","setleaveRecord","loginDetails","getleaveReport","$","ajax","dataType","success","allLeaverecord","Data","Hr","activeTab","setActiveTab","toggle","tab","PageTitle","breadCrumbItems","label","path","active","Button","color","Nav","tabs","NavItem","NavLink","classnames","TabContent","TabPane","tabId","attendancerecord","setAttendanceRecord","getAttendanceReport","newyear","Date","getFullYear","setmonth","allAttendancerecord","TargetSubmission","Activity","prevMonthName","moment","format","TodaysInterView","MonthOffer","OfferAndHire","LastMonthJoining","Graph","lg","chart","height","zoom","enabled","toolbar","show","colors","tooltip","x","dataLabels","stroke","curve","align","style","fontSize","grid","opacity","borderColor","markers","size","xaxis","categories","yaxis","min","max","legend","position","horizontalAlign","floating","offsetY","offsetX","responsive","breakpoint","series","AtsActivity","SearchResumeData","serchresume","SearchResume","byname","setbyname","byemail","setbyemail","bynumber","setbynumber","byskill","setbyskill","setserchresume","headers","resumedata","Label","InputGroup","InputGroupAddon","addonType","i","FormGroup","List","AssignClient","cid","setCid","uid","setUid","clientList","Client","salesUserList","SalesUser","currentTime","reqBody","createdatetime","createCws","required","disabled","selected","salesusers","EId","EFullname","client","cname","ViewSalesClient","CWS","cws","getCwsList","icon","buttons","dangerMode","willDelete","onDeleteRecord","ClientWiseSales","Login","React","lazy","Logout","Register","ForgetPassword","Confirm","Dashboard","Requirement","Masters","Report","Sales","HrPolicy","EmplHandbook","Appraisal","SalrySlip","PrivateRoute","Component","component","roles","rest","render","isUserAuthenticated","to","pathname","from","location","loggedInUser","getLoggedInUser","indexOf","Role","rootRoute","exact","route","dashboardRoutes","FeatherIcon","requirementRoutes","listRoutes","attendanceRoutes","hrpolicyRoutes","emphandbookRoutes","activityRoutes","hrRoutes","masterRoutes","viewUserRoutes","clientWiseSalesRoutes","clientwisesales","reportRoutes","revenueRoutes","asplRoutes","appraisalRoutes","authRoutes","children","Route","flattenRoutes","routes","flatRoutes","forEach","item","push","authProtectedRoutes","allFlattenRoutes","loading","AuthLayout","Loadable","loader","loaded","default","VerticalLayout","HorizontalLayout","Routes","getLayout","layoutCls","this","layoutType","layoutConstants","Layout","index","connect","firstName","lastName","realFetch","window","fetch","opts","Promise","resolve","reject","setTimeout","endsWith","params","parse","body","filteredUsers","filter","responseJson","token","ok","json","split","newUser","message","Authorization","configureFakeBackend","App","Boolean","hostname","match","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","action","AppMenu","createcws","combineReducers","Requirements","modal","Recruiter","GET_ATTENDANCE_LIST_REQUEST","SET_ATTENDANCE_LIST_REQUEST","Teams","Leave","GET_LEAVE_LIST_REQUEST","TeamLead","SalesRevenue","SalesMonthReport","SalesCallReport","ReportingManager","fetchJSON","status","login","logout","register","forgetPassword","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","Cookies","set","remove","localStorage","setItem","put","takeEvery","all","fork","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","document","setAttribute","manageBodyClass","cssClass","classList","add","changeLeftSidebarThemeAction","changeSidebarTypeAction","uuid","assignIdAndParent","parentId","initMenuAndItems","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","menuItem","assignIds","api","create","baseURL","interceptors","use","originalRequest","guid","getItem","defaults","common","_retry","post","GUID","res","get","getCriticleRequirementList","setClient","getAttendance","getListList","getTodaysInterviewtList","getReportingMan","getTeamLead","getLeave","getHoliday","setCws","getReqReport","getDatewiseReport","getMonthCountReport","getTodayReport","getRevenuReport","getCallList","watchGetUserRequest","watchSetUser","userSagas","actions","result","watchGetRequirementRequest","watchSetSaveRequirement","watchCriticalRequirement","requirementSagas","watchGetClientRequest","watchSetClientRequest","clientSagas","watchGetRecruiterRequest","recruiterSagas","watchGetAttendanceRequest","attendanceSagas","watchGetListRequest","watchGetOfferRequest","watchGetViewToBeJoinRequest","watchGetJoinRequest","watchGetBDRequest","listSagas","watchGetDailyTargetRequest","watchGetTodaysInterviewRequest","watchGetMonthOfferRequest","watchGetMonthToBeJoinRequest","watchGetAtsActivityRequest","activitySagas","watchGetTeamRequest","watchSetTeamRequest","teamSagas","watchGetRoleRequest","watchSetRoleRequest","roleSagas","getLeaveList","watchGetLeaveRequest","leaveSagas","watchGetHolidayRequest","holidaySagas","watchGetCwsRequest","watchSetCwsRequest","cwsSagas","watchGetSalesUserRequest","salesUserSagas","watchGetReqReportRequest","getDatewiseReportList","watchGetDatewiseReportRequest","getMonthCountReportList","watchGetMonthCountReportRequest","getTodayReportList","watchGetTodayReportRequest","getRevenuReportList","watchGetRevenuReportRequest","reqReportSagas","watchGetTeamLeadRequest","teamLeadSagas","watchGetRevenueRequest","watchSetRevenue","revenueSagas","watchGetMonthRequest","watchSetMonth","monthSagas","watchGetCallRequest","watchSetCall","callSagas","watchGetReportingManRequest","reportingManSagas","rootSaga","getState","layoutSaga","userSaga","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","getElementById","navigator","serviceWorker","ready","registration","unregister","setCwsList","createCwsSuccess","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","items","setAttendance","decoded","jwtDecode","now","exp","warn"],"mappings":"4FAAA,oJAIaA,EAAe,KAAI,CAC9BC,KAAKC,MAGMC,EAAkBC,IAAF,CAC3BH,KAAMI,IACNC,QAASF,IAGEG,EAAiBH,IAAF,CAC1BH,KAAMO,IACNF,QAASF,IAEEK,EAAwBC,IAAF,CACjCT,KAAMU,IACNL,QAASI,K,iCClBX,oJAIaE,EAAa,KAAI,CAC5BX,KAAKY,MAIMC,EAAYC,IAAF,CACrBd,KAAMe,IACNV,QAASS,IAGEE,EAAYC,IAAF,CACrBjB,KAAMkB,IACNb,QAASY,IAEEE,EAAkBF,IAAF,CAC3BjB,KAAMoB,IACNf,QAASY,K,iCCrBX,gFAIaI,EAAgB,KAAI,CAC/BrB,KAAKsB,MAGMC,EAAeC,IAAF,CACxBxB,KAAMyB,IACNpB,QAASmB,K,iCCTX,4RAcaE,EAAY,CAACC,EAAUC,EAAUC,KAArB,CACrB7B,KAAM8B,IACNzB,QAAS,CAAEsB,WAAUC,WAAUC,gBAGtBE,EAAoBd,IAC7Be,QAAQC,IAAI,0BAA0BhB,GAC9B,CACJjB,KAAMkC,IACN7B,QAASY,IAUJkB,EAAe,CAACC,EAAUC,EAAOT,KAAlB,CACxB5B,KAAMsC,IACNjC,QAAS,CAAE+B,WAAUC,QAAOT,cAGnBW,EAAuBtB,IAAD,CAC/BjB,KAAMwC,IACNnC,QAASY,IAGAwB,EAAsBC,IAAD,CAC9B1C,KAAM2C,IACNtC,QAASqC,IAGAE,EAAcC,IAAD,CACtB7C,KAAM8C,IACNzC,QAAS,CAAEwC,aAQFE,EAAyBC,IAAD,CACjChD,KAAMiD,IACN5C,QAAS2C,IAGAE,EAAwBR,IAAD,CAChC1C,KAAMmD,IACN9C,QAASqC,K,iCClEb,0PAOaU,EAAoB,KAAI,CACnCpD,KAAKqD,MAGMC,EAAmBC,IAAF,CAC5BvD,KAAMwD,IACNnD,QAASkD,IAEEE,EAA4B,KAAI,CAC3CzD,KAAK0D,MAGMC,EAA2BC,IAAF,CACpC5D,KAAM6D,IACNxD,QAASuD,IAOEE,EAAqB,CAAEC,EAAaC,KAAf,CAChChE,KAAMiE,IACN5D,QAAS0D,EACTG,GAAGF,IAEQG,EAAsB,MACjCnE,KAAMoE,MAGKC,EAAuB,MAClCrE,KAAMsE,O,iCCtCR,gFAIaC,EAAkB,KAAI,CACjCvE,KAAKwE,MAGMC,EAAiBC,IAAF,CAC1B1E,KAAM2E,IACNtE,QAASqE,K,iCCTX,wNAWaE,EAAgBC,IAAD,CACxB7E,KAAM8E,IACNzE,QAASwE,IAGAE,EAAqBC,IAAD,CAC7BhF,KAAMiF,IACN5E,QAAS2E,IAGAE,EAAsBC,IAAD,CAC9BnF,KAAMoF,IACN/E,QAAS8E,IAGAE,EAAqBC,IAAD,CAC7BtF,KAAMuF,IACNlF,QAASiF,IAQAE,EAAmB,MAC5BxF,KAAMyF,IACNpF,QAAS,OAGAqF,EAAmB,MAC5B1F,KAAM2F,IACNtF,QAAS,Q,iCC5Cb,oJAIauF,EAAa,KAAI,CAC5B5F,KAAK6F,MAGMC,EAAuBC,IAAF,CAChC/F,KAAMgG,IACN3F,QAAS0F,IAEEE,EAAeC,IAAF,CACxBlG,KAAMmG,IACN9F,QAAS6F,IAEEE,EAAsBF,IAAF,CAC/BlG,KAAMqG,IACNhG,QAAS6F,K,iCCjBX,oJAIaI,EAAgB,KAAI,CAC/BtG,KAAKuG,MAIMC,EAAeC,IAAF,CACxBzG,KAAM0G,IACNrG,QAASoG,IAGEE,EAAeC,IAAF,CACxB5G,KAAM6G,IACNxG,QAASuG,IAEEE,EAAqBF,IAAF,CAC9B5G,KAAM+G,IACN1G,QAASuG,K,iCCpBX,oJAIaI,EAAc,KAAI,CAC7BhH,KAAKiH,MAIMC,EAAaC,IAAF,CACtBnH,KAAMoH,IACN/G,QAAS8G,IAGEE,EAAaC,IAAF,CACtBtH,KAAMuH,IACNlH,QAASiH,IAEEE,EAAmBF,IAAF,CAC5BtH,KAAMyH,IACNpH,QAASiH,K,iCCrBX,oJAIaI,EAAa,KAAI,CAC5B1H,KAAK2H,MAGMC,EAAYC,IAAF,CACrB7H,KAAM8H,IACNzH,QAASwH,IAEEE,EAAeC,IAAF,CACxBhI,KAAMiI,IACN5H,QAAS2H,IAEEE,EAAsBF,IAAF,CAC/BhI,KAAMmI,IACN9H,QAAS2H,K,iCCjBX,kHASaI,EAAYC,IAAF,CACrBrI,KAAMsI,IACNjI,QAASgI,IAGEE,EAAYC,IAAF,CACrBxI,KAAMyI,IACNpI,QAASmI,IAEEE,EAAkBF,IAAF,CAC3BxI,KAAM2I,IACNtI,QAASmI,K,iCCrBX,gFAIaI,EAAkB,KAAI,CACjC5I,KAAK6I,MAGMC,EAAiBC,IAAF,CAC1B/I,KAAMgJ,IACN3I,QAAS0I,K,iCCVX,gFAIaE,EAAiB,KAAI,CAChCjJ,KAAKkJ,MAGMC,EAAgBC,IAAF,CACzBpJ,KAAMqJ,IACNhJ,QAAS+I,K,iCCVX,gFAIaE,EAAqB,KAAI,CACpCtJ,KAAKuJ,MAGMC,EAAoBC,IAAF,CAC7BzJ,KAAM0J,IACNrJ,QAASoJ,K,iCCTX,oJAOaE,EAAW,MACpB3J,KAAM4J,IACNvJ,QAAS,KAGAwJ,EAAmBC,IAAD,CAC3B9J,KAAM+J,IACN1J,QAAS,CAAEyJ,eAGFE,EAA+B,MACxChK,KAAMiK,IACN5J,QAAS,KAGA6J,EAAuCC,IAAD,CAC/CnK,KAAMoK,IACN/J,QAAS,CAAE8J,2B,iCCzBf,8CAQaE,EAAaC,IAAF,CACtBtK,KAAMuK,IACNlK,QAASiK,K,gCCTX,oVACO,IAAME,EAAsB,sBACtBC,EAAsB,sBAGtBC,EAAwB,wBACxBC,EAAwB,wBAGxBC,EAAyB,yBACzBC,EAAyB,yBAGzBC,EAA6B,6BAC7BC,EAA6B,6BAG7BC,EAA2B,2BAC3BC,EAA2B,4B,gCClBxC,oVACO,IAAMC,EAAwB,wBACxBC,EAAwB,wBAIxBC,EAAyB,yBACzBC,EAAyB,yBAGzBC,EAAwB,wBACxBC,EAAwB,wBAGxBC,EAAwB,wBACxBC,EAAwB,wBAGxBC,EAAsB,sBACtBC,EAAsB,uB,gCCjBnC,oVACO,IAAMC,EAA4B,4BAC5BC,EAA4B,4BAG5BC,EAA8B,8BAC9BC,EAA8B,8BAG9BC,EAAyB,yBACzBC,EAAyB,yBAGzBC,EAA0B,0BAC1BC,EAA0B,0BAG1BC,EAAuB,uBACvBC,EAAuB,wB,gCCrBpC,oVACO,IAAMvK,EAAa,aACbI,EAAqB,qBACrBoK,EAAoB,oBACpBhK,EAAgB,gBAChBE,EAAwB,wBACxBG,EAAuB,uBACvBG,EAAc,cACdyJ,EAAkB,kBAClBtJ,EAA0B,0BAC1BE,EAAyB,0B,gCCVtC,8OACO,IAAM2B,EAAgB,gBAChBG,EAAsB,sBACtBG,EAAuB,uBACvBG,EAAsB,sBAGtBiH,EAAuB,uBACvB/G,EAAqB,qBACrBE,EAAqB,sB,gCCTlC,gRACO,IAAMtC,EAAgC,gCAChCG,EAAgC,gCAEhCE,EAAiC,iCACjCG,EAAiC,iCAGjC4I,EAAoB,oBACpBxI,EAAwB,wBAGxBG,EAAyB,yBACzBE,EAA0B,2B,sLCAjCoI,EAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,EAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAAC,IAAD,CACIlN,KAAK,SACLmN,KAAK,SACLjJ,GAAG,aACHgJ,UAAU,gDACVE,aAAcL,EACdM,SAAWC,GAAMN,EAAoBM,EAAEC,OAAOC,QAC7CV,EAAQW,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOX,UAAU,iBAAjB,UAIFY,EAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UADuB,EAGDE,mBAAS,IAHR,mBAGxBC,EAHwB,KAGfC,EAHe,KAMvBC,EAAW,CACfC,cAAgBC,IACZC,QACIJ,EAAYD,GAAY,IAAIA,EAASI,IACrCvM,QAAQC,IAAI,UAAWkM,KAI7BM,EAAmB,IACrB,yBAAKvB,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAGrB,OAEY,kBAAC,IAAD,CAAiBwB,YAAU,EAACC,SAAS,aAAaC,KAAMb,EAAMc,QAASC,QAASf,EAAMe,QAASC,QAAM,GAC/FhB,GACE,kBAAC,IAAMd,SAAP,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK+B,GAAI,EAAG9B,UAAU,IAClB,kBAACc,EAAcD,EAAMkB,eAI7B,kBAAC,IAAD,iBACQlB,EAAMmB,UADd,CAEIC,UAAU,EACVzC,cAAeA,EACf0C,UAAWf,EACXgB,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACb3C,oBAAqBA,EACrB4C,gBAAiB,CACb,CAAE5B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMc,QAAUd,EAAMc,QAAQa,OAAS,YAgHlGC,IAnGE,KAEb,IAAMC,EAAWC,cACdhB,EAAUiB,YAAaC,GAAUA,EAAMC,MAAMlP,OAEhDmP,oBAAU,KACNL,EAASjP,gBAGV,IAEH,IAAMmO,EAAU,CACZ,CACInC,UAAU,KACVkB,KAAK,KACLqC,QAAQ,GAEZ,CACIvD,UAAW,QACXkB,KAAM,kBAGV,CACIlB,UAAW,YACXkB,KAAM,OACNsC,MAAM,GAEV,CACIxD,UAAW,gBACXkB,KAAM,WAEV,CACIlB,UAAW,eACXkB,KAAM,eAEV,CACIlB,UAAW,YACXkB,KAAM,YAEV,CACIlB,UAAW,QACXkB,KAAM,QAEV,CACIlB,UAAW,SACXkB,KAAM,SAEV,CACIlB,UAAW,QACXkB,KAAM,OACNuC,UAAW,CAACC,EAAa9B,IAGnB,4BACArB,UAAU,8BACRoD,QAAS,OACTC,MAAM,QAEP,kBAAC,IAAD,QAKX,CACI5D,UAAW,SACXkB,KAAM,SACNuC,UAAW,CAACC,EAAa9B,IAGnB,4BACArB,UAAU,8BACRoD,QAAS,OACTC,MAAM,UAEP,kBAAC,IAAD,SAcf,OACI,kBAAC,IAAMtD,SAAP,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAACa,EAAD,CAAiBe,QAASA,EAASC,QAASA,S,gCChMhE,gWAca0B,EAAqB,MAC9BxQ,KAAMwK,MAGGiG,EAAsBC,IAAD,CAC9B1Q,KAAMyK,IACNpK,QAASqQ,IAGAC,EAAyB,MAClC3Q,KAAM0K,MAGGkG,EAA0BC,IAAD,CAClC7Q,KAAM2K,IACNtK,QAASwQ,IAGAC,EAAoB,MAC/B9Q,KAAM4K,MAGKmG,EAAqBC,IAAD,CAC/BhR,KAAM6K,IACNxK,QAAS2Q,IAGEC,EAAuB,MAClCjR,KAAM8K,MAGKoG,EAAwBC,IAAD,CAClCnR,KAAM+K,IACN1K,QAAS8Q,IAIEC,EAAqB,MAChCpR,KAAMgL,MAGKqG,EAAsBC,IAAD,CAChCtR,KAAMiL,IACN5K,QAASiR,K,sECxDX,0KACO,IAAM1Q,EAAwB,wBACxBG,EAAwB,wBAGxBG,EAAW,WACXE,EAAmB,mBAGnBmQ,EAAY,a,gCCTzB,0KACO,IAAMhL,EAA2B,2BAC3BG,EAA2B,2BAG3BG,EAAc,cACdE,EAAsB,sBAGtBwK,EAAY,a,gCCTzB,0KACO,IAAMtK,EAAyB,yBACzBG,EAAyB,yBAGzBG,EAAY,YACZE,EAAoB,oBAGpB8J,EAAY,a,gCCTzB,0KACO,IAAMC,EAAwB,wBACxBlJ,EAAwB,wBAGxBG,EAAW,WACXE,EAAmB,mBAGnB4I,EAAY,a,gCCVzB,wIACO,IAAM3H,EAAY,YACZG,EAAoB,oBACpBE,EAAmC,mCACnCG,EAA2C,4C,iBCJxDqH,EAAOC,QAAU,CACbC,QAAS,kC,gCCAb,wIACO,IAAM1R,EAA0B,0BAC1BG,EAA0B,0BAE1BG,EAAgB,gBAChBG,EAAwB,yB,gCCLrC,wIACO,IAAMkR,EAAuB,uBACvBC,EAAuB,uBAEvBC,EAAa,aACbC,EAAqB,sB,gCCLlC,wIACO,IAAMpK,EAAwB,wBACxBG,EAAwB,wBAGxBG,EAAc,cACdE,EAAsB,uB,gCCNnC,wIACO,IAAMtC,EAAwB,wBACxBG,EAAwB,wBAGxBG,EAAc,cACdE,EAAsB,uB,gCCPnC,8TAiBa2L,EAAWC,IAAD,CACnBjS,KAAMmL,IACN9K,QAAS4R,IAIAC,EAAe,MACxBlS,KAAMoL,MAGG+G,EAAgBC,IAAD,CACxBpS,KAAMqL,IACNhL,QAAS+R,IAGAC,EAAsB,MAC/BrS,KAAMsL,MAGGgH,EAAuBC,IAAD,CAC/BvS,KAAMuL,IACNlL,QAASkS,IAIAC,EAAc,MACzBxS,KAAMwL,MAEKiH,EAAeC,IAAD,CACzB1S,KAAMyL,IACNpL,QAASqS,IAIEC,EAAY,MACvB3S,KAAM0L,MAEKkH,EAAaC,IAAD,CACvB7S,KAAM2L,IACNtL,QAASwS,K,gCCxDX,wNAUaC,EAAsBC,IAAF,CAC/B/S,KAAM6L,IACNxL,QAAS0S,IAOEC,EAAwBC,IAAF,CACjCjT,KAAM+L,IACN1L,QAAS4S,IAOEC,EAAmBC,IAAF,CAC5BnT,KAAMiM,IACN5L,QAAS8S,IAQEC,EAAoBC,IAAF,CAC7BrT,KAAMmM,IACN9L,QAASgT,IAIEC,EAAkB,KAAI,CACjCtT,KAAKoM,MAEMmH,EAAiBC,IAAF,CAC1BxT,KAAMqM,IACNhM,QAASmT,K,kaCrCL9G,EAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,EAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAACuG,EAAA,EAAD,CACIzT,KAAK,SACLmN,KAAK,SACLjJ,GAAG,aACHgJ,UAAU,gDACVE,aAAcL,EACdM,SAAWC,GAAMN,EAAoBM,EAAEC,OAAOC,QAC7CV,EAAQW,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOX,UAAU,iBAAjB,UAIFY,EAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UAYFS,EAAmB,IACrB,yBAAKvB,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAGrB,OAEY,kBAAC,IAAD,CAAiBwB,YAAU,EAACC,SAAS,aAAaC,KAAMb,EAAMc,QAASC,QAASf,EAAMe,QAASC,QAAM,GAC/FhB,GACE,kBAAC,IAAMd,SAAP,KACI,kBAACyG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,IAClB,kBAACc,EAAcD,EAAMkB,cAEzB,kBAAC0E,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,gBAI1B,kBAAC,IAAD,iBACQa,EAAMmB,UADd,CAEIC,UAAU,EACVzC,cAAeA,EAEf2C,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACb3C,oBAAqBA,EACrB4C,gBAAiB,CACb,CAAE5B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMc,QAAUd,EAAMc,QAAQa,OAAS,YA+DlGkE,EAlDU,KAErB,IAAMhE,EAAWC,cACbhB,EAAUiB,YAAaC,GAAUA,EAAM8D,WAAWC,YAGtD7D,oBAAU,KACNL,EAASmE,gBAGV,IA6BH,OACI,kBAAC,IAAM9G,SAAP,KACI,kBAACyG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC7F,EAAD,CAAiBe,QAASA,EAASC,QA/BnC,CACZ,CACInC,UAAW,QACXkB,KAAM,SAEV,CACIlB,UAAU,SACVkB,KAAK,WAET,CACIlB,UAAW,OACXkB,KAAM,MAEV,CACIlB,UAAW,UACXkB,KAAM,YAEV,CACIlB,UAAW,QACXkB,KAAM,MAEV,CACIlB,UAAW,QACXkB,KAAM,qB,4DCxHdmG,GAAYC,IAAOtC,QAGjBjF,GAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,GAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAACuG,EAAA,EAAD,CACIzT,KAAK,SACLmN,KAAK,SACLjJ,GAAG,aACHgJ,UAAU,gDACVE,aAAcL,EACdM,SAAWC,GAAMN,EAAoBM,EAAEC,OAAOC,QAC7CV,EAAQW,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOX,UAAU,iBAAjB,UAIFY,GAAmBC,IAarB,IAAMU,EAAmB,IACrB,yBAAKvB,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAGrB,OAEY,kBAAC,IAAD,CAAiBwB,YAAU,EAACC,SAAS,aAAaC,KAAMb,EAAMc,QAASC,QAASf,EAAMe,QAASC,QAAM,GAC/FhB,GACE,kBAAC,IAAMd,SAAP,KAGI,kBAAC,IAAD,iBACQc,EAAMmB,UADd,CAEIC,UAAU,EACVzC,cAAeA,GAEf2C,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACb3C,oBAAqBA,GACrB4C,gBAAiB,CACb,CAAE5B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMc,QAAUd,EAAMc,QAAQa,OAAS,YA2GlGwE,GA9FE,KAEb,IAAMtE,EAAWC,cACdhB,EAAUiB,YAAaC,GAAUA,EAAMoE,QAAQ3S,SACnDQ,QAAQC,IAAI4M,GACXoB,oBAAU,KACNL,EAASvO,gBAGV,IAEH,IAmBI+S,EADetE,YAAaC,GAASA,EAAMsE,KAAKpT,MAAQ,IAC7BqT,SA9BZ,EA+BGpG,mBAAS,IA/BZ,mBA+BZqG,EA/BY,KA+BNC,EA/BM,OAgCGtG,mBAAS,IAhCZ,mBAgCZf,EAhCY,KAgCNsH,EAhCM,OAiCCvG,mBAAS,IAjCV,mBAiCZwG,EAjCY,KAiCPC,EAjCO,KA4DnB,OACI,kBAAC,IAAM1H,SAAP,KACI,0BAAM2H,SA5BMtH,IAChBA,EAAEuH,iBACH,IAAMjG,EAAM,CACX2F,KAAKA,EACLpH,KAAKA,EACLuH,IAAIA,EACJ1U,KAAK,GACL2B,SAASyS,GAENH,EAAS,CACZa,OAAQ,OACRC,IAAI,GAAD,OAAKf,GAAL,iBACHpF,KAAOA,GAGToG,IAAMf,GACLgB,MAAK,SAAUC,GACdlT,QAAQC,IAAIkT,KAAKC,UAAUF,EAAStG,OACpCgB,EAASvO,eACTgU,IAAK,6BAA8B,cAEpCC,OAAM,SAAU5S,GACf2S,IAAK3S,EAAO,cAOR,kBAACgR,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK3E,GAAI,GAAI9B,UAAU,IACvB,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,uBACf,4BAAQlN,KAAK,SAASkN,UAAU,6BAAhC,WAEA,2BAAOlN,KAAK,OAAOkN,UAAU,4BAA4BqI,YAAY,iBACpElI,SAAWC,IACRmH,EAASnH,EAAEC,OAAOC,UAEtB,2BAAOxN,KAAK,OAAOkN,UAAU,4BAA4BqI,YAAY,SACpElI,SAAWC,IACRkH,EAASlH,EAAEC,OAAOC,UAEtB,2BAAOxN,KAAK,OAAOkN,UAAU,4BAA4BqI,YAAY,MACpElI,SAAWC,IACRqH,EAAQrH,EAAEC,OAAOC,cAMzB,kBAACkG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiB9E,QAASA,EAASC,QA5EnC,CACZ,CACInC,UAAW,OACXkB,KAAM,iBAEV,CACIlB,UAAU,OACVkB,KAAK,QAET,CACIlB,UAAW,MACXkB,KAAM,OAEV,CACIlB,UAAW,OACXkB,KAAM,e,oBCtHdmG,GAAYC,IAAOtC,QAwJR6D,GAvJM,KACjB,IACIpB,EADetE,YAAaC,GAASA,EAAMsE,KAAKpT,MAAQ,IAC7BqT,SAFT,EAGApG,mBAAS,IAHT,mBAGflO,EAHe,KAGTyV,EAHS,OAIMvH,mBAAS,IAJf,mBAIfwH,EAJe,KAINC,EAJM,OAKUzH,mBAAS,IALnB,mBAKf0H,EALe,KAKJC,EALI,OAMM3H,mBAAS,IANf,mBAMf4H,EANe,KAMNC,EANM,OAOI7H,mBAAS,IAPb,mBAOf8H,EAPe,KAOPC,EAPO,KAmClB,OACI,kBAAC,IAAMhJ,SAAP,KACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACX,0BAAM0H,SAhCVtH,IAChBA,EAAEuH,iBACH,IAAMjG,EAAM,CACX5O,KAAKA,EACL0V,QAAQA,EACRE,UAAUA,EACVE,QAAQA,EACRE,OAAOA,EACPE,SAAS9B,EACT+B,SAAS,IAENlC,EAAS,CACZa,OAAQ,OACRC,IAAI,GAAD,OAAKf,GAAL,eACHpF,KAAOA,GAGToG,IAAMf,GACLgB,MAAK,SAAUC,GACdlT,QAAQC,IAAIkT,KAAKC,UAAUF,EAAStG,OACpCyG,IAAK,0BAA2B,cAEjCC,OAAM,SAAU5S,GACf2S,IAAK3S,EAAO,aASuCwK,UAAU,gCAEzC,wBAAIA,UAAU,+BAAd,oBACA,yBAAKA,UAAU,cACf,2BAAOkJ,IAAI,YAAX,cACA,yBAAKC,MAAM,oBACP,yBAAKA,MAAM,uBACP,0BAAMA,MAAM,mBAAmBnS,GAAG,gBAAe,kBAAC,IAAD,CAAMgJ,UAAU,gBAErE,4BACYC,KAAK,OACLjJ,GAAG,OACHgJ,UAAU,eACVG,SAAWC,IACPmI,EAASnI,EAAEC,OAAOC,SAGtB,4BAAQA,MAAM,IAAd,UACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,cAAd,iBAIhB,yBAAKN,UAAU,cACf,2BAAOkJ,IAAI,YAAX,aACA,yBAAKC,MAAM,oBACP,yBAAKA,MAAM,uBACP,0BAAMA,MAAM,mBAAmBnS,GAAG,gBAAe,kBAAC,IAAD,CAAMgJ,UAAU,gBAErE,4BACYC,KAAK,UACLjJ,GAAG,UACHgJ,UAAU,eACVG,SAAWC,IACPqI,EAAYrI,EAAEC,OAAOC,SAGzB,4BAAQA,MAAM,IAAd,UACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,mBAAd,sBAIhB,yBAAKN,UAAU,cACf,2BAAOkJ,IAAI,YAAX,cACA,yBAAKC,MAAM,oBACP,yBAAKA,MAAM,uBACP,0BAAMA,MAAM,mBAAmBnS,GAAG,gBAAe,kBAAC,KAAD,CAAUgJ,UAAU,gBAEzE,2BACYlN,KAAK,OACLmN,KAAK,YACLjJ,GAAG,YACHgJ,UAAU,eACVG,SAAWC,IACPuI,EAAcvI,EAAEC,OAAOC,YAK3C,yBAAKN,UAAU,cACf,2BAAOkJ,IAAI,YAAX,YACA,yBAAKC,MAAM,oBACP,yBAAKA,MAAM,uBACP,0BAAMA,MAAM,mBAAmBnS,GAAG,gBAAe,kBAAC,KAAD,CAAUgJ,UAAU,gBAEzE,2BACYlN,KAAK,OACLmN,KAAK,UACLjJ,GAAG,UACHgJ,UAAU,eACVG,SAAWC,IACPyI,EAAYzI,EAAEC,OAAOC,YAMzC,yBAAKN,UAAU,cACf,2BAAOkJ,IAAI,YAAX,UACA,yBAAKC,MAAM,oBACP,yBAAKA,MAAM,uBACP,0BAAMA,MAAM,mBAAmBnS,GAAG,gBAAe,kBAAC,KAAD,CAAMgJ,UAAU,gBAErE,2BACalN,KAAK,OACLmN,KAAK,SACLjJ,GAAG,SAASgJ,UAAU,eACtBG,SAAWC,IACP2I,EAAW3I,EAAEC,OAAOC,YAMrC,yBAAKN,UAAU,+BACX,4BAAQlN,KAAK,SAASkN,UAAU,+BAAhC,gB,wCClI5BoJ,GAAoBC,YAApBD,gBACFzJ,GAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAACuG,EAAA,EAAD,CACIzT,KAAK,SACLmN,KAAK,SACLjJ,GAAG,aACHgJ,UAAU,gDACVE,aAAcL,EACdM,SAAWC,GAAMN,EAAoBM,EAAEC,OAAOC,QAC7CV,EAAQW,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOX,UAAU,iBAAjB,UAIFY,GAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UAYR,OAEY,kBAAC,IAAD,CAAiBU,YAAU,EAACC,SAAS,aAAaC,KAAMb,EAAMc,QAASC,QAASf,EAAMe,QAASC,QAAM,GAC/FhB,GACE,kBAAC,IAAMd,SAAP,KACI,kBAACyG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,IAClB,kBAACc,EAAcD,EAAMkB,cAEzB,kBAAC0E,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,cAEtB,kBAACsJ,GAAA,EAAD,CAAsBtJ,UAAU,0BAChC,4BAAQA,UAAU,8CAAlB,UAChB,kBAACuJ,GAAA,EAAD,CACIC,cAAY,WACZC,IAAI,SACJzJ,UAAU,wDAHd,YAIa,kBAAC,KAAD,OAEb,kBAAC0J,GAAA,EAAD,CAAcC,OAAK,EAAC3J,UAAU,+CAC1B,yBAAKA,UAAU,gCACf,kBAACoJ,GAAD,eAAiBpJ,UAAU,YAAgBa,EAAM+I,UAAjD,mBAcQ,kBAAC,IAAD,iBACQ/I,EAAMmB,UADd,CAEIC,UAAU,EAGVG,WACIC,IACI,CACIC,YAAa,GACb3C,oBAAqBA,GACrB4C,gBAAiB,CACb,CAAE5B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMc,QAAUd,EAAMc,QAAQa,OAAS,MAMjFqH,eAAe,yBAsDhCC,GA9CM,KAEjB,IAAMpH,EAAWC,cACbhB,EAAUiB,YAAaC,GAAUA,EAAM8D,WAAWC,YAEtD9R,QAAQC,IAAI4M,GACZoB,oBAAU,KACNL,EAASmE,gBAGV,IAyBH,OACI,kBAAC,IAAM9G,SAAP,KACI,kBAACyG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiB9E,QAASA,EAASC,QA3BnC,CACZ,CACInC,UAAW,OACXkB,KAAM,SAEV,CACIlB,UAAW,MACXkB,KAAM,QAEV,CACIlB,UAAW,SACXkB,KAAM,mBAEV,CACIlB,UAAW,UACXkB,KAAM,cAEV,CACIlB,UAAW,eACXkB,KAAM,kB,qBClIdmG,GAAYC,IAAOtC,QACjBjF,GAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,GAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAACuG,EAAA,EAAD,CACIzT,KAAK,SACLmN,KAAK,SACLjJ,GAAG,aACHgJ,UAAU,gDACVE,aAAcL,EACdM,SAAWC,GAAMN,EAAoBM,EAAEC,OAAOC,QAC7CV,EAAQW,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOX,UAAU,iBAAjB,UAIFY,GAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UAEFS,EAAmB,IACrB,yBAAKvB,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAGrB,OAEY,kBAAC,IAAD,CAAiBwB,YAAU,EAACC,SAAS,aAAaC,KAAMb,EAAMc,QAASC,QAASf,EAAMe,QAASC,QAAM,GAC/FhB,GACE,kBAAC,IAAMd,SAAP,KACI,kBAACyG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,IAClB,kBAACc,EAAcD,EAAMkB,eAI7B,kBAAC,IAAD,iBACQlB,EAAMmB,UADd,CAEIC,UAAU,EACVzC,cAAeA,GAEf2C,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACb3C,oBAAqBA,GACrB4C,gBAAiB,CACb,CAAE5B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMc,QAAUd,EAAMc,QAAQa,OAAS,YAmGlGuH,GAtFG,KAAO,IAAD,EAEgB/I,mBAAS,IAFzB,mBAEbgJ,EAFa,KAEAC,EAFA,KAGhBC,EAAetH,YAAaC,GAASA,EAAMsE,KAAKpT,MAAQ,IAC3DgP,oBAAU,KACNoH,KAGD,IACH,IAAMA,EAAe,KACjB,IAAIjD,EAAcgD,EAAa9C,SAE/BgD,KAAEC,KACD,CAEGxC,IAAI,GAAD,OAAKf,GAAL,gCAAuCI,GAC1CpU,KAAK,MACLwX,SAAS,OAGTC,QAAS,SAAS7I,GAId5M,QAAQC,IAAI2M,EAAM,sBAClB,IAAI8I,EAAiB9I,EAAK+I,KAC1BR,EAAeO,OAK3B1V,QAAQC,IAAIiV,EAAa,0BAC9B,IAAIrI,EAAUqI,GAAe,GA2CzB,OACI,kBAAC,IAAMjK,SAAP,KACI,kBAACyG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiB9E,QAASA,EAASC,QA7CnC,CACZ,CACInC,UAAW,KACXkB,KAAM,MACNqC,QAAO,GAEX,CACIvD,UAAU,OACVkB,KAAK,QAET,CACIlB,UAAW,WACXkB,KAAM,eAEV,CACIlB,UAAW,SACXkB,KAAM,UAEV,CACIlB,UAAW,YACXkB,KAAM,cAEV,CACIlB,UAAW,UACXkB,KAAM,YAEV,CACIlB,UAAW,aACXkB,KAAM,aAEV,CACIlB,UAAW,gBACXkB,KAAM,kBAGV,CACIlB,UAAW,cACXkB,KAAM,oBClEH+J,GAtFH7J,IAAW,IAAD,EACcG,mBAAS,KADvB,mBACb2J,EADa,KACFC,EADE,KAGdC,EAASC,IACVH,IAAcG,GAAKF,EAAaE,IAGrC,OACE,kBAAC,IAAM/K,SAAP,KACE,kBAACyG,EAAA,EAAD,CAAKxG,UAAU,cACL,kBAACyG,EAAA,EAAD,CAAK3E,GAAI,GACL,kBAACiJ,EAAA,EAAD,CACIC,gBAAiB,CACb,CAAEC,MAAO,KAAMC,KAAM,MAAOC,QAAQ,OAIhD,kBAAC1E,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,cACtB,kBAACoL,EAAA,EAAD,CAAQC,MAAM,WAAU,uBAAGrL,UAAU,iBAArC,cAGV,kBAACsL,EAAA,EAAD,CAAKC,MAAI,EAACvL,UAAU,8DAClB,kBAACwL,EAAA,EAAD,CAASxL,UAAU,YACjB,kBAACyL,EAAA,EAAD,CACEzL,UAAW0L,IAAW,CAAEP,OAAsB,MAAdR,IAChCvH,QAAS,KAAQyH,EAAO,OAF1B,qBAOF,kBAACW,EAAA,EAAD,CAASxL,UAAU,YACjB,kBAACyL,EAAA,EAAD,CACEzL,UAAW0L,IAAW,CAAEP,OAAsB,MAAdR,IAChCvH,QAAS,KAAQyH,EAAO,OAF1B,aAOF,kBAACW,EAAA,EAAD,CAASxL,UAAU,YACjB,kBAACyL,EAAA,EAAD,CACEzL,UAAW0L,IAAW,CAAEP,OAAsB,MAAdR,IAChCvH,QAAS,KAAQyH,EAAO,OAF1B,oBAOF,kBAACW,EAAA,EAAD,CAASxL,UAAU,YACjB,kBAACyL,EAAA,EAAD,CACEzL,UAAW0L,IAAW,CAAEP,OAAsB,MAAdR,IAChCvH,QAAS,KAAQyH,EAAO,OAF1B,eAOF,kBAACW,EAAA,EAAD,CAASxL,UAAU,aACjB,kBAACyL,EAAA,EAAD,CACEzL,UAAW0L,IAAW,CAAEP,OAAsB,MAAdR,IAChCvH,QAAS,KAAQyH,EAAO,OAF1B,mBAQJ,kBAACc,EAAA,EAAD,CAAY3L,UAAU,kBAAkB2K,UAAWA,GACjD,kBAACiB,EAAA,EAAD,CAASC,MAAM,KAEV,kBAAC,EAAD,OAEL,kBAACD,EAAA,EAAD,CAASC,MAAM,KACd,kBAAC,GAAD,OAED,kBAACD,EAAA,EAAD,CAASC,MAAM,KACb,kBAAC,GAAD,OAEF,kBAACD,EAAA,EAAD,CAASC,MAAM,KACb,kBAAC,GAAD,OAEF,kBAACD,EAAA,EAAD,CAASC,MAAM,KACb,kBAAC,GAAD,UCxEN/E,GAAYC,IAAOtC,QAEf2E,GAAoBC,YAApBD,gBACFzJ,GAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAACuG,EAAA,EAAD,CACIzT,KAAK,SACLmN,KAAK,SACLjJ,GAAG,aACHgJ,UAAU,gDACVE,aAAcL,EACdM,SAAWC,GAAMN,EAAoBM,EAAEC,OAAOC,QAC7CV,EAAQW,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOX,UAAU,iBAAjB,UAIFY,GAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UAYR,OAEY,kBAAC,IAAD,CAAiBU,YAAU,EAACC,SAAS,aAAaC,KAAMb,EAAMc,QAASC,QAASf,EAAMe,QAASC,QAAM,GAC/FhB,GACE,kBAAC,IAAMd,SAAP,KACI,kBAACyG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,IAClB,kBAACc,EAAcD,EAAMkB,cAEzB,kBAAC0E,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,cAEtB,kBAACsJ,GAAA,EAAD,CAAsBtJ,UAAU,0BAChC,4BAAQA,UAAU,8CAAlB,cAChB,kBAACuJ,GAAA,EAAD,CACIC,cAAY,WACZC,IAAI,SACJzJ,UAAU,wDAHd,YAIa,kBAAC,KAAD,OAEb,kBAAC0J,GAAA,EAAD,CAAcC,OAAK,EAAC3J,UAAU,+CAC1B,yBAAKA,UAAU,gCACf,kBAAC,GAAD,eAAiBA,UAAU,YAAgBa,EAAM+I,UAAjD,mBAcQ,kBAAC,IAAD,iBACQ/I,EAAMmB,UADd,CAEIC,UAAU,EAGVG,WACIC,IACI,CACIC,YAAa,GACb3C,oBAAqBA,GACrB4C,gBAAiB,CACb,CAAE5B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMc,QAAUd,EAAMc,QAAQa,OAAS,MAMjFqH,eAAe,yBAqGhClD,GA7FI,KAAO,IAAD,EAEyB3F,mBAAS,IAFlC,mBAEd8K,EAFc,KAEIC,EAFJ,KAGjB7B,EAAetH,YAAaC,GAASA,EAAMsE,KAAKpT,MAAQ,IAC3DgP,oBAAU,KACNiJ,KAGD,IACH,IAAMA,EAAoB,KACtB,IAAI9E,EAAcgD,EAAa9C,SAE3B6E,GADU,IAAIC,MACIC,cAElBC,GADW,IAAIF,MACKlS,WACxBlF,QAAQC,IAAIqX,GAEZhC,KAAEC,KACD,CAEGxC,IAAI,GAAD,OAAKf,GAAL,sCAA6CI,EAA7C,kBAAkEkF,EAAS,EAA3E,iBAAqFH,GACxFnZ,KAAK,MACLwX,SAAS,OAGTC,QAAS,SAAS7I,GAId5M,QAAQC,IAAI2M,EAAM,sBAClB,IAAI2K,EAAsB3K,EAAK+I,KAC/BsB,EAAoBM,OAMjC1K,EAAUmK,GAAoB,GAgC9B,OACI,kBAAC,IAAM/L,SAAP,KACI,kBAACyG,EAAA,EAAD,CAAKxG,UAAU,mBACX,kBAACyG,EAAA,EAAD,CAAK3E,GAAI,GACL,kBAACiJ,EAAA,EAAD,CACIC,gBAAiB,CACb,CAAEC,MAAO,aAAcC,KAAM,cAAeC,QAAQ,OAIhE,kBAAC1E,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,cACtB,kBAACoL,EAAA,EAAD,CAAQC,MAAM,WAAU,uBAAGrL,UAAU,iBAArC,cAIJ,kBAACwG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiB9E,QAASA,EAASC,QAhDnC,CACZ,CACInC,UAAW,OACXkB,KAAM,SAEV,CACIlB,UAAW,MACXkB,KAAM,OAEV,CACIlB,UAAW,SACXkB,KAAM,WAEV,CACIlB,UAAW,UACXkB,KAAM,YAEV,CACIlB,UAAW,YACXkB,KAAM,cAEV,CACIlB,UAAW,SACXkB,KAAM,UAEV,CACIlB,UAAW,eACXkB,KAAM,wB,SCrKZnB,GAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,GAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAACuG,EAAA,EAAD,CACIzT,KAAK,SACLmN,KAAK,SACLjJ,GAAG,aACHgJ,UAAU,gDACVE,aAAcL,EACdM,SAAWC,GAAMN,EAAoBM,EAAEC,OAAOC,QAC7CV,EAAQW,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOX,UAAU,iBAAjB,UAIFY,GAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UAYFS,EAAmB,IACrB,yBAAKvB,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAGrB,OAEY,kBAAC,IAAD,CAAiBwB,YAAU,EAACC,SAAS,aAAaC,KAAMb,EAAMc,QAASC,QAASf,EAAMe,QAASC,QAAM,GAC/FhB,GACE,kBAAC,IAAMd,SAAP,KACI,kBAACyG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,IAClB,kBAACc,EAAcD,EAAMkB,cAEzB,kBAAC0E,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,gBAI1B,kBAAC,IAAD,iBACQa,EAAMmB,UADd,CAEIC,UAAU,EACVzC,cAAeA,GAEf2C,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACb3C,oBAAqBA,GACrB4C,gBAAiB,CACb,CAAE5B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMc,QAAUd,EAAMc,QAAQa,OAAS,YAsDlG8J,GAzCU,KAErB,IAAM5J,EAAWC,cACdhB,EAAUiB,YAAaC,GAAUA,EAAM0J,SAAS/I,aACpD1O,QAAQC,IAAI4M,GACXoB,oBAAU,KACNL,EAASY,iBAGV,IAqBH,OACI,kBAAC,IAAMvD,SAAP,KACI,kBAACyG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiB9E,QAASA,EAASC,QAvBnC,CACZ,CACInC,UAAW,WACXkB,KAAM,mBAEV,CACIlB,UAAU,SACVkB,KAAK,UAET,CACIlB,UAAW,UACXkB,KAAM,WAEV,CACIlB,UAAW,UACXkB,KAAM,kB,oBCrHZnB,GAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,GAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,SACA,kBAACuG,EAAA,EAAD,CACIzT,KAAK,SACLmN,KAAK,SACLjJ,GAAG,aACHgJ,UAAU,gDACVE,aAAcL,EACdM,SAAWC,GAAMN,EAAoBM,EAAEC,OAAOC,QAC7CV,EAAQW,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOX,UAAU,iBAAjB,UAIFY,GAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UAYFS,EAAmB,IACrB,yBAAKvB,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAIfwM,EAAiBC,OAASC,OAAO,QAGvC,OAEY,kBAAC,IAAD,CAAiBlL,YAAU,EAACC,SAAS,aAAaC,KAAMb,EAAMc,QAASC,QAASf,EAAMe,QAASC,QAAM,GAC/FhB,GACE,kBAAC,IAAMd,SAAP,KACK,kBAACyG,EAAA,EAAD,CAAKxG,UAAU,QACZ,kBAACyG,EAAA,EAAD,CAAK3E,GAAI,GAAI9B,UAAU,8BACnB,4BAAKwM,EAAL,cAGR,kBAAChG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,IAClB,kBAACc,EAAcD,EAAMkB,cAEzB,kBAAC0E,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,gBAI1B,kBAAC,IAAD,iBACQa,EAAMmB,UADd,CAEIC,UAAU,EACVzC,cAAeA,GAEf2C,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACb3C,oBAAqBA,GACrB4C,gBAAiB,CACb,CAAE5B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMc,QAAUd,EAAMc,QAAQa,OAAS,YAsDlGmK,GAzCS,KAEpB,IAAMjK,EAAWC,cACdhB,EAAUiB,YAAaC,GAAUA,EAAM0J,SAAStI,eACnDlB,oBAAU,KACNL,EAASqB,iBAGV,IAsBH,OACI,kBAAC,IAAMhE,SAAP,KACI,kBAACyG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiB9E,QAASA,EAASC,QAxBnC,CACZ,CACInC,UAAW,gBACXkB,KAAM,SAEV,CACIlB,UAAU,aACVkB,KAAK,UAET,CACIlB,UAAW,QACXkB,KAAM,cAEV,CACIlB,UAAW,gBACXkB,KAAM,oBC3HZnB,GAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,GAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAACuG,EAAA,EAAD,CACIzT,KAAK,SACLmN,KAAK,SACLjJ,GAAG,aACHgJ,UAAU,gDACVE,aAAcL,EACdM,SAAWC,GAAMN,EAAoBM,EAAEC,OAAOC,QAC7CV,EAAQW,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOX,UAAU,iBAAjB,UAKFY,GAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UAYFS,EAAmB,IACrB,yBAAKvB,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAGrB,OAEY,kBAAC,IAAD,CAAiBwB,YAAU,EAACC,SAAS,aAAaC,KAAMb,EAAMc,QAASC,QAASf,EAAMe,QAASC,QAAM,GAC/FhB,GACE,kBAAC,IAAMd,SAAP,KACK,kBAACyG,EAAA,EAAD,CAAKxG,UAAU,QACZ,kBAACyG,EAAA,EAAD,CAAK3E,GAAI,GAAI9B,UAAU,8BACnB,6CAGR,kBAACwG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,IAClB,kBAACc,EAAcD,EAAMkB,cAEzB,kBAAC0E,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,gBAI1B,kBAAC,IAAD,iBACQa,EAAMmB,UADd,CAEIC,UAAU,EACVzC,cAAeA,GAEf2C,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACb3C,oBAAqBA,GACrB4C,gBAAiB,CACb,CAAE5B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMc,QAAUd,EAAMc,QAAQa,OAAS,YAsDlGoK,GAzCI,KAEf,IAAMlK,EAAWC,cACdhB,EAAUiB,YAAaC,GAAUA,EAAM0J,SAASzI,YACnDf,oBAAU,KACNL,EAASkB,iBAGV,IAsBH,OACI,kBAAC,IAAM7D,SAAP,KACI,kBAACyG,EAAA,EAAD,CAAKxG,UAAU,YACX,kBAACyG,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiB9E,QAASA,EAASC,QAxBnC,CACZ,CACInC,UAAW,gBACXkB,KAAM,SAEV,CACIlB,UAAU,aACVkB,KAAK,UAET,CACIlB,UAAW,QACXkB,KAAM,cAEV,CACIlB,UAAW,gBACXkB,KAAM,oBCvHZnB,GAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,GAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAACuG,EAAA,EAAD,CACIzT,KAAK,SACLmN,KAAK,SACLjJ,GAAG,aACHgJ,UAAU,gDACVE,aAAcL,EACdM,SAAWC,GAAMN,EAAoBM,EAAEC,OAAOC,QAC7CV,EAAQW,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOX,UAAU,iBAAjB,UAIFY,GAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UAaFS,EAAmB,IACrB,yBAAKvB,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UALjB,oBASJ,OAEY,kBAAC,IAAD,CAAiBwB,YAAU,EAACC,SAAS,aAAaC,KAAMb,EAAMc,QAASC,QAASf,EAAMe,QAASC,QAAM,GAC/FhB,GACE,kBAAC,IAAMd,SAAP,KACK,kBAACyG,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,CAAK3E,GAAI,GAAI9B,UAAU,8BACnB,mDAGR,kBAACwG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,IAClB,kBAACc,EAAcD,EAAMkB,cAEzB,kBAAC0E,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,gBAI1B,kBAAC,IAAD,iBACQa,EAAMmB,UADd,CAEIC,UAAU,EACVzC,cAAeA,GAEf2C,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACb3C,oBAAqBA,GACrB4C,gBAAiB,CACb,CAAE5B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMc,QAAUd,EAAMc,QAAQa,OAAS,YA2DlGmK,GA9CS,KAEpB,IAAMjK,EAAWC,cACdhB,EAAUiB,YAAaC,GAAUA,EAAM0J,SAAS5I,iBACnDZ,oBAAU,KACNL,EAASe,iBAGV,IA2BH,OACI,kBAAC,IAAM1D,SAAP,KACI,kBAACyG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiB9E,QAASA,EAASC,QA7BnC,CACZ,CACInC,UAAW,gBACXkB,KAAM,SAEV,CACIlB,UAAU,cACVkB,KAAK,gBAET,CACIlB,UAAW,WACXkB,KAAM,YAEV,CACIlB,UAAW,OACXkB,KAAM,QAEV,CACIlB,UAAW,YACXkB,KAAM,kBChHHkM,GAfM,IAGb,kBAAC,IAAM9M,SAAP,KACI,kBAACyG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAACqG,GAAD,S,+DC+GLC,GArHD,IA+FN,kBAAC,IAAMhN,SAAP,KACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAK+B,GAAI,GAAI9B,UAAU,8BACnB,6CAGT,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAKgN,GAAI,GAAIhN,UAAU,cAClB,4BAAQA,UAAU,mBAAlB,WACA,4BAAQA,UAAU,0BAAlB,WAGJ,kBAAC,KAAD,CACIJ,QA3GgB,CAC5BqN,MAAO,CACHC,OAAQ,IACRpa,KAAM,OACNqa,KAAM,CACFC,SAAS,GAEbC,QAAS,CACLC,MAAM,IAGdC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAChEC,QAAS,CACLvV,MAAO,OACPwV,EAAG,CAAEH,MAAM,IAEfI,WAAY,CACRN,SAAS,GAEbO,OAAQ,CACJ7V,MAAO,CAAC,EAAG,GACX8V,MAAO,UAEXvK,MAAO,CACH1C,KAAM,0BACNkN,MAAO,OACPC,MAAO,CACHC,SAAU,SAGlBC,KAAM,CACF3M,IAAK,CACDkM,OAAQ,CAAC,cAAe,eACxBU,QAAS,IAEbC,YAAa,WAEjBC,QAAS,CACLL,MAAO,WACPM,KAAM,GAEVC,MAAO,CACHC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACvDjL,MAAO,CACH1C,KAAM,0BAGd4N,MAAO,CACHlL,MAAO,CACH1C,KAAM,yBAEV6N,IAAK,EACLC,IAAK,IAETC,OAAQ,CACJC,SAAU,MACVC,gBAAiB,QACjBC,UAAU,EACVC,SAAU,GACVC,SAAU,GAEdC,WAAY,CACR,CACIC,WAAY,IACZrP,QAAS,CACLqN,MAAO,CACHI,QAAS,CACLC,MAAM,IAGdoB,OAAQ,CACJpB,MAAM,OAqCV4B,OA9BoB,CAChC,CACIjP,KAAM,aACNyB,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEnC,CACIzB,KAAM,YACNyB,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEnC,CACIzB,KAAM,QACNyB,KAAM,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,MAoBrB5O,KAAK,OACLkN,UAAU,iBC1GxBR,GAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,GAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAACuG,EAAA,EAAD,CACIzT,KAAK,SACLmN,KAAK,SACLjJ,GAAG,aACHgJ,UAAU,gDACVE,aAAcL,EACdM,SAAWC,GAAMN,EAAoBM,EAAEC,OAAOC,QAC7CV,EAAQW,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOX,UAAU,iBAAjB,UAIFY,GAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UAYFS,EAAmB,IACrB,yBAAKvB,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAGrB,OAEY,kBAAC,IAAD,CAAiBwB,YAAU,EAACC,SAAS,aAAaC,KAAMb,EAAMc,QAASC,QAASf,EAAMe,QAASC,QAAM,GAC/FhB,GACE,kBAAC,IAAMd,SAAP,KACI,kBAACyG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,IAClB,kBAACc,EAAcD,EAAMkB,cAEzB,kBAAC0E,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,gBAwB1B,kBAAC,IAAD,iBACQa,EAAMmB,UADd,CAEIC,UAAU,EACVzC,cAAeA,GAEf2C,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACb3C,oBAAqBA,GACrB4C,gBAAiB,CACb,CAAE5B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMc,QAAUd,EAAMc,QAAQa,OAAS,YAiDlG2M,GApCK,KAEhB,IAAMzM,EAAWC,cACdhB,EAAUiB,YAAaC,GAAUA,EAAM0J,SAASnI,aACnDrB,oBAAU,KACNL,EAASwB,iBAGV,IAiBH,OACI,kBAAC,IAAMnE,SAAP,KACI,kBAACyG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiB9E,QAASA,EAASC,QAnBnC,CACZ,CACInC,UAAW,OACXkB,KAAM,SAEV,CACIlB,UAAU,WACVkB,KAAK,YAET,CACIlB,UAAW,eACXkB,KAAM,wB,+ECvIZhB,GAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAACuG,EAAA,EAAD,CACIzT,KAAK,SACLmN,KAAK,SACLjJ,GAAG,aACHgJ,UAAU,gDACVE,aAAcL,EACdM,SAAWC,GAAMN,EAAoBM,EAAEC,OAAOC,QAC7CV,EAAQW,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOX,UAAU,iBAAjB,UAIFY,GAAmBC,GAGT,kBAAC,IAAD,CAAiBW,YAAU,EAACC,SAAS,aAAaC,KAAMb,EAAMc,QAASC,QAASf,EAAMe,QAASC,QAAM,GAC/FhB,GACE,kBAAC,IAAMd,SAAP,KAGI,kBAAC,IAAD,iBACQc,EAAMmB,UADd,CAEIC,UAAU,EAGVG,WACIC,IACI,CACIC,YAAa,GACb3C,oBAAqBA,GACrB4C,gBAAiB,CACb,CAAE5B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMc,QAAUd,EAAMc,QAAQa,OAAS,MAMjFqH,eAAe,wBA+ChCuF,GAvCWvO,IAEtB/L,QAAQC,IAAK8L,EAAMwO,aAEvB,IAAI1N,EAAUd,EAAMwO,aAAc,GAwB9B,OACI,kBAAC,IAAMtP,SAAP,KACI,kBAACyG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiB9E,QAASA,EAASC,QA3BnC,CACZ,CACInC,UAAW,SACXkB,KAAM,SAEV,CACIlB,UAAW,QACXkB,KAAM,OAEV,CACIlB,UAAW,YACXkB,KAAM,WAEV,CACIlB,UAAW,QACXkB,KAAM,YAEV,CACIlB,UAAW,UACXkB,KAAM,gBCpEdmG,GAAYC,IAAOtC,QAkJR6K,GAhJK,KAAM,IAAD,EACKtO,mBAAS,IADd,mBACduO,EADc,KACNC,EADM,OAEOxO,mBAAS,IAFhB,mBAEdyO,EAFc,KAELC,EAFK,OAGS1O,mBAAS,IAHlB,mBAGd2O,EAHc,KAGJC,EAHI,OAIO5O,mBAAS,IAJhB,mBAId6O,EAJc,KAILC,EAJK,OAKe9O,mBAAS,IALxB,mBAKdqO,EALc,KAKDU,EALC,KAiCjB,OACI,kBAAC,IAAMhQ,SAAP,KACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACX,kBAAC,UAAD,CAAQ0H,SAhCb,KACf,IAAIhG,EAAOuG,KAAKC,UAAU,CACtBqH,OAAQA,EACRE,QAASA,EACTE,SAAUA,EACVE,QAASA,IAGT9I,EAAS,CACXa,OAAQ,OACRC,IAAI,GAAD,OAAKf,GAAL,gBACHkJ,QAAS,CACP,eAAgB,oBAElBtO,KAAOA,GAGToG,IAAMf,GACLgB,MAAK,SAAUC,GACZ,IAAIiI,EAAYjI,EAAStG,KAAK+I,KAC9BsF,EAAeE,MAGlB7H,OAAM,SAAU5S,GACfV,QAAQC,IAAIS,OAQsCwK,UAAU,gCAE1C,wBAAIA,UAAU,+BAAd,oBACI,kBAAC,WAAD,CAASA,UAAU,IACf,kBAACkQ,GAAA,EAAD,CAAOhH,IAAI,YAAX,kBACA,kBAACiH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAiBC,UAAU,WACvB,0BAAMrQ,UAAU,oBACZ,kBAAC,IAAD,CAAMA,UAAU,gBAGxB,kBAAC,WAAD,CACIlN,KAAK,OACLmN,KAAK,SACLjJ,GAAG,SACHmJ,SAAU,CAACC,EAAEkQ,KACTd,EAAUpP,EAAEC,OAAOC,WAM/B,kBAAC,cAAD,+BAEJ,kBAAC,WAAD,CAASN,UAAU,IACf,kBAACkQ,GAAA,EAAD,CAAOhH,IAAI,SAAX,mBACA,kBAACiH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAiBC,UAAU,WACvB,0BAAMrQ,UAAU,oBACZ,kBAAC,KAAD,CAAMA,UAAU,gBAGxB,kBAAC,WAAD,CACIlN,KAAK,QACLmN,KAAK,UACLjJ,GAAG,UACHmJ,SAAU,CAACC,EAAEkQ,KACTZ,EAAWtP,EAAEC,OAAOC,WAMhC,kBAAC,cAAD,+BAGJ,kBAAC,WAAD,CAASN,UAAU,QACf,kBAACkQ,GAAA,EAAD,CAAOhH,IAAI,YAAX,oBACA,kBAACiH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAiBC,UAAU,WACvB,0BAAMrQ,UAAU,oBACZ,kBAAC,KAAD,CAAOA,UAAU,gBAGzB,kBAAC,WAAD,CACIlN,KAAK,OACLmN,KAAK,WACLjJ,GAAG,WACHmJ,SAAU,CAACC,EAAEkQ,KACTV,EAAYxP,EAAEC,OAAOC,WAKjC,kBAAC,cAAD,+BAEJ,kBAAC,WAAD,CAASN,UAAU,QACf,kBAACkQ,GAAA,EAAD,CAAOhH,IAAI,YAAX,mBACA,kBAACiH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAiBC,UAAU,WACvB,0BAAMrQ,UAAU,oBACZ,kBAAC,KAAD,CAAOA,UAAU,gBAGzB,kBAAC,WAAD,CACIlN,KAAK,OACLmN,KAAK,UACLE,SAAU,CAACC,EAAEkQ,KACTR,EAAW1P,EAAEC,OAAOC,QAExBtJ,GAAG,aAIX,kBAAC,cAAD,+BAEJ,kBAACuZ,GAAA,EAAD,CAAWvQ,UAAU,+BACjB,kBAACoL,EAAA,EAAD,CAAQpL,UAAU,+BAAlB,cAQhB,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACf,kBAAC,GAAD,CAAkBqP,YAAaA,SC1DxCmB,GAtFD3P,IAAW,IAAD,EACYG,mBAAS,KADrB,mBACf2J,EADe,KACJC,EADI,KAGhBC,EAASC,IACVH,IAAcG,GAAKF,EAAaE,IAGrC,OACE,kBAAC,IAAM/K,SAAP,KACE,kBAACyG,EAAA,EAAD,CAAKxG,UAAU,cACL,kBAACyG,EAAA,EAAD,CAAK3E,GAAI,GACL,kBAACiJ,EAAA,EAAD,CACIC,gBAAiB,CACb,CAAEC,MAAO,WAAYC,KAAM,YAAaC,QAAQ,OAI5D,kBAAC1E,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,cACtB,kBAACoL,EAAA,EAAD,CAAQC,MAAM,WAAU,uBAAGrL,UAAU,iBAArC,cAGV,kBAACsL,EAAA,EAAD,CAAKC,MAAI,EAACvL,UAAU,uDAClB,kBAACwL,EAAA,EAAD,CAASxL,UAAU,YACjB,kBAACyL,EAAA,EAAD,CACEzL,UAAW0L,IAAW,CAAEP,OAAsB,MAAdR,IAChCvH,QAAS,KAAQyH,EAAO,OAF1B,wBAOF,kBAACW,EAAA,EAAD,CAASxL,UAAU,YACjB,kBAACyL,EAAA,EAAD,CACEzL,UAAW0L,IAAW,CAAEP,OAAsB,MAAdR,IAChCvH,QAAS,KAAQyH,EAAO,OAF1B,iBAOF,kBAACW,EAAA,EAAD,CAASxL,UAAU,YACjB,kBAACyL,EAAA,EAAD,CACEzL,UAAW0L,IAAW,CAAEP,OAAsB,MAAdR,IAChCvH,QAAS,KAAQyH,EAAO,OAF1B,UAOF,kBAACW,EAAA,EAAD,CAASxL,UAAU,YACjB,kBAACyL,EAAA,EAAD,CACEzL,UAAW0L,IAAW,CAAEP,OAAsB,MAAdR,IAChCvH,QAAS,KAAQyH,EAAO,OAF1B,iBAOF,kBAACW,EAAA,EAAD,CAASxL,UAAU,YACjB,kBAACyL,EAAA,EAAD,CACEzL,UAAW0L,IAAW,CAAEP,OAAsB,MAAdR,IAChCvH,QAAS,KAAQyH,EAAO,OAF1B,mBAQJ,kBAACc,EAAA,EAAD,CAAY3L,UAAU,kBAAkB2K,UAAWA,GACjD,kBAACiB,EAAA,EAAD,CAASC,MAAM,KAEV,kBAAC,GAAD,OAEL,kBAACD,EAAA,EAAD,CAASC,MAAM,KACd,kBAAC,GAAD,OAED,kBAACD,EAAA,EAAD,CAASC,MAAM,KACb,kBAAC,GAAD,OAEF,kBAACD,EAAA,EAAD,CAASC,MAAM,KACb,kBAAC,GAAD,OAEF,kBAACD,EAAA,EAAD,CAASC,MAAM,KACb,kBAAC,GAAD,U,uCCwBK4E,GAhGM5P,IAAS,IAAD,EACFG,mBAAS,IADP,mBACjB0P,EADiB,KACZC,EADY,OAEH3P,mBAAS,IAFN,mBAEjB4P,EAFiB,KAEZC,EAFY,KAGrBC,EAAalO,YAAaC,GAAUA,EAAMkO,OAAO9d,SAAW,IAC5D+d,EAAgBpO,YAAaC,GAAUA,EAAMoO,UAAUzZ,WAAa,IACpE0S,EAAetH,YAAaC,GAASA,EAAMsE,KAAKpT,MAAQ,IAExDmd,EAAczE,OAASC,OAAO,cAC5BhK,EAAWC,cAChBI,oBAAU,KACPL,EAAS7P,gBACT6P,EAASrL,iBAET,IAYA,OACI,kBAAC,IAAM0I,SAAP,KACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACX,kBAAC,UAAD,CAAQ0H,SAhBVtH,IAClB,IAAI8G,EAAcgD,EAAa9C,SAC/BhH,EAAEuH,iBACF,IAAMwJ,EAAS,CACXT,IAAIA,EACJE,IAAIA,EACJnc,SAASyS,EACTkK,eAAeF,GAEnBxO,EAAS2O,aAAUF,KAOiCnR,UAAU,gCAE1C,wBAAIA,UAAU,+BAAd,0BACI,kBAAC,WAAD,CAASA,UAAU,IACf,kBAACkQ,GAAA,EAAD,CAAOhH,IAAI,YAAX,qBACA,kBAACiH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAiBC,UAAU,WACvB,0BAAMrQ,UAAU,oBACZ,kBAAC,IAAD,CAAMA,UAAU,gBAGxB,4BACRA,UAAU,eACVC,KAAK,MACLqR,UAAQ,EAACnR,SAAU,CAACC,EAAEkQ,KAClBO,EAAOzQ,EAAEC,OAAOC,SAEhB,4BAAQiR,UAAQ,EAACC,UAAQ,GAAzB,UACHR,EAAczQ,IAAKkR,GAChB,4BAAQ/Q,IAAK+Q,EAAWC,IAAKpR,MAAOmR,EAAWC,KAC1CD,EAAWE,cAMhB,kBAAC,cAAD,+BAEJ,kBAAC,WAAD,CAAS3R,UAAU,IACf,kBAACkQ,GAAA,EAAD,CAAOhH,IAAI,YAAX,sBACA,kBAACiH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAiBC,UAAU,WACvB,0BAAMrQ,UAAU,oBACZ,kBAAC,IAAD,CAAMA,UAAU,gBAGxB,4BACRA,UAAU,eACVC,KAAK,MACLqR,UAAQ,EAACnR,SAAU,CAACC,EAAEkQ,KAClBK,EAAOvQ,EAAEC,OAAOC,SAEhB,4BAAQiR,UAAQ,EAACC,UAAQ,GAAzB,UACHV,EAAWvQ,IAAKqR,GACb,4BAAQlR,IAAKkR,EAAOlB,IAAKpQ,MAAOsR,EAAOlB,KAClCkB,EAAOC,UAMZ,kBAAC,cAAD,+BAEJ,kBAACtB,GAAA,EAAD,CAAWvQ,UAAU,+BACjB,kBAACoL,EAAA,EAAD,CAAQtY,KAAK,SAASkN,UAAU,+BAAhC,wB,UCtFhC8G,GAAaC,IAAOtC,QAClBjF,GAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,GAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAACuG,EAAA,EAAD,CACIzT,KAAK,SACLmN,KAAK,SACLjJ,GAAG,aACHgJ,UAAU,gDACVE,aAAcL,EACdM,SAAWC,GAAMN,EAAoBM,EAAEC,OAAOC,QAC7CV,EAAQW,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOX,UAAU,iBAAjB,UAIFY,GAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UAYFS,EAAmB,IACrB,yBAAKvB,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAGrB,OAEY,kBAAC,IAAD,CAAiBwB,YAAU,EAACC,SAAS,aAAaC,KAAMb,EAAMc,QAASC,QAASf,EAAMe,QAASC,QAAM,GAC/FhB,GACE,kBAAC,IAAMd,SAAP,KACI,kBAACyG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,IAClB,kBAACc,EAAcD,EAAMkB,eAI7B,kBAAC,IAAD,iBACQlB,EAAMmB,UADd,CAEIC,UAAU,EACVzC,cAAeA,GAEf2C,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACb3C,oBAAqBA,GACrB4C,gBAAiB,CACb,CAAE5B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMc,QAAUd,EAAMc,QAAQa,OAAS,YA4FlGsP,GA/ES,KAEpB,IAAMpP,EAAWC,cACdhB,EAAUiB,YAAaC,GAAUA,EAAMkP,IAAIC,KAC9CjP,oBAAU,KACNL,EAASuP,iBAGV,IAEH,IAAMrQ,EAAU,CAEZ,CACInC,UAAU,OACVkB,KAAK,cAET,CACIlB,UAAW,aACXkB,KAAM,eAEV,CACIlB,UAAW,SACXkB,KAAM,SACNuC,UAAW,CAACC,EAAa9B,IAGnB,4BACArB,UAAU,8BACRoD,QAAS,IASxB,SAAwB/B,EAAMrK,GAC3BmR,IAAK,CACD9E,MAAO,gBACP1C,KAAM,+BACNuR,KAAM,UACNC,SAAS,EACTC,YAAY,IAEbrK,KAAMsK,IACL,GAAIA,EAAY,CACZ,IAAItL,EAAS,CACTa,OAAQ,SACRC,IAAI,GAAD,OAAKf,GAAL,6BAAoCzF,EAAIrK,KAE7C8Q,IAAMf,GACLgB,MAAK,SAAUC,GACdiK,kBAED7J,OAAM,SAAU5S,GACfV,QAAQC,IAAIS,MAElB2S,IAAK,gCAAiC,CACpC+J,KAAM,iBAGR/J,IAAK,0BAlCgBmK,CAAejR,GAC9BgC,MAAM,UAEP,kBAAC,KAAD,SAqCf,OACI,kBAAC,IAAMtD,SAAP,KACI,kBAACyG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiB9E,QAASA,EAASC,QAASA,QChHjD2Q,GAtDU1R,IAAW,IAAD,EACCG,mBAAS,KADV,mBAC1B2J,EAD0B,KACfC,EADe,KAG3BC,EAASC,IACVH,IAAcG,GAAKF,EAAaE,IAGrC,OACE,kBAAC,IAAM/K,SAAP,KACE,kBAACyG,EAAA,EAAD,CAAKxG,UAAU,cACL,kBAACyG,EAAA,EAAD,CAAK3E,GAAI,GACL,kBAACiJ,EAAA,EAAD,CACIC,gBAAiB,CACb,CAAEC,MAAO,KAAMC,KAAM,MAAOC,QAAQ,OAIhD,kBAAC1E,EAAA,EAAD,CAAK3E,GAAI,EAAG9B,UAAU,cACtB,kBAACoL,EAAA,EAAD,CAAQC,MAAM,WAAU,uBAAGrL,UAAU,iBAArC,cAGV,kBAACsL,EAAA,EAAD,CAAKC,MAAI,EAACvL,UAAU,8DAClB,kBAACwL,EAAA,EAAD,CAASxL,UAAU,YACjB,kBAACyL,EAAA,EAAD,CACEzL,UAAW0L,IAAW,CAAEP,OAAsB,MAAdR,IAChCvH,QAAS,KAAQyH,EAAO,OAF1B,kBAOF,kBAACW,EAAA,EAAD,CAASxL,UAAU,YACjB,kBAACyL,EAAA,EAAD,CACEzL,UAAW0L,IAAW,CAAEP,OAAsB,MAAdR,IAChCvH,QAAS,KAAQyH,EAAO,OAF1B,iBASJ,kBAACc,EAAA,EAAD,CAAY3L,UAAU,kBAAkB2K,UAAWA,GACjD,kBAACiB,EAAA,EAAD,CAASC,MAAM,KAEV,kBAAC,GAAD,OAEL,kBAACD,EAAA,EAAD,CAASC,MAAM,KACd,kBAAC,GAAD,UCtCH2G,GAAQC,IAAMC,KAAK,IAAM,+BACzBC,GAASF,IAAMC,KAAK,IAAM,gCAC1BE,GAAWH,IAAMC,KAAK,IAAM,+BAC5BG,GAAiBJ,IAAMC,KAAK,IAAM,gCAClCI,GAAUL,IAAMC,KAAK,IAAM,gCAI3BK,GAAWN,IAAMC,KAAK,IAAK,gCAK3BM,GAAaP,IAAMC,KAAK,IAAI,8DAE5BlC,GAAMiC,IAAMC,KAAK,IAAI,gCAErBO,GAAUR,IAAMC,KAAK,IAAK,sDAE1BQ,GAAST,IAAMC,KAAK,IAAK,gCAEzBS,GAAQV,IAAMC,KAAK,IAAK,gCAExBU,GAAWX,IAAMC,KAAK,IAAK,gCAE3BW,GAAeZ,IAAMC,KAAK,IAAK,gCAE/BY,GAAYb,IAAMC,KAAK,IAAK,gCAE5Ba,GAAYd,IAAMC,KAAK,IAAK,gCAE5Bc,GAAgB,IAAD,IAAcC,EAAd,EAAGC,UAAsBC,EAAzB,EAAyBA,MAAUC,EAAnC,4CACjB,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQhT,IACJ,IAAKiT,cAED,OAAO,kBAAC,IAAD,CAAUC,GAAI,CAAEC,SAAU,iBAAkBnR,MAAO,CAAEoR,KAAMpT,EAAMqT,aAG5E,IAAMC,EAAeC,cAKrB,OAAIT,IAA+C,IAAtCA,EAAMU,QAAQF,EAAaG,MAG7B,kBAAC,IAAD,CAAUP,GAAI,CAAEC,SAAU,OAI9B,kBAACP,EAAc5S,QAM5B0T,GAAY,CACdrJ,KAAM,IACNsJ,OAAO,EACPb,MAAM,CAAC,QAAQ,UAAU,QAAQ,KAAK,WAAW,YAAY,KAAK,KAAK,UAAU,YACjFD,UAAW,IAAM,kBAAC,IAAD,CAAUK,GAAG,eAC9BU,MAAOjB,IAGLkB,GAAkB,CACpBxJ,KAAM,aACNjL,KAAM,YACNiS,KAAMyC,IACNjB,UAAWX,GACXY,MAAM,CAAC,QAAQ,UAAU,QAAQ,KAAK,WAAW,YAAY,KAAK,KAAK,UAAU,YACjFc,MAAOjB,IAGLoB,GAAmB,CACrB1J,KAAM,cACNjL,KAAM,cACN0T,MAAM,CAAC,QAAQ,UAAU,QAAQ,KAAK,WAAW,YAAY,KAAK,KAAK,UAAU,YACjFD,UAAWV,GACXyB,MAAOjB,IAGLqB,GAAY,CACd3J,KAAM,QACNjL,KAAM,OACNyT,UAAWlD,GACXmD,MAAM,CAAC,QAAQ,UAAU,QAAQ,KAAK,WAAW,YAAY,KAAK,KAAK,UAAU,YACjFc,MAAOjB,IAGLsB,GAAkB,CACpB5J,KAAM,cACNjL,KAAM,aACN0T,MAAM,CAAC,QAAQ,UAAU,QAAQ,KAAK,WAAW,YAAY,KAAK,KAAK,UAAU,YACjFD,UAAW/M,GACX8N,MAAOjB,IAGLuB,GAAgB,CAClB7J,KAAM,YACNjL,KAAM,WACN0T,MAAM,CAAC,QAAQ,UAAU,QAAQ,KAAK,WAAW,YAAY,KAAK,KAAK,UAAU,YACjFD,UAAWN,GACXqB,MAAOjB,IAGLwB,GAAmB,CACrB9J,KAAM,oBACNjL,KAAM,WACN0T,MAAM,CAAC,QAAQ,UAAU,QAAQ,KAAK,WAAW,YAAY,KAAK,KAAK,UAAU,YACjFD,UAAWL,GACXoB,MAAOjB,IAGLyB,GAAiB,CACnB/J,KAAM,YACNjL,KAAM,WACNiS,KAAMyC,IACNjB,UAAWnH,GACXoH,MAAM,CAAC,QAAQ,UAAU,QAAQ,KAAK,WAAW,YAAY,KAAK,KAAK,UAAU,YACjFc,MAAOjB,IAGL0B,GAAW,CACbhK,KAAM,MACNjL,KAAM,KACNiS,KAAMyC,IACNjB,UAAWhJ,GACXiJ,MAAM,CAAC,QAAQ,UAAU,QAAQ,KAAK,WAAW,YAAY,KAAK,KAAK,UAAU,YACjFc,MAAOjB,IAIL2B,GAAe,CACjBjK,KAAM,UACNjL,KAAM,SACNiS,KAAMyC,IACNjB,UAAWT,GACXwB,MAAOjB,GACPG,MAAM,CAAC,QAAQ,UAAU,QAAQ,KAAK,WAAW,YAAY,KAAK,KAAK,UAAU,aAG/EyB,GAAgB,CAClBlK,KAAM,YACNjL,KAAM,YACN0T,MAAM,CAAC,QAAQ,UAAU,QAAQ,KAAK,WAAW,YAAY,KAAK,KAAK,UAAU,YACjFD,UAAWjR,KACXgS,MAAOjB,IAGL6B,GAAwB,CAC1BnK,KAAM,mBACNjL,KAAM,oBACNiS,KAAMyC,IACNjB,UAAW4B,GACXb,MAAOjB,GACPG,MAAM,CAAC,QAAQ,UAAU,QAAQ,KAAK,WAAW,YAAY,KAAK,KAAK,UAAU,aAG/E4B,GAAe,CACjBrK,KAAM,UACNjL,KAAM,SACNiS,KAAMyC,IACNjB,UAAWR,GACXuB,MAAOjB,GACPG,MAAM,CAAC,QAAQ,UAAU,QAAQ,KAAK,WAAW,YAAY,KAAK,KAAK,UAAU,aAG/E6B,GAAgB,CAClBtK,KAAM,SACNjL,KAAM,QACNiS,KAAMyC,IACNjB,UAAWP,GACXsB,MAAOjB,GACPG,MAAM,CAAC,QAAQ,UAAU,QAAQ,KAAK,WAAW,YAAY,KAAK,KAAK,UAAU,aAG/E8B,GAAa,CACfvK,KAAM,cACNjL,KAAM,cACNiS,KAAMyC,IACNjB,UAAWH,GACXkB,MAAOjB,GACPG,MAAM,CAAC,QAAQ,UAAU,QAAQ,KAAK,WAAW,YAAY,KAAK,KAAK,UAAU,aAG/E+B,GAAkB,CACpBxK,KAAM,aACNjL,KAAM,YACNiS,KAAMyC,IACNjB,UAAWJ,GACXmB,MAAOjB,GACPG,MAAM,CAAC,QAAQ,UAAU,QAAQ,KAAK,WAAW,YAAY,KAAK,KAAK,UAAU,aAa/EgC,GAAa,CACfzK,KAAM,WACNjL,KAAM,OACN2V,SAAU,CACN,CACI1K,KAAM,iBACNjL,KAAM,QACNyT,UAAWlB,GACXiC,MAAOoB,KAEX,CACI3K,KAAM,kBACNjL,KAAM,SACNyT,UAAWf,GACX8B,MAAOoB,KAEX,CACI3K,KAAM,oBACNjL,KAAM,WACNyT,UAAWd,GACX6B,MAAOoB,KAEX,CACI3K,KAAM,mBACNjL,KAAM,UACNyT,UAAWZ,GACX2B,MAAOoB,KAEX,CACI3K,KAAM,2BACNjL,KAAM,kBACNyT,UAAWb,GACX4B,MAAOoB,OAMbC,GAAgBC,IAClB,IAAIC,EAAa,GAUjB,OARAD,EAASA,GAAU,IACZE,QAAQC,IACXF,EAAWG,KAAKD,GAEa,qBAAlBA,EAAKN,WACZI,EAAa,IAAIA,KAAeF,GAAcI,EAAKN,cAGpDI,GAyBLI,GAAsB,CAAC1B,GAAiBO,GAAgBC,GAAUC,GAAcE,GAAsBE,GAAaC,GAAcC,GAAYC,IAC7IW,GAAmBP,GAtBP,CACdH,GACApB,GACAG,GACAO,GACAC,GACAC,GACAE,GACAE,GACAC,GACAC,GAEAb,GACAE,GACAD,GACAO,GACAL,GACAC,GACAU,KCxREY,GAAU,IAAM,8BAGhBC,GAAaC,IAAS,CACxBC,OAAQ,IAAM,+BACd5C,OAAO6C,EAAQ7V,GACX,IAAI4S,EAAYiD,EAAOC,QACvB,OAAO,kBAAClD,EAAc5S,IAE1ByV,aAGEM,GAAiBJ,IAAS,CAC5BC,OAAQ,IAAM,+BACd5C,OAAO6C,EAAQ7V,GACX,IAAI4S,EAAYiD,EAAOC,QACvB,OAAO,kBAAClD,EAAc5S,IAE1ByV,aAGEO,GAAmBL,IAAS,CAC9BC,OAAQ,IAAM,+BACd5C,OAAO6C,EAAQ7V,GACX,IAAI4S,EAAYiD,EAAOC,QACvB,OAAO,kBAAClD,EAAc5S,IAE1ByV,aAGJ,MAAMQ,WAAerD,YAAW,eAAD,oBAG3BsD,UAAY,KACR,IAAKjD,cAAuB,OAAOyC,GAEnC,IAAIS,EAAYJ,GAEhB,OAAQK,KAAKpW,MAAMlJ,OAAOuf,YACtB,KAAKC,IACDH,EAAYH,GACZ,MACJ,QACIG,EAAYJ,GAGpB,OAAOI,GAGXnD,SACI,IAAMuD,EAASH,KAAKF,YAGpB,OAAO,kBAAC,IAAD,KACH,kBAACK,EAAWH,KAAKpW,MACb,kBAAC,IAAD,KACKkV,GAAOxV,IAAI,CAACkU,EAAO4C,IAEX5C,EAAMmB,SAOD,KANF,kBAACnB,EAAMA,MAAP,CACI/T,IAAK2W,EACLnM,KAAMuJ,EAAMvJ,KACZyI,MAAOc,EAAMd,MACba,MAAOC,EAAMD,MACbd,UAAWe,EAAMf,iBAUrD,IAOe4D,eAPSzU,IACb,CACHlL,OAAQkL,EAAMuU,OACdrjB,KAAM8O,EAAMsE,KAAKpT,OAMrB,KAFWujB,CAGbR,I,QC/FK,WACH,IAAIljB,EAAQ,CAAC,CAAEoD,GAAI,EAAGvC,SAAU,OAAQC,SAAU,OAAQ6iB,UAAW,OAAQC,SAAU,OAAQ3e,KAAM,UACjG4e,EAAYC,OAAOC,MACvBD,OAAOC,MAAQ,SAAS9P,EAAK+P,GACzB,OAAO,IAAIC,QAAQ,CAACC,EAASC,KAEzBC,WAAW,KAEP,GAAInQ,EAAIoQ,SAAS,wBAA0C,SAAhBL,EAAKhQ,OAAhD,CAEI,IAAIsQ,EAASjQ,KAAKkQ,MAAMP,EAAKQ,MAGzBC,EAAgBzkB,EAAM0kB,OAAOvkB,GACtBA,EAAKU,WAAayjB,EAAOzjB,UAAYV,EAAKW,WAAawjB,EAAOxjB,UAGzE,GAAI2jB,EAAc7V,OAAQ,CAEtB,IAAIzO,EAAOskB,EAAc,GACrBE,EAAe,CACfvhB,GAAIjD,EAAKiD,GACTvC,SAAUV,EAAKU,SACf8iB,UAAWxjB,EAAKwjB,UAChBC,SAAUzjB,EAAKyjB,SACf3e,KAAM,QACN2f,MACI,+VAERV,EAAQ,CAAEW,IAAI,EAAMC,KAAM,IAAMH,SAIhCR,EAAO,0CAMf,GAAIlQ,EAAIoQ,SAAS,oBAAsC,SAAhBL,EAAKhQ,OAA5C,CAEI,IAAIsQ,EAASjQ,KAAKkQ,MAAMP,EAAKQ,MAF8B,EAK7BF,EAAOhjB,SAASyjB,MAAM,KAA9CpB,EALqD,EAKrDA,UAAWC,EAL0C,EAK1CA,SACboB,EAAU,CACV5hB,GAAIpD,EAAM4O,OAAS,EACnB/N,SAAU8iB,EACV7iB,SAAUwjB,EAAOxjB,SACjB6iB,UAAWA,EACXC,SAAUA,EACV3e,KAAM,SAEVjF,EAAMuiB,KAAK,CAAEyC,YAEb,IAAIL,EAAe,CACfvhB,GAAI4hB,EAAQ5hB,GACZvC,SAAUmkB,EAAQnkB,SAClB8iB,UAAWqB,EAAQrB,UACnBC,SAAUoB,EAAQpB,SAClB3e,KAAM+f,EAAQ/f,KACd2f,MACI,+VAERV,EAAQ,CAAEW,IAAI,EAAMC,KAAM,IAAMH,SAKpC,GAAI1Q,EAAIoQ,SAAS,0BAA4C,SAAhBL,EAAKhQ,OAAlD,CAEI,IAAIsQ,EAASjQ,KAAKkQ,MAAMP,EAAKQ,MAO7B,GAJoBxkB,EAAM0kB,OAAOvkB,GACtBA,EAAKU,WAAayjB,EAAOzjB,UAGlB+N,OAAQ,CACtB,IAAI+V,EAAe,CACfM,QAAS,qEAEbf,EAAQ,CAAEW,IAAI,EAAMC,KAAM,IAAMH,SAGhCR,EAAO,2EAMXlQ,EAAIoQ,SAAS,WAA6B,QAAhBL,EAAKhQ,OAG3BgQ,EAAK5H,SAED,uWADJ4H,EAAK5H,QAAQ8I,cAGbhB,EAAQ,CAAEW,IAAI,EAAMC,KAAM,IAAM9kB,IAGhCmkB,EAAO,gBAOfN,EAAU5P,EAAK+P,GAAM7P,KAAKC,GAAY8P,EAAQ9P,KAC/C,QC1Ff+Q,GAKA,MAAMC,WAAYvF,YAChBI,SACE,OAAO,kBAAC,GAAD,OAIImF,UClBKC,QACW,cAA7BvB,OAAOxD,SAASgF,UAEe,UAA7BxB,OAAOxD,SAASgF,UAEhBxB,OAAOxD,SAASgF,SAASC,MACvB,2D,wCCLAC,GAAa,CACflC,WAAYC,IACZkC,YAAalC,IACbmC,iBAAkBnC,IAClBoC,gBAAiBpC,IACjB7e,kBAAkB,GA8CP8e,GA1CA,CAACvU,EAAQuW,GAAYI,KAChC,OAAQA,EAAO1mB,MACX,KAAK8E,KACD,OAAO,6BACAiL,GADP,IAEIqU,WAAYsC,EAAOrmB,UAE3B,KAAK4E,KACD,OAAO,6BACA8K,GADP,IAEIwW,YAAaG,EAAOrmB,UAE5B,KAAK+E,KACD,OAAO,6BACA2K,GADP,IAEIyW,iBAAkBE,EAAOrmB,UAEjC,KAAKkF,KACD,OAAO,6BACAwK,GADP,IAEI0W,gBAAiBC,EAAOrmB,UAEhC,KAAKmM,KACD,OAAO,6BACAuD,GADP,IAEIvK,kBAAmBuK,EAAMvK,mBAEjC,KAAKC,KACD,OAAO,6BACAsK,GADP,IAEIvK,kBAAkB,IAE1B,KAAKG,KACD,OAAO,6BACAoK,GADP,IAEIvK,kBAAkB,IAE1B,QACI,OAAOuK,I,SC5CbuW,GAAa,CACfrlB,KAAMqgB,cACNkC,SAAS,GAgCEnP,GA5BF,CAACtE,EAAQuW,GAAYI,KAE9B,OAAQA,EAAO1mB,MACX,KAAK8B,KACD,OAAO,6BAAKiO,GAAZ,IAAmByT,SAAS,IAChC,KAAKthB,KACD,OAAO,6BAAK6N,GAAZ,IAAmB9O,KAAMylB,EAAOrmB,QAASmjB,SAAS,EAAO9gB,MAAO,OACpE,KAAK4J,KACD,OAAO,6BAAKyD,GAAZ,IAAmBrN,MAAOgkB,EAAOrmB,QAASmjB,SAAS,IACvD,KAAKlhB,KACD,OAAO,6BAAKyN,GAAZ,IAAmByT,SAAS,IAChC,KAAKhhB,KACD,OAAO,6BAAKuN,GAAZ,IAAmB9O,KAAMylB,EAAOrmB,QAASmjB,SAAS,EAAO9gB,MAAO,OACpE,KAAKC,KACD,OAAO,6BAAKoN,GAAZ,IAAmBrN,MAAOgkB,EAAOrmB,QAASmjB,SAAS,IACvD,KAAK1gB,KACD,OAAO,6BAAKiN,GAAZ,IAAmB9O,KAAM,OAC7B,KAAKsL,KACD,OAAO,6BAAKwD,GAAZ,IAAmByT,SAAS,IAChC,KAAKvgB,KACD,OAAO,6BAAK8M,GAAZ,IAAmB/M,oBAAqB0jB,EAAOrmB,QAASmjB,SAAS,EAAO9gB,MAAO,OACnF,KAAKS,KACD,OAAO,6BAAK4M,GAAZ,IAAmBrN,MAAOgkB,EAAOrmB,QAASmjB,SAAS,IACvD,QACI,OAAO,gBAAKzT,K,SCtBT4W,GAfC,CAAC5W,EAAQ,GAAI2W,KACzB,OAAQA,EAAO1mB,MACX,KAAK4J,KACD,OAAO8c,EAAOrmB,QAClB,KAAK0J,KACD,OAAO,6BAAKgG,GAAU2W,EAAOrmB,SACjC,KAAK4J,KACD,OAAO,gBAAK8F,GAChB,KAAK3F,KACD,OAAO,6BAAK2F,GAAU2W,EAAOrmB,SACjC,QACI,OAAO0P,I,SClBbuW,GAAa,CACfxlB,MAAO,GACPG,KAAK,GACLuiB,SAAQ,EACR9gB,MAAM,I,SCDJ4jB,GAAa,CACf/iB,aAAc,GACdK,YAAY,GACZG,YAAa,GACbyf,SAAQ,EACRxf,IAAI,I,SCRFsiB,GAAa,CACfnmB,QAAS,GACTM,cAAc,GACd+iB,SAAQ,G,SCJN8C,GAAa,CACfvd,WAAY,GACZya,SAAQ,G,SCDN8C,GAAa,CACfxS,WAAY,GACZ0P,SAAQ,G,SCSN8C,GAAa,CACfrU,KAAM,GACNG,MAAO,GACPG,aAAa,GACbG,SAAS,GACTG,OAAO,GACP2Q,SAAS,G,SCNP8C,GAAa,CACf5V,YAAa,GACbG,gBAAiB,GACjBG,WAAW,GACXG,cAAc,GACdG,YAAY,GACZkS,SAAS,G,SCjBP8C,GAAa,CACfze,MAAO,GACPG,WAAW,GACXwb,SAAQ,G,SCHN8C,GAAa,CACfvgB,KAAM,GACNyd,SAAQ,EACRtd,WAAW,I,SCHTogB,GAAa,CACfhc,MAAO,GACPkZ,SAAQ,G,SCFN8C,GAAa,CACf9kB,QAAS,GACTgiB,SAAQ,G,SCFN8C,GAAa,CACfpH,IAAK,GACL0H,UAAU,GACVpD,SAAQ,G,SCJN8C,GAAa,CACf5hB,UAAW,GACX8e,SAAQ,G,SCCN8C,GAAa,CACf9S,UAAW,GACXT,eAAgB,GAChByQ,SAAQ,EACRvQ,iBAAiB,GACjBE,aAAa,GACbE,aAAa,I,SCRXiT,GAAa,CACfld,SAAU,GACVoa,SAAQ,G,SCFN8C,GAAa,CACf7f,SAAU,GACVG,QAAQ,GACR4c,SAAQ,EACR9gB,MAAM,I,SCJJ4jB,GAAa,CACfnf,OAAQ,GACRG,MAAM,GACNkc,SAAQ,EACR9gB,MAAM,I,SCJJ4jB,GAAa,CACfje,MAAO,GACPG,KAAK,GACLgb,SAAQ,EACR9gB,MAAM,I,SCJJ4jB,GAAa,CACf7c,iBAAkB,GAClB+Z,SAAQ,GCqBGqD,gBAAgB,CAC3BxS,QACAsS,WACArC,UACAtU,MnBpBU,CAAED,EAAQuW,GAAYI,KAChC,OAAQA,EAAO1mB,MACX,KAAKY,KACD,oCACOmP,GADP,IAGIyT,SAAQ,IAEhB,KAAMziB,KACF,oCACOgP,GADP,IAEIjP,MAAO4lB,EAAOrmB,QACdmjB,SAAQ,IAEZ,KAAMpiB,KACN,oCACO2O,GADP,IAEI9O,KAAMylB,EAAOrmB,QACbmjB,SAAQ,IAEZ,KAAKjS,KACD,oCACOxB,GADP,IAEIrN,MAAOgkB,EAAOrmB,UAE1B,QACI,OAAO0P,ImBLf+W,alBjBU,CAAE/W,EAAQuW,GAAYI,KAChC,OAAQA,EAAO1mB,MACX,KAAKqD,KACD,oCACO0M,GADP,IAEIyT,SAAQ,IAEhB,KAAMhgB,KACF,oCACOuM,GADP,IAEIxM,aAAcmjB,EAAOrmB,QACrBmjB,SAAQ,IAEZ,KAAK9f,KACL,oCACOqM,GADP,IAEIyT,SAAQ,IAEhB,KAAM3f,KACF,oCACOkM,GADP,IAEInM,YAAa8iB,EAAOrmB,QACpBmjB,SAAQ,IAEZ,KAAK/W,KACL,oCACOsD,GADP,IAGIyT,SAAQ,IAEhB,KAAMvf,KACF,oCACO8L,GADP,IAEIhM,YAAa2iB,EAAOrmB,QACpBmjB,SAAQ,IAEZ,KAAKpf,KACD,oCACO2L,GADP,IAEIgX,OAAO,IAEf,KAAKziB,KACD,oCACOyL,GADP,IAEIhM,YAAa,KACbgjB,OAAO,IAEnB,QACI,OAAOhX,IkB9BfkO,OjBvBU,CAAElO,EAAQuW,GAAYI,KAChC,OAAQA,EAAO1mB,MACX,KAAKC,KACD,oCACO8P,GADP,IAGIyT,SAAQ,IAEhB,KAAMpjB,KACF,oCACO2P,GADP,IAEI5P,QAASumB,EAAOrmB,QAChBmjB,SAAQ,IAEZ,KAAM9iB,KACN,oCACOqP,GADP,IAEItP,cAAeimB,EAAOrmB,QACtBmjB,SAAQ,IAEhB,QACI,OAAOzT,IiBGfiX,UhB1BU,CAAEjX,EAAQuW,GAAYI,KAChC,OAAQA,EAAO1mB,MACX,KAAK6I,KACD,oCACOkH,GADP,IAGIyT,SAAQ,IAEhB,KAAMxa,KACF,oCACO+G,GADP,IAEIhH,WAAY2d,EAAOrmB,QACnBmjB,SAAQ,IAEhB,QACI,OAAOzT,IgBYf8D,Wf1BU,CAAE9D,EAAQuW,GAAYI,KAChC,OAAQA,EAAO1mB,MACX,KAAKinB,KACD,oCACOlX,GADP,IAGIyT,SAAQ,IAEhB,KAAM0D,KACF,oCACOnX,GADP,IAEI+D,WAAY4S,EAAOrmB,QACnBmjB,SAAQ,IAEhB,QACI,OAAOzT,IeYf2N,KdZW,CAAC3N,EAAQuW,GAAYI,KAChC,OAAQA,EAAO1mB,MACX,KAAKkL,KACD,OAAO,6BACA6E,GADP,IAGIyT,SAAS,IAEjB,KAAKrY,KACD,OAAO,6BACA4E,GADP,IAEIkC,KAAMyU,EAAOrmB,QACbmjB,SAAS,IAEjB,KAAKpY,KACD,OAAO,6BACA2E,GADP,IAGIyT,SAAS,IAEjB,KAAKnY,KACD,OAAO,6BACA0E,GADP,IAEIqC,MAAOsU,EAAOrmB,QACdmjB,SAAS,IAEb,KAAKlY,KACD,OAAO,6BACAyE,GADP,IAGIyT,SAAS,IAEjB,KAAKjY,KACD,OAAO,6BACAwE,GADP,IAEIwC,aAAcmU,EAAOrmB,QACrBmjB,SAAS,IAEb,KAAKhY,KACD,OAAO,6BACAuE,GADP,IAGIyT,SAAS,IAEjB,KAAK/X,KACD,OAAO,6BACAsE,GADP,IAEI2C,SAAUgU,EAAOrmB,QACjBmjB,SAAS,IAEb,KAAK9X,KACD,OAAO,6BACAqE,GADP,IAGIyT,SAAS,IAEjB,KAAK7X,KACD,OAAO,6BACAoE,GADP,IAEI8C,OAAQ6T,EAAOrmB,QACfmjB,SAAS,IAE7B,QACI,OAAOzT,IclDf0J,SbbW,CAAC1J,EAAQuW,GAAYI,KAChC,OAAQA,EAAO1mB,MACX,KAAKwK,KACD,OAAO,6BACAuF,GADP,IAEIyT,SAAS,IAEjB,KAAK/Y,KACD,OAAO,6BACAsF,GADP,IAEIW,YAAagW,EAAOrmB,QACpBmjB,SAAS,IAEjB,KAAK9Y,KACD,OAAO,6BACAqF,GADP,IAEIyT,SAAS,IAEjB,KAAK7Y,KACD,OAAO,6BACAoF,GADP,IAEIc,gBAAiB6V,EAAOrmB,QACxBmjB,SAAS,IAEb,KAAK5Y,KACL,OAAO,6BACAmF,GADP,IAEIyT,SAAS,IAEjB,KAAK3Y,KACD,OAAO,6BACAkF,GADP,IAEIiB,WAAY0V,EAAOrmB,QACnBmjB,SAAS,IAEb,KAAK1Y,KACD,OAAO,6BACAiF,GADP,IAEIyT,SAAS,IAEjB,KAAKzY,KACD,OAAO,6BACAgF,GADP,IAEIoB,cAAeuV,EAAOrmB,QACtBmjB,SAAS,IAEb,KAAKxY,KACL,OAAO,6BACA+E,GADP,IAEIyT,SAAS,IAEjB,KAAKvY,KACD,OAAO,6BACA8E,GADP,IAEIuB,YAAaoV,EAAOrmB,QACpBmjB,SAAS,IAErB,QACI,OAAOzT,Ia5CfoX,MZ5BU,CAAEpX,EAAQuW,GAAYI,KAChC,OAAQA,EAAO1mB,MACX,KAAK2H,KACD,oCACOoI,GADP,IAGIyT,SAAQ,IAEhB,KAAM1b,KACF,oCACOiI,GADP,IAEIlI,MAAO6e,EAAOrmB,QACdmjB,SAAQ,IAEZ,KAAMrb,KACF,oCACO4H,GADP,IAEI/H,WAAY0e,EAAOrmB,QACnBmjB,SAAQ,IAEpB,QACI,OAAOzT,IYQfyR,KX7BU,CAAEzR,EAAQuW,GAAYI,KAChC,OAAQA,EAAO1mB,MACX,KAAK6F,KACD,oCACOkK,GADP,IAGIyT,SAAQ,IAEhB,KAAMxd,KACF,oCACO+J,GADP,IAEIhK,KAAM2gB,EAAOrmB,QACbmjB,SAAQ,IAEZ,KAAMnd,KACN,oCACO0J,GADP,IAEI7J,WAAYwgB,EAAOrmB,QACnBmjB,SAAQ,IAEhB,QACI,OAAOzT,IWSfqX,MV/BU,CAAErX,EAAQuW,GAAYI,KAChC,OAAQA,EAAO1mB,MACX,KAAKqnB,KACD,oCACOtX,GADP,IAGIyT,SAAQ,IAEhB,KAAMjZ,KACF,oCACOwF,GADP,IAEIzF,MAAOoc,EAAOrmB,QACdmjB,SAAQ,IAEhB,QACI,OAAOzT,IUiBfoE,QThCU,CAAEpE,EAAQuW,GAAYI,KAChC,OAAQA,EAAO1mB,MACX,KAAKsB,KACD,oCACOyO,GADP,IAGIyT,SAAQ,IAEhB,KAAM/hB,KACF,oCACOsO,GADP,IAEIvO,QAASklB,EAAOrmB,QAChBmjB,SAAQ,IAEhB,QACI,OAAOzT,ISkBfkP,IRhCU,CAAElP,EAAQuW,GAAYI,KAChC,OAAQA,EAAO1mB,MACX,KAAK4R,KACD,oCACO7B,GADP,IAGIyT,SAAQ,IAEhB,KAAM3R,KACF,oCACO9B,GADP,IAEImP,IAAKwH,EAAOrmB,QACZmjB,SAAQ,IAEZ,KAAMzR,KACN,oCACOhC,GADP,IAEI6W,UAAWF,EAAOrmB,QAClBmjB,SAAQ,IAEhB,QACI,OAAOzT,IQYfoO,UPnCU,CAAEpO,EAAQuW,GAAYI,KAChC,OAAQA,EAAO1mB,MACX,KAAKwE,KACD,oCACOuL,GADP,IAGIyT,SAAQ,IAEhB,KAAM7e,KACF,oCACOoL,GADP,IAEIrL,UAAWgiB,EAAOrmB,QAClBmjB,SAAQ,IAEhB,QACI,OAAOzT,IOqBfqQ,ON7BU,CAAErQ,EAAQuW,GAAYI,KAChC,OAAQA,EAAO1mB,MACX,KAAKoM,KACD,oCACO2D,GADP,IAGIyT,SAAQ,IAEhB,KAAMnX,KACF,oCACO0D,GADP,IAEIyD,UAAWkT,EAAOrmB,QAClBmjB,SAAQ,IAEZ,KAAK5X,KACL,oCACOmE,GADP,IAGIyT,SAAQ,IAEhB,KAAM3X,KACF,oCACOkE,GADP,IAEIgD,eAAgB2T,EAAOrmB,QACvBmjB,SAAQ,IAEZ,KAAK1X,KACD,oCACOiE,GADP,IAGIyT,SAAQ,IAEhB,KAAMzX,KACF,oCACOgE,GADP,IAEIkD,iBAAkByT,EAAOrmB,QACzBmjB,SAAQ,IAEZ,KAAKxX,KACL,oCACO+D,GADP,IAGIyT,SAAQ,IAEhB,KAAMvX,KACF,oCACO8D,GADP,IAEIoD,aAAcuT,EAAOrmB,QACrBmjB,SAAQ,IAEZ,KAAKtX,KACD,oCACO6D,GADP,IAGIyT,SAAQ,IAEhB,KAAMrX,KACF,oCACO4D,GADP,IAEIsD,aAAcqT,EAAOrmB,QACrBmjB,SAAQ,IAExB,QACI,OAAOzT,IMjCfuX,SLpCU,CAAEvX,EAAQuW,GAAYI,KAChC,OAAQA,EAAO1mB,MACX,KAAKkJ,KACD,oCACO6G,GADP,IAGIyT,SAAQ,IAEhB,KAAMna,KACF,oCACO0G,GADP,IAEI3G,SAAUsd,EAAOrmB,QACjBmjB,SAAQ,IAEhB,QACI,OAAOzT,IKsBfwX,aJnCU,CAAExX,EAAQuW,GAAYI,KAChC,OAAQA,EAAO1mB,MACX,KAAKuG,KACD,oCACOwJ,GADP,IAGIyT,SAAQ,IAEhB,KAAM9c,KACF,oCACOqJ,GADP,IAEItJ,SAAUigB,EAAOrmB,QACjBmjB,SAAQ,IAEZ,KAAMzc,KACN,oCACOgJ,GADP,IAEInJ,QAAS8f,EAAOrmB,QAChBmjB,SAAQ,IAEZ,KAAKjS,KACD,oCACOxB,GADP,IAEIrN,MAAOgkB,EAAOrmB,UAE1B,QACI,OAAO0P,IIUfyX,iBHpCU,CAAEzX,EAAQuW,GAAYI,KAChC,OAAQA,EAAO1mB,MACX,KAAKiH,KACD,oCACO8I,GADP,IAGIyT,SAAQ,IAEhB,KAAMpc,KACF,oCACO2I,GADP,IAEI5I,OAAQuf,EAAOrmB,QACfmjB,SAAQ,IAEZ,KAAM/b,KACN,oCACOsI,GADP,IAEIzI,MAAOof,EAAOrmB,QACdmjB,SAAQ,IAEZ,KAAKjS,KACD,oCACOxB,GADP,IAEIrN,MAAOgkB,EAAOrmB,UAE1B,QACI,OAAO0P,IGWf0X,gBFrCU,CAAE1X,EAAQuW,GAAYI,KAChC,OAAQA,EAAO1mB,MACX,KAAKwR,KACD,oCACOzB,GADP,IAGIyT,SAAQ,IAEhB,KAAMlb,KACF,oCACOyH,GADP,IAEI1H,MAAOqe,EAAOrmB,QACdmjB,SAAQ,IAEZ,KAAM7a,KACN,oCACOoH,GADP,IAEIvH,KAAMke,EAAOrmB,QACbmjB,SAAQ,IAEZ,KAAKjS,KACD,oCACOxB,GADP,IAEIrN,MAAOgkB,EAAOrmB,UAE1B,QACI,OAAO0P,IEYf2X,iBDxCU,CAAE3X,EAAQuW,GAAYI,KAChC,OAAQA,EAAO1mB,MACX,KAAKuJ,KACD,oCACOwG,GADP,IAGIyT,SAAQ,IAEhB,KAAM9Z,KACF,oCACOqG,GADP,IAEItG,iBAAkBid,EAAOrmB,QACzBmjB,SAAQ,IAEhB,QACI,OAAOzT,M,qCEjBb4X,GAAY,CAAC5S,EAAKjI,EAAU,KACvB+X,MAAM9P,EAAKjI,GACbmI,KAAKC,IACF,GAAyB,OAApBA,EAAS0S,OACV,MAAM1S,EAAS0Q,OAEnB,OAAO1Q,EAAS0Q,SAEnB3Q,KAAK2Q,GACKA,GAEVtQ,MAAM5S,IACH,MAAMA,I,uBCcRmlB,I,aAsCAC,I,aAYAC,I,aA6BAC,I,aA0BOC,I,aAIAC,I,aAIAC,I,aAIAC,I,aAIPC,IAlIJC,GAAarnB,IACf,IAAIsnB,EAAU,IAAIC,KACdvnB,EAAMsnB,EAAQE,IAAI,OAAQtT,KAAKC,UAAUnU,GAAO,CAAEmX,KAAM,MACvDmQ,EAAQG,OAAO,OAAQ,CAAEtQ,KAAM,OAMxC,SAAUyP,IAAQxnB,SAAS,SAAEsB,EAAF,SAAYC,EAAZ,QAAsBiB,KAAjD,0EASwB,OARdiK,EAAU,CACZwY,KAAMnQ,KAAKC,UAAU,CAAEzT,WAAUC,aACjCkT,OAAQ,OACRoI,QAAS,CAAE,eAAgB,qBAJnC,kBAS8B1U,aAAKmf,GAAW,qCAAsC7a,GATpF,OAaQ,OAJKoI,EATb,OAUQoT,GAAWpT,EAASyC,MACpB3V,QAAQC,IAAI,gBAAiBiT,EAASyC,KAAKrD,UAC3CqU,aAAaC,QAAQ,WAAY1T,EAASyC,KAAKrD,UAZvD,UAacuU,aAAI9mB,aAAiBmT,EAASyC,OAb5C,0DAiBQtC,IAAK,CACD9E,MAAO,4BACP1C,KAAM,WACN7N,KAAM,UACPiV,MAAK,WACJ2P,OAAOxD,SAAW,oBAQtBkH,GAAW,MA9BnB,uDAsCA,SAAUR,IAASznB,SAAS,QAAEwC,KAA9B,kEAGQ,OAHR,SAEQylB,GAAW,MAFnB,SAGc9f,aAAK,KACP3F,EAAQwgB,KAAK,oBAJzB,2GAYA,SAAU0E,IAAW1nB,SAAS,SAAE+B,EAAF,MAAYC,EAAZ,SAAmBT,KAAjD,4EAQyB,OAPfkL,EAAU,CACZwY,KAAMnQ,KAAKC,UAAU,CAAEhT,WAAUC,QAAOT,aACxCkT,OAAQ,OACRoI,QAAS,CAAE,eAAgB,qBAJnC,kBAQ+B1U,aAAKmf,GAAW,kBAAmB7a,GARlE,OASQ,OADMoI,EARd,gBASc2T,aAAItmB,aAAoB2S,IATtC,4DAYgB,KAAM0S,OAZtB,OAaiB,MAbjB,QAgBiB,MAhBjB,gCAcgB7B,EAAU,wBAd1B,oCAiBgBA,EAAU,sBAjB1B,6BAoBgBA,EAAO,KApBvB,QAsBQ,OAtBR,UAsBc8C,aAAIpmB,aAAmBsjB,IAtBrC,sDA6BA,SAAUiC,IAAiB3nB,SAAS,SAAEsB,KAAtC,4EAQyB,OAPfmL,EAAU,CACZwY,KAAMnQ,KAAKC,UAAU,CAAEzT,aACvBmT,OAAQ,OACRoI,QAAS,CAAE,eAAgB,qBAJnC,kBAQ+B1U,aAAKmf,GAAW,wBAAyB7a,GARxE,OASQ,OADMoI,EARd,gBASc2T,aAAI9lB,aAAsBmS,EAAS6Q,UATjD,4DAYgB,KAAM6B,OAZtB,OAaiB,MAbjB,QAgBiB,MAhBjB,gCAcgB7B,EAAU,wBAd1B,oCAiBgBA,EAAU,sBAjB1B,6BAoBgBA,EAAO,KApBvB,QAsBQ,OAtBR,UAsBc8C,aAAI3lB,aAAqB6iB,IAtBvC,sDA0BO,SAAUkC,KAAV,kEACH,OADG,SACGa,aAAUhnB,KAAY+lB,IADzB,wCAIA,SAAUK,KAAV,kEACH,OADG,SACGY,aAAUhmB,KAAaglB,IAD1B,wCAIA,SAAUK,KAAV,kEACH,OADG,SACGW,aAAUxmB,KAAeylB,IAD5B,wCAIA,SAAUK,KAAV,kEACH,OADG,SACGU,aAAUvc,KAAiByb,IAD9B,wCAIP,SAAUK,KAAV,kEACI,OADJ,SACUU,aAAI,CAACC,aAAKf,IAAiBe,aAAKd,IAAkBc,aAAKb,IAAoBa,aAAKZ,MAD1F,wCAIeC,U,uBCnGLzjB,I,aAmBAG,I,aAgBAkkB,I,aAcAC,I,aAqBAC,I,aASA3jB,I,aASAE,I,aASO0jB,I,aAIAC,I,aAIAC,I,aAIAC,I,aAIAC,I,aAIAC,I,aAIAC,I,aAIPC,IAjKV,SAASC,GAAoBC,EAAWrc,GAEpC,OADIsc,SAASxE,MAAMwE,SAASxE,KAAKyE,aAAaF,EAAWrc,IAClD,EAOX,SAASwc,GAAgBC,EAAUvD,EAAS,UACxC,OAAQA,GACJ,IAAK,MACGoD,SAASxE,MAAMwE,SAASxE,KAAK4E,UAAUC,IAAIF,GAC/C,MACJ,IAAK,SACGH,SAASxE,MAAMwE,SAASxE,KAAK4E,UAAUxB,OAAOuB,GAClD,MACJ,QACQH,SAASxE,MAAMwE,SAASxE,KAAK4E,UAAUnS,OAAOkS,GAI1D,OAAO,EAcX,SAAUrlB,IAAevE,QAASwE,IAAlC,kEAEQ,OAFR,kBAEc2D,aAAKohB,GAAqB,cAAe/kB,GAFvD,UAGYA,IAAWwf,IAHvB,gBAIY,OAJZ,SAIkBwE,aAAIuB,aAA6B/F,MAJnD,OAKY,OALZ,SAKkBwE,aAAIwB,aAAwBhG,MAL9C,UAQYxf,IAAWwf,IARvB,iBASY,OATZ,UASkBwE,aAAIuB,aAA6B/F,MATnD,QAUY,OAVZ,UAUkBwE,aAAIwB,aAAwBhG,MAV9C,iHAmBA,SAAUtf,IAAoB1E,QAAS2E,IAAvC,8EAEYA,IAAUqf,IAFtB,gBAGY,OAHZ,SAGkB7b,aAAKwhB,GAAiB,2BAA4B,OAHpE,OAIY,OAJZ,SAIkBxhB,aAAKwhB,GAAiB,eAAgB,OAJxD,8BAMY,OANZ,UAMkBxhB,aAAKwhB,GAAiB,2BAA4B,UANpE,QAOY,OAPZ,UAOkBxhB,aAAKwhB,GAAiB,eAAgB,UAPxD,iHAgBA,SAAUf,IAAyB5oB,QAAS8E,IAA5C,8EAEYA,IAAUkf,IAFtB,gBAGY,OAHZ,SAGkB7b,aAAKwhB,GAAiB,sBAAuB,OAH/D,6BAKY,OALZ,SAKkBxhB,aAAKwhB,GAAiB,sBAAuB,UAL/D,gHAcA,SAAUd,IAAwB7oB,QAASL,IAA3C,gFAEgBA,EAFhB,cAGiBqkB,IAHjB,SAMiBA,IANjB,kBAIgB,OAJhB,SAIsB7b,aAAKwhB,GAAiB,2BAA4B,OAJxE,0CAOgB,OAPhB,SAOsBxhB,aAAKwhB,GAAiB,2BAA4B,UAPxE,OAQgB,OARhB,UAQsBxhB,aAAKwhB,GAAiB,oBAAqB,OARjE,4CAWgB,OAXhB,UAWsBxhB,aAAKwhB,GAAiB,2BAA4B,UAXxE,QAYgB,OAZhB,UAYsBxhB,aAAKwhB,GAAiB,oBAAqB,UAZjE,qJAqBA,SAAUb,KAAV,kEAEQ,OAFR,kBAEc3gB,aAAKwhB,GAAiB,qBAFpC,2GASA,SAAUxkB,KAAV,kEAEQ,OAFR,kBAEcgD,aAAKwhB,GAAiB,oBAAqB,OAFzD,2GASA,SAAUtkB,KAAV,kEAEQ,OAFR,kBAEc8C,aAAKwhB,GAAiB,oBAAqB,UAFzD,2GASO,SAAUZ,KAAV,kEACH,OADG,SACGN,aAAUhkB,KAAeF,IAD5B,wCAIA,SAAUykB,KAAV,kEACH,OADG,SACGP,aAAU7jB,KAAqBF,IADlC,wCAIA,SAAUukB,KAAV,kEACH,OADG,SACGR,aAAU1jB,KAAsB6jB,IADnC,wCAIA,SAAUM,KAAV,kEACH,OADG,SACGT,aAAUvjB,KAAqB2jB,IADlC,wCAIA,SAAUM,KAAV,kEACH,OADG,SACGV,aAAUtc,KAAsB2c,IADnC,wCAIA,SAAUM,KAAV,kEACH,OADG,SACGX,aAAUrjB,KAAoBD,IADjC,wCAIA,SAAUkkB,KAAV,kEACH,OADG,SACGZ,aAAUnjB,KAAoBD,IADjC,wCAIP,SAAUikB,KAAV,kEACI,OADJ,SACUZ,aAAI,CACNC,aAAKI,IACLJ,aAAKK,IACLL,aAAKM,IACLN,aAAKO,IACLP,aAAKQ,IACLR,aAAKS,IACLT,aAAKU,MARb,wCAYeC,U,UC9LXW,GAAO,EAELC,GAAoB,CAACzgB,EAAW0gB,MAClC1gB,EAAYA,GAAa,IACfqZ,QAAQC,IACd,IAAMlf,EAAKkf,EAAKlf,IAAMomB,GACtBA,IAAQ,EACRlH,EAAKlf,GAAKA,EACVkf,EAAKoH,SAAWpH,EAAKoH,UAAYA,EACjCpH,EAAK/K,QAAS,EAEe,qBAAlB+K,EAAKN,UACZyH,GAAkBnH,EAAKN,SAAU5e,MAK7B4F,OACZygB,GAAkBzgB,GACXA,G,uBCMD2gB,I,aAUAzgB,I,aAWO0gB,I,aAIAC,I,aAIPC,IA9CJC,GAA0B/gB,IAC5B,IADyC,EACrCghB,EAAgB,GADqB,eAEpBhhB,GAFoB,IAEzC,2BAAgC,CAAC,IAAxBihB,EAAuB,QAC4B,IAApDnG,OAAOxD,SAASF,SAASK,QAAQwJ,EAAS3S,OAC1C0S,EAAczH,KAAK0H,EAAS7mB,IAGC,qBAAtB6mB,EAASjI,WAChBgI,EAAgB,IAAIA,KAAkBD,GAAwBE,EAASjI,aARtC,8BAWzC,OAAOgI,GAMX,SAAUL,KAAV,wEAGQ,OAHR,SAEc3gB,EAAYkhB,GAAU/H,IAFpC,SAGc4F,aAAIhf,aAAgBC,IAHlC,2GAUA,SAAUE,KAAV,0EAGqC,OAHrC,SAEcF,EAAYkhB,GAAU/H,IAFpC,SAG2Cza,aAAKqiB,GAAyB/gB,GAHzE,OAIQ,OADMK,EAHd,gBAIc0e,aAAI3e,aAAoCC,IAJtD,6GAWO,SAAUugB,KAAV,kEACH,OADG,SACG5B,aAAUlf,KAAW6gB,IADxB,wCAIA,SAAUE,KAAV,kEACH,OADG,SACG7B,aAAU7e,KAAkCD,IAD/C,wCAIP,SAAU4gB,KAAV,kEACI,OADJ,SACU7B,aAAI,CAACC,aAAK0B,IAAgB1B,aAAK2B,MADzC,wCAIeC,UC3DTK,GAAMjW,IAAMkW,OAAQ,CACtBC,QAAU,iCAGdF,GAAIG,aAAalW,SAASmW,IACpBnW,GACSA,EAETxS,IACE,IAAM4oB,EAAkB5oB,EAAMuR,OAC1BsX,EAAO5C,aAAa6C,QAAS,YAGjC,cAFOP,GAAIQ,SAASvO,QAAQwO,OAArB,cAEHH,GAAkC,MAA1B7oB,EAAMwS,SAAS0S,SAAmB0D,EAAgBK,QAC1DL,EAAgBK,QAAS,EAClB3W,IACF4W,KADE,oCACyC,CAAEC,KAAMN,IACnDtW,KAAQ6W,IACL,GAAmB,MAAfA,EAAIlE,OAGJ,OADA0D,EAAgBpO,QAAQ8I,cAAgB,UAAY8F,EAAIld,KAAK8W,MACtD1Q,IAAOsW,MAKvBvG,QAAQE,OAAQviB,KAIhBuoB,UC9BD7nB,GAAqB,IACxB6nB,GAAIc,IAAK,uBAENC,GAA6B,IACjCf,GAAIc,IAAK,wBAOLhsB,GAAgB,IACpBkrB,GAAIc,IAAK,kBAGNE,GAAcxrB,GACjBwqB,GAAIW,KAAM,iBAAkBnrB,GAGzBmI,GAAmB,IACtBqiB,GAAIc,IAAK,kBAiBNG,GAAgB,IACnBjB,GAAIc,IAAK,sBAMNI,GAAc,IACjBlB,GAAIc,IAAK,cAIN7Z,GAAe,IAClB+Y,GAAIc,IAAK,cAGN1Z,GAAsB,IACzB4Y,GAAIc,IAAK,iBAGNvZ,GAAc,IACjByY,GAAIc,IAAK,iBAGNpZ,GAAY,IACfsY,GAAIc,IAAK,WAKNvb,GAAqB,IACxBya,GAAIc,IAAK,gBAGNK,GAA0B,IAC7BnB,GAAIc,IAAK,oBAGNjb,GAAoB,IACvBma,GAAIc,IAAK,eAGN9a,GAAuB,IAC1Bga,GAAIc,IAAK,kBAGN3a,GAAqB,IACxB6Z,GAAIc,IAAK,mBAGNrkB,GAAc,IACjBujB,GAAIc,IAAK,eAINM,GAAkB,IACrBpB,GAAIc,IAAK,qBAENnkB,GAAWI,GACdijB,GAAIW,KAAM,cAAc5jB,GAGrBrH,GAAc,IACjBsqB,GAAIc,IAAK,gBAEN/qB,GAAWC,GACdgqB,GAAIW,KAAM,eAAe3qB,GAGtBqrB,GAAc,IACjBrB,GAAIc,IAAK,oBAGNnmB,GAAc,IACjBqlB,GAAIc,IAAK,oBAGN9lB,GAAcC,GACjB+kB,GAAIW,KAAM,mBAAmB1lB,GAG1BqmB,GAAW,IACdtB,GAAIc,IAAK,sDAGNS,GAAa,IAChBvB,GAAIc,IAAK,kBAGN5M,GAAa,IAChB8L,GAAIc,IAAK,sBAENU,GAAW7F,GACdqE,GAAIW,KAAM,qBAAsBhF,GAG7BriB,GAAiB,IACpB0mB,GAAIc,IAAI,cAGLW,GAAa,IAChBzB,GAAIc,IAAI,8BAGLY,GAAkB,IACrB1B,GAAIc,IAAI,kGAILa,GAAoB,IACvB3B,GAAIc,IAAI,sDAGLc,GAAe,IAClB5B,GAAIc,IAAI,sDAGLe,GAAgB,IACnB7B,GAAIc,IAAI,8FAGLzlB,GAAiB,IACpB2kB,GAAIc,IAAK,8BAENplB,GAAcC,GACjBqkB,GAAIW,KAAM,6BAA6BhlB,GAGpCI,GAAe,IAClBikB,GAAIc,IAAK,uBAEN1kB,GAAYC,GACf2jB,GAAIW,KAAM,sBAAsBtkB,GAG7BylB,GAAc,IACjB9B,GAAIc,IAAK,wEAENxjB,GAAWC,GACdyiB,GAAIW,KAAM,iBAAiBpjB,G,uBCvK3B7H,I,aAcAK,I,aAYAgsB,I,aAGAC,I,aAGAC,IAhCV,SAAUvsB,KAAV,wEAEyB,OAFzB,kBAEgC6H,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAiBjY,EAAStG,KAAK+I,OAJlD,8BAQQ,OARR,UAQckR,aAAKsE,KAAiB,KARpC,0DAWQnrB,QAAQC,IAAR,MAXR,uDAcA,SAAUjB,GAAS0lB,GAAnB,wEAEuB,OAFvB,kBAE6Ble,aAAMyiB,GAAavE,EAAOrmB,SAFvD,OAGQ,OADM+sB,EAFd,gBAGcvE,aAAKsE,KAAuBC,EAAOxe,OAHjD,OAIQ,OAJR,SAIcpG,aAAM7H,IAJpB,OAKQqB,QAAQC,IAAImrB,EAAOxe,MACnByG,IAAK,4BAA6B,WAN1C,kDAQQrT,QAAQC,IAAR,MACAoT,IAAK,EAAD,GAAQ,SATpB,uDAYA,SAAU2X,KAAV,kEACI,OADJ,SACUlE,aAAWloB,KAAuBD,IAD5C,wCAGA,SAAUssB,KAAV,kEACI,OADJ,SACUnE,aAAW5nB,KAAUF,IAD/B,wCAGA,SAAUksB,KAAV,kEACI,OADJ,SACUnE,aAAI,CACNC,aAAMgE,IACNhE,aAAMiE,MAHd,wCAOeC,U,uBCxCL9pB,I,aAcAU,I,aAKAupB,I,aAGAC,I,aAGA7pB,I,aAcA8pB,I,aAGAC,IA1CV,SAAUpqB,KAAV,wEAEyB,OAFzB,kBAEgCoF,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAwBjY,EAAStG,KAAK+I,OAJzD,8BAQQ,OARR,UAQckR,aAAKsE,KAAwB,KAR3C,0DAWQnrB,QAAQC,IAAR,MAXR,uDAcA,SAAU6B,GAAoB4iB,GAA9B,wEACqB,OADrB,SAC2Ble,aAAMyiB,GAAwBvE,EAAOrmB,QAASqmB,EAAO1iB,KADhF,OAEQ,OADIopB,EADZ,gBAEcvE,aAAKnC,EAAO5iB,mBAAoBspB,EAAOxe,OAFrD,wCAKA,SAAUye,KAAV,kEACI,OADJ,SACUvE,aAAWzlB,KAA+BD,IADpD,wCAGA,SAAUkqB,KAAV,kEACI,OADJ,SACUxE,aAAW7kB,KAAuBH,IAD5C,wCAGA,SAAUL,KAAV,wEAEyB,OAFzB,kBAEgC+E,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAgCjY,EAAStG,KAAK+I,OAJjE,8BAQQ,OARR,UAQckR,aAAKsE,KAAgC,KARnD,0DAWQnrB,QAAQC,IAAR,MAXR,uDAcA,SAAUsrB,KAAV,kEACI,OADJ,SACUzE,aAAWplB,KAAgCD,IADrD,wCAGA,SAAU+pB,KAAV,kEACI,OADJ,SACUzE,aAAI,CACNC,aAAMqE,IACNrE,aAAKsE,IACLtE,aAAKuE,MAJb,wCAQeC,U,aClDLztB,I,aAcAksB,I,aAYAwB,I,aAGAC,I,aAKAC,IAlCV,SAAU5tB,KAAV,wEAEyB,OAFzB,kBAEgCyI,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAuBjY,EAAStG,KAAK+I,OAJxD,8BAQQ,OARR,UAQckR,aAAKsE,KAAuB,KAR1C,0DAWQnrB,QAAQC,IAAR,MAXR,uDAcA,SAAUgqB,GAAWvF,GAArB,wEAEuB,OAFvB,kBAE6Ble,aAAMyiB,GAAevE,EAAOrmB,SAFzD,OAGQ,OADM+sB,EAFd,gBAGcvE,aAAKsE,KAA6BC,EAAOxe,OAHvD,OAIQ,OAJR,SAIcpG,aAAMzI,IAJpB,OAKQsV,IAAK,4BAA6B,WAClCrT,QAAQC,IAAImrB,GANpB,kDAQQprB,QAAQC,IAAR,MACAoT,IAAK,EAAD,GAAQ,SATpB,uDAYA,SAAUoY,KAAV,kEACI,OADJ,SACU3E,aAAW7oB,KAAyBF,IAD9C,wCAGA,SAAU2tB,KAAV,kEACI,OADJ,SACU5E,aAAWvoB,KAAe0rB,IADpC,wCAKA,SAAU0B,KAAV,kEACI,OADJ,SACU5E,aAAI,CACNC,aAAMyE,IACNzE,aAAK0E,MAHb,wCAOeC,U,uBC3CL/kB,I,aAwBAglB,I,aAIAC,IA5BV,SAAUjlB,KAAV,wEAEyB,OAFzB,kBAEgCJ,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAsBjY,EAAStG,KAAK+I,OAJvD,8BAQQ,OARR,UAQckR,aAAKsE,KAAsB,KARzC,0DAWQnrB,QAAQC,IAAR,MAXR,uDAwBA,SAAU2rB,KAAV,kEACI,OADJ,SACU9E,aAAWjgB,KAA4BD,IADjD,wCAIA,SAAUilB,KAAV,kEACI,OADJ,SACU9E,aAAI,CACNC,aAAM4E,MAFd,wCAMeC,U,aClCL9Z,I,aAwBA+Z,I,aAIAC,IA5BV,SAAUha,KAAV,wEAEyB,OAFzB,kBAEgCvL,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,IAAuBjY,EAAStG,KAAK+I,OAJxD,8BAQQ,OARR,UAQckR,aAAKsE,IAAuB,KAR1C,0DAWQnrB,QAAQC,IAAR,MAXR,uDAwBA,SAAU6rB,KAAV,kEACI,OADJ,SACUhF,aAAW7B,KAA6BlT,IADlD,wCAIA,SAAUga,KAAV,kEACI,OADJ,SACUhF,aAAI,CACNC,aAAM8E,MAFd,wCAMeC,U,sBC/BL5B,I,aAaA6B,I,aAIA9b,I,aAaA+b,I,aAIA5b,I,aAaA6b,I,aAKA1b,I,aAcA2b,I,aAKAxb,I,aAcAyb,I,aAIAC,IAzFV,SAAUlC,KAAV,wEAEyB,OAFzB,kBAEgC3jB,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAiBjY,EAAStG,KAAK+I,OAJlD,8BAOQ,OAPR,UAOckR,aAAKsE,KAAiB,KAPpC,0DAUQnrB,QAAQC,IAAR,MAVR,uDAaA,SAAU+rB,KAAV,kEACI,OADJ,SACUlF,aAAW5d,KAAuBihB,IAD5C,wCAIA,SAAUja,KAAV,wEAEyB,OAFzB,kBAEgC1J,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAsBjY,EAAStG,KAAK+I,OAJvD,8BAOQ,OAPR,UAOckR,aAAKsE,KAAsB,KAPzC,0DAUQnrB,QAAQC,IAAR,MAVR,uDAaA,SAAUgsB,KAAV,kEACI,OADJ,SACUnF,aAAW1d,KAAwB8G,IAD7C,wCAIA,SAAUG,KAAV,wEAEyB,OAFzB,kBAEgC7J,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAA6BjY,EAAStG,KAAK+I,OAJ9D,8BAOQ,OAPR,UAOckR,aAAKsE,KAA6B,KAPhD,0DAUQnrB,QAAQC,IAAR,MAVR,uDAaA,SAAUisB,KAAV,kEACI,OADJ,SACUpF,aAAWxd,KAAuB+G,IAD5C,wCAKA,SAAUG,KAAV,wEAEyB,OAFzB,kBAEgChK,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAqBjY,EAAStG,KAAK+I,OAJtD,8BAQQ,OARR,UAQckR,aAAKsE,KAAqB,KARxC,0DAWQnrB,QAAQC,IAAR,MAXR,uDAcA,SAAUksB,KAAV,kEACI,OADJ,SACUrF,aAAWtd,KAAuBgH,IAD5C,wCAKA,SAAUG,KAAV,wEAEyB,OAFzB,kBAEgCnK,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAmBjY,EAAStG,KAAK+I,OAJpD,8BAQQ,OARR,UAQckR,aAAKsE,KAAmB,KARtC,0DAWQnrB,QAAQC,IAAR,MAXR,uDAcA,SAAUmsB,KAAV,kEACI,OADJ,SACUtF,aAAWpd,KAAqBiH,IAD1C,wCAIA,SAAU0b,KAAV,kEACI,OADJ,SACUtF,aAAI,CACNC,aAAMgF,IACNhF,aAAMiF,IACNjF,aAAMkF,IACNlF,aAAMmF,IACNnF,aAAMoF,MANd,wCAUeC,U,aCnGL7d,I,aAaA8d,I,aAIA3d,I,aAaA4d,I,aAIAzd,I,aAaA0d,I,aAKAvd,I,aAaAwd,I,aAIArd,I,aAaAsd,I,aAGAC,IArFV,SAAUne,KAAV,wEAEyB,OAFzB,kBAEgChI,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAA4BjY,EAAStG,KAAK+I,OAJ7D,8BAOQ,OAPR,UAOckR,aAAKsE,KAA4B,KAP/C,0DAUQnrB,QAAQC,IAAR,MAVR,uDAaA,SAAUqsB,KAAV,kEACI,OADJ,SACUxF,aAAWte,KAAqBgG,IAD1C,wCAIA,SAAUG,KAAV,wEAEyB,OAFzB,kBAEgCnI,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAgCjY,EAAStG,KAAK+I,OAJjE,8BAOQ,OAPR,UAOckR,aAAKsE,KAAgC,KAPnD,0DAUQnrB,QAAQC,IAAR,MAVR,uDAaA,SAAUssB,KAAV,kEACI,OADJ,SACUzF,aAAWpe,KAAuBiG,IAD5C,wCAIA,SAAUG,KAAV,wEAEyB,OAFzB,kBAEgCtI,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAA2BjY,EAAStG,KAAK+I,OAJ5D,8BAOQ,OAPR,UAOckR,aAAKsE,KAA2B,KAP9C,0DAUQnrB,QAAQC,IAAR,MAVR,uDAaA,SAAUusB,KAAV,kEACI,OADJ,SACU1F,aAAWle,KAAwBkG,IAD7C,wCAKA,SAAUG,KAAV,wEAEyB,OAFzB,kBAEgCzI,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAA8BjY,EAAStG,KAAK+I,OAJ/D,8BAOQ,OAPR,UAOckR,aAAKsE,KAA8B,KAPjD,0DAUQnrB,QAAQC,IAAR,MAVR,uDAaA,SAAUwsB,KAAV,kEACI,OADJ,SACU3F,aAAWhe,KAA4BmG,IADjD,wCAIA,SAAUG,KAAV,wEAEyB,OAFzB,kBAEgC5I,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAA4BjY,EAAStG,KAAK+I,OAJ7D,8BAOQ,OAPR,UAOckR,aAAKsE,KAA4B,KAP/C,0DAUQnrB,QAAQC,IAAR,MAVR,uDAaA,SAAUysB,KAAV,kEACI,OADJ,SACU5F,aAAW9d,KAA0BoG,IAD/C,wCAGA,SAAUud,KAAV,kEACI,OADJ,SACU5F,aAAI,CACNC,aAAMsF,IACNtF,aAAMuF,IACNvF,aAAMwF,IACNxF,aAAKyF,IACLzF,aAAK0F,MANb,wCAUeC,U,uBChGLjnB,I,aAcAE,I,aAYAgnB,I,aAGAC,I,aAGAC,IAhCV,SAAUpnB,KAAV,wEAEyB,OAFzB,kBAEgCc,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAiBjY,EAAStG,KAAK+I,OAJlD,8BAQQ,OARR,UAQckR,aAAKsE,KAAiB,KARpC,0DAWQnrB,QAAQC,IAAR,MAXR,uDAcA,SAAU2F,GAAS8e,GAAnB,wEAEuB,OAFvB,kBAE6Ble,aAAMyiB,GAAavE,EAAOrmB,SAFvD,OAGQ,OADM+sB,EAFd,gBAGcvE,aAAKsE,KAA2BC,EAAOxe,OAHrD,OAIQ,OAJR,SAIcpG,aAAMd,IAJpB,OAKQ2N,IAAK,4BAA6B,WAClCrT,QAAQC,IAAImrB,GANpB,kDAQQprB,QAAQC,IAAR,MACAoT,IAAK,EAAD,GAAQ,SATpB,uDAYA,SAAUuZ,KAAV,kEACI,OADJ,SACU9F,aAAWnhB,KAAuBD,IAD5C,wCAGA,SAAUmnB,KAAV,kEACI,OADJ,SACU/F,aAAW7gB,KAAaL,IADlC,wCAGA,SAAUknB,KAAV,kEACI,OADJ,SACU/F,aAAI,CACNC,aAAM4F,IACN5F,aAAM6F,MAHd,wCAOeC,U,uBCtCLlpB,I,aAcAK,I,aAaA8oB,I,aAGAC,I,aAIAC,IAlCV,SAAUrpB,KAAV,wEAEyB,OAFzB,kBAEgC4C,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAA4BjY,EAAStG,KAAK+I,OAJ7D,8BAQQ,OARR,UAQckR,aAAKsE,KAA4B,KAR/C,0DAWQnrB,QAAQC,IAAR,MAXR,uDAcA,SAAUgE,GAAYygB,GAAtB,wEAEuB,OAFvB,kBAE6Ble,aAAMyiB,GAAgBvE,EAAOrmB,SAF1D,OAGQ,OADM+sB,EAFd,gBAGcvE,aAAKsE,KAA2BC,EAAOxe,OAHrD,OAIQ,OAJR,SAIcpG,aAAM5C,IAJpB,OAKQyP,IAAK,4BAA6B,WAClCrT,QAAQC,IAAImrB,EAAOxe,MAN3B,kDAQQ5M,QAAQC,IAAR,MACAoT,IAAK,EAAD,GAAQ,SATpB,uDAaA,SAAU0Z,KAAV,kEACI,OADJ,SACUjG,aAAWjjB,KAAuBD,IAD5C,wCAGA,SAAUopB,KAAV,kEACI,OADJ,SACUlG,aAAW3iB,KAAaF,IADlC,wCAIA,SAAUgpB,KAAV,kEACI,OADJ,SACUlG,aAAI,CACNC,aAAM+F,IACN/F,aAAMgG,MAHd,wCAOeC,U,uBC5CLC,I,aAwBAC,I,aAIAC,IA5BV,SAAUF,KAAV,wEAEyB,OAFzB,kBAEgC1mB,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAkBjY,EAAStG,KAAK+I,OAJnD,8BAQQ,OARR,UAQckR,aAAKsE,KAAkB,KARrC,0DAWQnrB,QAAQC,IAAR,MAXR,uDAwBA,SAAUktB,KAAV,kEACI,OADJ,SACUrG,aAAWzB,KAAwB6H,IAD7C,wCAIA,SAAUE,KAAV,kEACI,OADJ,SACUrG,aAAI,CACNC,aAAMmG,MAFd,wCAMeC,U,aClCL/tB,I,aAwBAguB,I,aAIAC,IA5BV,SAAUjuB,KAAV,wEAEyB,OAFzB,kBAEgCmH,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,IAAoBjY,EAAStG,KAAK+I,OAJrD,8BAQQ,OARR,UAQckR,aAAKsE,IAAoB,KARvC,0DAWQnrB,QAAQC,IAAR,MAXR,uDAwBA,SAAUotB,KAAV,kEACI,OADJ,SACUvG,aAAWxnB,KAA0BD,IAD/C,wCAIA,SAAUiuB,KAAV,kEACI,OADJ,SACUvG,aAAI,CACNC,aAAMqG,MAFd,wCAMeC,U,aChCLnQ,I,aAcAsN,I,aAYA8C,I,aAGAC,I,aAKAC,IAlCV,SAAUtQ,KAAV,wEAEyB,OAFzB,kBAEgC3W,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAoBjY,EAAStG,KAAK+I,OAJrD,8BAQQ,OARR,UAQckR,aAAKsE,KAAoB,KARvC,0DAWQnrB,QAAQC,IAAR,MAXR,uDAcA,SAAUwqB,GAAQ/F,GAAlB,wEAEuB,OAFvB,kBAE6Ble,aAAMyiB,GAAYvE,EAAOrmB,SAFtD,OAGQ,OADM+sB,EAFd,gBAGcvE,aAAKsE,KAA0BC,EAAOxe,OAHpD,OAIQ,OAJR,SAIcpG,aAAM2W,IAJpB,OAKQnd,QAAQC,IAAImrB,GACZ/X,IAAK,4BAA6B,WAN1C,kDAQQrT,QAAQC,IAAR,MACAoT,IAAK,EAAD,GAAQ,SATpB,uDAYA,SAAUka,KAAV,kEACI,OADJ,SACUzG,aAAWlX,KAAsBuN,IAD3C,wCAGA,SAAUqQ,KAAV,kEACI,OADJ,SACU1G,aAAWhX,KAAY2a,IADjC,wCAKA,SAAUgD,KAAV,kEACI,OADJ,SACU1G,aAAI,CACNC,aAAMuG,IACNvG,aAAKwG,MAHb,wCAOeC,U,aC3CLlrB,I,aAwBAmrB,I,aAIAC,IA5BV,SAAUprB,KAAV,wEAEyB,OAFzB,kBAEgCiE,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAsBjY,EAAStG,KAAK+I,OAJvD,8BAQQ,OARR,UAQckR,aAAKsE,KAAsB,KARzC,0DAWQnrB,QAAQC,IAAR,MAXR,uDAwBA,SAAUytB,KAAV,kEACI,OADJ,SACU5G,aAAWtkB,KAA4BD,IADjD,wCAIA,SAAUorB,KAAV,kEACI,OADJ,SACU5G,aAAI,CACNC,aAAM0G,MAFd,wCAMeC,U,sBC9BLrc,I,aAcAsc,I,aAIAC,I,aAcAC,I,aAIAC,I,aAcAC,I,aAIAC,I,aAcAC,I,aAIAC,I,aAcAC,I,aAGAC,IAzFV,SAAU/c,KAAV,wEAEyB,OAFzB,kBAEgC9K,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAsBjY,EAAStG,KAAK+I,OAJvD,8BAQQ,OARR,UAQckR,aAAKsE,KAAsB,KARzC,0DAWQnrB,QAAQC,IAAR,MAXR,uDAcA,SAAU2tB,KAAV,kEACI,OADJ,SACU9G,aAAW1c,KAAsBkH,IAD3C,wCAIA,SAAUuc,KAAV,wEAEyB,OAFzB,kBAEgCrnB,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAA2BjY,EAAStG,KAAK+I,OAJ5D,8BAQQ,OARR,UAQckR,aAAKsE,KAA2B,KAR9C,0DAWQnrB,QAAQC,IAAR,MAXR,uDAcA,SAAU6tB,KAAV,kEACI,OADJ,SACUhH,aAAWld,KAA2BikB,IADhD,wCAIA,SAAUE,KAAV,wEAEyB,OAFzB,kBAEgCvnB,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAA6BjY,EAAStG,KAAK+I,OAJ9D,8BAQQ,OARR,UAQckR,aAAKsE,KAA6B,KARhD,0DAWQnrB,QAAQC,IAAR,MAXR,uDAcA,SAAU+tB,KAAV,kEACI,OADJ,SACUlH,aAAWhd,KAA6BikB,IADlD,wCAIA,SAAUE,KAAV,wEAEyB,OAFzB,kBAEgCznB,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAwBjY,EAAStG,KAAK+I,OAJzD,8BAQQ,OARR,UAQckR,aAAKsE,KAAwB,KAR3C,0DAWQnrB,QAAQC,IAAR,MAXR,uDAcA,SAAUiuB,KAAV,kEACI,OADJ,SACUpH,aAAW9c,KAAwBikB,IAD7C,wCAIA,SAAUE,KAAV,wEAEyB,OAFzB,kBAEgC3nB,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAyBjY,EAAStG,KAAK+I,OAJ1D,8BAQQ,OARR,UAQckR,aAAKsE,KAAyB,KAR5C,0DAWQnrB,QAAQC,IAAR,MAXR,uDAcA,SAAUmuB,KAAV,kEACI,OADJ,SACUtH,aAAW5c,KAAyBikB,IAD9C,wCAGA,SAAUE,KAAV,kEACI,OADJ,SACUtH,aAAI,CACNC,aAAM4G,IACN5G,aAAM8G,IACN9G,aAAKgH,IACLhH,aAAKkH,IACLlH,aAAKoH,MANb,wCAUeC,U,uBCvGLpnB,I,aAwBAqnB,I,aAIAC,IA5BV,SAAUtnB,KAAV,wEAEyB,OAFzB,kBAEgCT,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAqBjY,EAAStG,KAAK+I,OAJtD,8BAQQ,OARR,UAQckR,aAAKsE,KAAqB,KARxC,0DAWQnrB,QAAQC,IAAR,MAXR,uDAwBA,SAAUquB,KAAV,kEACI,OADJ,SACUxH,aAAW5f,KAA2BD,IADhD,wCAIA,SAAUsnB,KAAV,kEACI,OADJ,SACUxH,aAAI,CACNC,aAAMsH,MAFd,wCAMeC,U,uBC/BLjqB,I,aAcAK,I,aAYA6pB,I,aAGAC,I,aAGAC,IAhCV,SAAUpqB,KAAV,wEAEyB,OAFzB,kBAEgCkC,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAoBjY,EAAStG,KAAK+I,OAJrD,8BAQQ,OARR,UAQckR,aAAKsE,KAAoB,KARvC,0DAWQnrB,QAAQC,IAAR,MAXR,uDAcA,SAAU0E,GAAY+f,GAAtB,wEAEuB,OAFvB,kBAE6Ble,aAAMyiB,GAAgBvE,EAAOrmB,SAF1D,OAGQ,OADM+sB,EAFd,gBAGcvE,aAAKsE,KAA0BC,EAAOxe,OAHpD,OAIQ,OAJR,SAIcpG,aAAMlC,IAJpB,OAKQtE,QAAQC,IAAImrB,EAAOxe,MACnByG,IAAK,4BAA6B,WAN1C,kDAQQrT,QAAQC,IAAR,MACAoT,IAAK,EAAD,GAAQ,SATpB,uDAYA,SAAUmb,KAAV,kEACI,OADJ,SACU1H,aAAWviB,KAA0BD,IAD/C,wCAGA,SAAUmqB,KAAV,kEACI,OADJ,SACU3H,aAAWjiB,KAAaF,IADlC,wCAGA,SAAU+pB,KAAV,kEACI,OADJ,SACU3H,aAAI,CACNC,aAAMwH,IACNxH,aAAMyH,MAHd,wCAOeC,U,uBCvCL1pB,I,aAcAK,I,aAYAspB,I,aAGAC,I,aAGAC,IAhCV,SAAU7pB,KAAV,wEAEyB,OAFzB,kBAEgCwB,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAkBjY,EAAStG,KAAK+I,OAJnD,8BAQQ,OARR,UAQckR,aAAKsE,KAAkB,KARrC,0DAWQnrB,QAAQC,IAAR,MAXR,uDAcA,SAAUoF,GAAUqf,GAApB,wEAEuB,OAFvB,kBAE6Ble,aAAMyiB,GAAcvE,EAAOrmB,SAFxD,OAGQ,OADM+sB,EAFd,gBAGcvE,aAAKsE,KAAwBC,EAAOxe,OAHlD,OAIQ,OAJR,SAIcpG,aAAMxB,IAJpB,OAKQhF,QAAQC,IAAImrB,EAAOxe,MACnByG,IAAK,4BAA6B,WAN1C,kDAQQrT,QAAQC,IAAR,MACAoT,IAAK,EAAD,GAAQ,SATpB,uDAYA,SAAUsb,KAAV,kEACI,OADJ,SACU7H,aAAW7hB,KAAwBD,IAD7C,wCAGA,SAAU4pB,KAAV,kEACI,OADJ,SACU9H,aAAWvhB,KAAWF,IADhC,wCAGA,SAAUwpB,KAAV,kEACI,OADJ,SACU9H,aAAI,CACNC,aAAM2H,IACN3H,aAAM4H,MAHd,wCAOeC,U,uBCvCL9D,I,aAcAxkB,I,aAYAuoB,I,aAGAC,I,aAGAC,IAhCV,SAAUjE,KAAV,wEAEyB,OAFzB,kBAEgCvkB,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAiBjY,EAAStG,KAAK+I,OAJlD,8BAQQ,OARR,UAQckR,aAAKsE,KAAiB,KARpC,0DAWQnrB,QAAQC,IAAR,MAXR,uDAcA,SAAUsG,GAASme,GAAnB,wEAEuB,OAFvB,kBAE6Ble,aAAMyiB,GAAavE,EAAOrmB,SAFvD,OAGQ,OADM+sB,EAFd,gBAGcvE,aAAKsE,KAAuBC,EAAOxe,OAHjD,OAIQ,OAJR,SAIcpG,aAAMukB,IAJpB,OAKQ1X,IAAK,4BAA6B,WAClCrT,QAAQC,IAAImrB,EAAOxe,MAN3B,kDAQQ5M,QAAQC,IAAR,MACAoT,IAAK,EAAD,GAAQ,SATpB,uDAYA,SAAUyb,KAAV,kEACI,OADJ,SACUhI,aAAWtX,KAAuBub,IAD5C,wCAGA,SAAUgE,KAAV,kEACI,OADJ,SACUjI,aAAWrgB,KAAUF,IAD/B,wCAGA,SAAUyoB,KAAV,kEACI,OADJ,SACUjI,aAAI,CACNC,aAAM8H,IACN9H,aAAM+H,MAHd,wCAOeC,U,uBC1CL1nB,I,aAwBA2nB,I,aAIAC,IA5BV,SAAU5nB,KAAV,wEAEyB,OAFzB,kBAEgCd,aAAMyiB,IAFtC,YAEc/V,EAFd,QAGoBtG,OAAQsG,EAAStG,KAAK+I,KAH1C,gBAIQ,OAJR,SAIckR,aAAKsE,KAAyBjY,EAAStG,KAAK+I,OAJ1D,8BAQQ,OARR,UAQckR,aAAKsE,KAAyB,KAR5C,0DAWQnrB,QAAQC,IAAR,MAXR,uDAwBA,SAAUgvB,KAAV,kEACI,OADJ,SACUnI,aAAWvf,KAAgCD,IADrD,wCAIA,SAAU4nB,KAAV,kEACI,OADJ,SACUnI,aAAI,CACNC,aAAMiI,MAFd,wCAMeC,U,aCnBUC,IAAV,SAAUA,GAASC,GAAnB,kEACX,OADW,SACLrI,aAAK,CACPV,KACAgJ,KACAzG,KACA0G,KACA9D,KACAG,KACDE,KACAE,KACAM,KACAM,KACAG,KACAG,KACAG,KACAE,KACAG,KACAE,KACAU,KACAE,KACAG,KACAG,KACAG,KACAE,OAvBQ,wCClBf,IAAMK,GAAiBC,eACjBC,GAAc,CAACF,ICCrBG,IAAS3Q,OACL,kBAAC,IAAD,CAAU4Q,MDAP,SAAwBC,GAC3B,IAAMC,EAAmBjN,OAAOkN,sCAAwCC,KAElEJ,EAAQK,aAAYC,GAAUL,EAAcC,EAAiBK,gBAAmBT,MAEtF,OADAF,GAAeY,IAAIC,IACZT,ECLUU,IACb,kBAAC,GAAD,OAEJvI,SAASwI,eAAe,SpDqHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxd,KAAKyd,IACjCA,EAAaC,gB,gCqDnInB,oJAIaxT,EAAY,KAAI,CAC3Bnf,KAAK4R,MAGMghB,EAAe1T,IAAF,CACxBlf,KAAM6R,IACNxR,QAAS6e,IAGEX,EAAcW,IAAF,CACvBlf,KAAM8R,IACNzR,QAAS6e,IAEE2T,EAAqBjM,IAAF,CAC9B5mB,KAAM+R,IACN1R,QAASumB,K,gCCnBX,kTAEO,IAAMkM,EAAkB,WAClBC,EAAoB,SAEpBC,EAAqB,QACrBC,EAAqB,QAErBC,EAA6B,UAC7BC,EAA0B,OAE1BC,EAA0B,QAC1BC,EAA8B,YAC9BC,EAA+B,c,gCCb5C,8CAmCerb,IA5BIlK,IAEf,IAAMwlB,EAAQxlB,EAAMmK,iBAAmB,GACvC,OACI,kBAAC,IAAMjL,SAAP,KAEI,kBAAC,IAAD,CAAYC,UAAU,sBAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM+T,GAAG,KAAT,QAEHsS,EAAM9lB,IAAI,CAAC2V,EAAMmB,IACPnB,EAAK/K,OACR,kBAAC,IAAD,CAAgBA,QAAM,EAACzK,IAAK2W,GACvBnB,EAAKjL,OAGN,kBAAC,IAAD,CAAgBvK,IAAK2W,GACjB,kBAAC,IAAD,CAAMtD,GAAImC,EAAKhL,MAAOgL,EAAKjL,a,gCCvB3D,oEACO,IAAM8O,EAA8B,8BAC9BC,EAA8B,+B,gCCF3C,oEACO,IAAM5lB,EAA2B,2BAC3BG,EAA2B,4B,gCCFxC,oEACO,IAAM+C,EAA6B,6BAC7BG,EAA6B,8B,gCCF1C,oEACO,IAAMkE,EAA6B,6BAC7BG,EAA6B,8B,gCCF1C,oEACO,IAAMqe,EAAyB,yBACzB9c,EAAyB,0B,gCCFtC,oEACO,IAAMrB,EAA4B,4BAC5BG,EAA4B,6B,gCCFzC,oEACO,IAAME,EAAiC,iCACjCG,EAAiC,kC,gCCH9C,gFAIaqK,EAAmB,KAAI,CAClC/T,KAAKinB,MAGMuM,EAAkB1f,IAAF,CAC3B9T,KAAMknB,IACN7mB,QAASyT,K,gCCTX,mGAMMkN,EAAsB,KAExB,IAAM/f,EAAOqgB,IACb,IAAKrgB,EACD,OAAO,EAGX,IAAMwyB,EAAUC,IAAUzyB,EAAKykB,OACzBtH,EAAchF,KAAKua,MAAQ,IACjC,QAAIF,EAAQG,IAAMxV,KACdpc,QAAQ6xB,KAAK,yBACN,IASTvS,EAAkB,KACpB,IACMrgB,GADU,IAAIunB,KACCuD,IAAI,QACzB,OAAO9qB,EAAuB,iBAARA,EAAmBA,EAAOkU,KAAKkQ,MAAMpkB,GAAS,Q","file":"static/js/main.3479ac82.chunk.js","sourcesContent":["import {CREATE_CLIENT, CREATE_CLIENT_SUCCESS, GET_CLIENT_LIST_REQUEST, \r\n   SET_CLIENT_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getClientList =()=>({\r\n  type:GET_CLIENT_LIST_REQUEST\r\n})\r\n\r\nexport const setClientList = ( clients ) => ( {\r\n  type: SET_CLIENT_LIST_REQUEST,\r\n  payload: clients\r\n} );\r\n\r\nexport const createClient = ( clients ) => ( {\r\n  type: CREATE_CLIENT,\r\n  payload: clients\r\n} );\r\nexport const createClientSuccess = ( createclients ) => ( {\r\n  type: CREATE_CLIENT_SUCCESS,\r\n  payload: createclients\r\n} );","\r\nimport {GET_USER_LIST_REQUEST, \r\n   SET_USER_LIST_REQUEST, ADD_USER, ADD_USER_REQUEST, GET_ERROR} from './constants';\r\n\r\n\r\nexport const getUserList =()=>({\r\n  type:GET_USER_LIST_REQUEST,\r\n  \r\n})\r\n\r\nexport const getUser = ( users ) => ( {\r\n  type: SET_USER_LIST_REQUEST,\r\n  payload: users\r\n} );\r\n\r\nexport const setUser = ( user ) => ( {\r\n  type: ADD_USER,\r\n  payload: user\r\n} );\r\nexport const setUserRquest = ( user ) => ( {\r\n  type: ADD_USER_REQUEST,\r\n  payload: user\r\n} );\r\nexport const getError = ( error ) => ( {\r\n  type: GET_ERROR,\r\n  payload: error\r\n} );","import {GET_HOLIDAY_LIST_REQUEST, \r\n   SET_HOLIDAY_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getHolidayList =()=>({\r\n  type:GET_HOLIDAY_LIST_REQUEST\r\n})\r\n\r\nexport const setHoliday = ( holiday ) => ( {\r\n  type: SET_HOLIDAY_LIST_REQUEST,\r\n  payload: holiday\r\n} );","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\n\r\nexport const loginUser = (username, password, rememberme) => ({\r\n    type: LOGIN_USER,\r\n    payload: { username, password, rememberme },\r\n});\r\n\r\nexport const loginUserSuccess = (user) => {\r\n    console.log('loginUserSuccess user==',user)\r\n     return {\r\n        type: LOGIN_USER_SUCCESS,\r\n        payload: user,\r\n    }\r\n\r\n}\r\n\r\nexport const loginUserFailed = (error) => ({\r\n    type: LOGIN_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const registerUser = (fullname, email, password) => ({\r\n    type: REGISTER_USER,\r\n    payload: { fullname, email, password },\r\n});\r\n\r\nexport const registerUserSuccess = (user) => ({\r\n    type: REGISTER_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const registerUserFailed = (error) => ({\r\n    type: REGISTER_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const logoutUser = (history) => ({\r\n    type: LOGOUT_USER,\r\n    payload: { history },\r\n});\r\n\r\nexport const forgetPassword = (username) => ({\r\n    type: FORGET_PASSWORD,\r\n    payload: { username },\r\n});\r\n\r\nexport const forgetPasswordSuccess = (passwordResetStatus) => ({\r\n    type: FORGET_PASSWORD_SUCCESS,\r\n    payload: passwordResetStatus,\r\n});\r\n\r\nexport const forgetPasswordFailed = (error) => ({\r\n    type: FORGET_PASSWORD_FAILED,\r\n    payload: error,\r\n});\r\n","import {GET_REQUIREMENTS_LIST_REQUEST, SET_REQUIREMENTS_LIST_REQUEST,\r\n  SAVE_REQUIREMENTS, SET_SAVE_REQUIREMENTS,\r\n  GET_CRITICAL_REQUIREMENTS_LIST, SET_CRITICAL_REQUIREMENTS_LIST,\r\n  GET_REQUIREMENTS_MODAL, \r\n  HIDE_REQUIREMENTS_MODAL} from './constants';\r\n\r\n\r\nexport const getRequirementList =()=>({\r\n  type:GET_REQUIREMENTS_LIST_REQUEST\r\n})\r\n\r\nexport const setRequirement = ( requirements ) => ( {\r\n  type: SET_REQUIREMENTS_LIST_REQUEST,\r\n  payload: requirements\r\n} );\r\nexport const getCriticalRequirementList =()=>({\r\n  type:GET_CRITICAL_REQUIREMENTS_LIST\r\n})\r\n\r\nexport const setCriticalRequirement = ( criticalreq ) => ( {\r\n  type: SET_CRITICAL_REQUIREMENTS_LIST,\r\n  payload: criticalreq\r\n} );\r\n\r\nexport const saveRequirement =()=>({\r\n  type:SAVE_REQUIREMENTS\r\n})\r\n\r\nexport const setSaveRequirement = ( requirement, jid ) => ( {\r\n  type: SET_SAVE_REQUIREMENTS,\r\n  payload: requirement,\r\n  id:jid\r\n} );\r\nexport const getRequirementModal = () => ( {\r\n  type: GET_REQUIREMENTS_MODAL\r\n} );\r\n\r\nexport const hideRequirementModal = () => ( {\r\n  type: HIDE_REQUIREMENTS_MODAL\r\n} );","import {GET_SALESUSER_LIST_REQUEST, \r\n   SET_SALESUSER_LIST_REQUEST,} from './constants';\r\n\r\n   \r\nexport const getSalesUserList =()=>({\r\n  type:GET_SALESUSER_LIST_REQUEST\r\n})\r\n\r\nexport const setSalesUser = ( salesuser ) => ( {\r\n  type: SET_SALESUSER_LIST_REQUEST,\r\n  payload: salesuser\r\n} );","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\n\r\nexport const changeLayout = (layout) => ({\r\n    type: CHANGE_LAYOUT,\r\n    payload: layout,\r\n});\r\n\r\nexport const changeLayoutWidth = (width) => ({\r\n    type: CHANGE_LAYOUT_WIDTH,\r\n    payload: width,\r\n});\r\n\r\nexport const changeSidebarTheme = (theme) => ({\r\n    type: CHANGE_SIDEBAR_THEME,\r\n    payload: theme,\r\n});\r\n\r\nexport const changeSidebarType = (sidebarType) => ({\r\n    type: CHANGE_SIDEBAR_TYPE,\r\n    payload: sidebarType,\r\n});\r\n\r\nexport const toggleRightSidebar = () => ({\r\n    type: TOGGLE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const showRightSidebar = () => ({\r\n    type: SHOW_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const hideRightSidebar = () => ({\r\n    type: HIDE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n","import {CREATE_ROLE, CREATE_ROLE_SUCCESS, GET_ROLE_LIST_REQUEST, \r\n   SET_ROLE_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getRoleList =()=>({\r\n  type:GET_ROLE_LIST_REQUEST\r\n})\r\n\r\nexport const getRolelistRequest = ( role ) => ( {\r\n  type: SET_ROLE_LIST_REQUEST,\r\n  payload: role\r\n} );\r\nexport const createRole = ( createrole ) => ( {\r\n  type: CREATE_ROLE,\r\n  payload: createrole\r\n} );\r\nexport const createRoleSuccess = ( createrole ) => ( {\r\n  type: CREATE_ROLE_SUCCESS,\r\n  payload: createrole\r\n} );","\r\nimport {GET_REVENUE_LIST_REQUEST, \r\n   SET_REVENUE_LIST_REQUEST, ADD_REVENUE, ADD_REVENUE_REQUEST, GET_ERROR} from './constants';\r\n\r\n\r\nexport const getRevenueList =()=>({\r\n  type:GET_REVENUE_LIST_REQUEST,\r\n  \r\n})\r\n\r\nexport const getRevenue = ( revenues ) => ( {\r\n  type: SET_REVENUE_LIST_REQUEST,\r\n  payload: revenues\r\n} );\r\n\r\nexport const setRevenue = ( revenue ) => ( {\r\n  type: ADD_REVENUE,\r\n  payload: revenue\r\n} );\r\nexport const setRevenueRquest = ( revenue ) => ( {\r\n  type: ADD_REVENUE_REQUEST,\r\n  payload: revenue\r\n} );\r\nexport const getError = ( error ) => ( {\r\n  type: GET_ERROR,\r\n  payload: error\r\n} );","\r\nimport {GET_MONTH_LIST_REQUEST, \r\n   SET_MONTH_LIST_REQUEST, ADD_MONTH, ADD_MONTH_REQUEST, GET_ERROR} from './constants';\r\n\r\n\r\nexport const getMonthList =()=>({\r\n  type:GET_MONTH_LIST_REQUEST,\r\n  \r\n})\r\n\r\nexport const getMonth = ( months ) => ( {\r\n  type: SET_MONTH_LIST_REQUEST,\r\n  payload: months\r\n} );\r\n\r\nexport const setMonth = ( month ) => ( {\r\n  type: ADD_MONTH,\r\n  payload: month\r\n} );\r\nexport const setMonthRquest = ( month ) => ( {\r\n  type: ADD_MONTH_REQUEST,\r\n  payload: month\r\n} );\r\nexport const getError = ( error ) => ( {\r\n  type: GET_ERROR,\r\n  payload: error\r\n} );","import {CREATE_TEAM, CREATE_TEAM_SUCCESS, GET_TEAM_LIST_REQUEST, \r\n   SET_TEAM_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getTeamList =()=>({\r\n  type:GET_TEAM_LIST_REQUEST\r\n})\r\n\r\nexport const setTeam = ( teams ) => ( {\r\n  type: SET_TEAM_LIST_REQUEST,\r\n  payload: teams\r\n} );\r\nexport const createTeam = ( createteam ) => ( {\r\n  type: CREATE_TEAM,\r\n  payload: createteam\r\n} );\r\nexport const createTeamSuccess = ( createteam ) => ( {\r\n  type: CREATE_TEAM_SUCCESS,\r\n  payload: createteam\r\n} );","\r\nimport {GET_CALL_LIST_REQUEST, \r\n   SET_CALL_LIST_REQUEST, ADD_CALL, ADD_CALL_REQUEST, GET_ERROR} from './constants';\r\n\r\n\r\nexport const getCallList =()=>({\r\n  type:GET_CALL_LIST_REQUEST,\r\n  \r\n})\r\n\r\nexport const getCall = ( calls ) => ( {\r\n  type: SET_CALL_LIST_REQUEST,\r\n  payload: calls\r\n} );\r\n\r\nexport const setCall = ( call ) => ( {\r\n  type: ADD_CALL,\r\n  payload: call\r\n} );\r\nexport const setCallRquest = ( call ) => ( {\r\n  type: ADD_CALL_REQUEST,\r\n  payload: call\r\n} );\r\nexport const getError = ( error ) => ( {\r\n  type: GET_ERROR,\r\n  payload: error\r\n} );","import {GET_RECRUITER_LIST_REQUEST, \r\n   SET_RECRUITER_LIST_REQUEST,} from './constants';\r\n\r\n   \r\nexport const getRecruiterList =()=>({\r\n  type:GET_RECRUITER_LIST_REQUEST\r\n})\r\n\r\nexport const setRecruiter = ( recruiters ) => ( {\r\n  type: SET_RECRUITER_LIST_REQUEST,\r\n  payload: recruiters\r\n} );","import {GET_TEAMLEAD_LIST_REQUEST, \r\n   SET_TEAMLEAD_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getTeamLeadList =()=>({\r\n  type:GET_TEAMLEAD_LIST_REQUEST\r\n})\r\n\r\nexport const setTeamLead = ( teamlead ) => ( {\r\n  type: SET_TEAMLEAD_LIST_REQUEST,\r\n  payload: teamlead\r\n} );","import {GET_REPORTING_MAN_LIST_REQUEST, \r\n   SET_REPORTING_MAN_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getReportingManList =()=>({\r\n  type:GET_REPORTING_MAN_LIST_REQUEST\r\n})\r\n\r\nexport const setReportingMan = ( reportingmanager ) => ( {\r\n  type: SET_REPORTING_MAN_LIST_REQUEST,\r\n  payload: reportingmanager\r\n} );","// @flow\r\nimport {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\nexport const initMenu = () => ({\r\n    type: INIT_MENU,\r\n    payload: {},\r\n});\r\n\r\nexport const initMenuSuccess = (menuItems) => ({\r\n    type: INIT_MENU_SUCCESS,\r\n    payload: { menuItems },\r\n});\r\n\r\nexport const changeActiveMenuFromLocation = () => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    payload: {},\r\n});\r\n\r\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds) => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n    payload: { activatedMenuItemIds },\r\n});\r\n","import {GET_LEAVE_LIST_REQUEST, \r\n   SET_LEAVE_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getLeaveList =()=>({\r\n  type:GET_LEAVE_LIST_REQUEST\r\n})\r\n\r\nexport const setLeave = ( leave ) => ( {\r\n  type: SET_LEAVE_LIST_REQUEST,\r\n  payload: leave\r\n} );","\r\n/** List of Daily Target */\r\nexport const GET_DT_LIST_REQUEST = 'GET_DT_LIST_REQUEST';\r\nexport const SET_DT_LIST_REQUEST = 'SET_DT_LIST_REQUEST';\r\n\r\n/** List of Todays Interview */\r\nexport const GET_TOIN_LIST_REQUEST = 'GET_TOIN_LIST_REQUEST';\r\nexport const SET_TOIN_LIST_REQUEST = 'SET_TOIN_LIST_REQUEST';\r\n\r\n/** List of Month Offer */\r\nexport const GET_MONOF_LIST_REQUEST = 'GET_MONOF_LIST_REQUEST';\r\nexport const SET_MONOF_LIST_REQUEST = 'SET_MONOF_LIST_REQUEST';\r\n\r\n/** List of Month to be join */\r\nexport const GET_MONTHJOIN_LIST_REQUEST = 'GET_MONTHJOIN_LIST_REQUEST';\r\nexport const SET_MONTHJOIN_LIST_REQUEST = 'SET_MONTHJOIN_LIST_REQUEST';\r\n\r\n/** List of Month to be join */\r\nexport const GET_ATSACTI_LIST_REQUEST = 'GET_ATSACTI_LIST_REQUEST';\r\nexport const SET_ATSACTI_LIST_REQUEST = 'SET_ATSACTI_LIST_REQUEST';","\r\n/** List of LIST */\r\nexport const GET_LIST_LIST_REQUEST = 'GET_LIST_LIST_REQUEST';\r\nexport const SET_LIST_LIST_REQUEST = 'SET_LIST_LIST_REQUEST';\r\n\r\n\r\n/** Offer of LIST */\r\nexport const GET_OFFER_LIST_REQUEST = 'GET_OFFER_LIST_REQUEST';\r\nexport const SET_OFFER_LIST_REQUEST = 'SET_OFFER_LIST_REQUEST';\r\n\r\n/** ViewToBeJoin of LIST */\r\nexport const GET_VTBJ_LIST_REQUEST = 'GET_VTBJ_LIST_REQUEST';\r\nexport const SET_VTBJ_LIST_REQUEST = 'SET_VTBJ_LIST_REQUEST';\r\n\r\n/** Join  LIST */\r\nexport const GET_JOIN_LIST_REQUEST = 'GET_JOIN_LIST_REQUEST';\r\nexport const SET_JOIN_LIST_REQUEST = 'SET_JOIN_LIST_REQUEST';\r\n\r\n/** BD  LIST */\r\nexport const GET_BD_LIST_REQUEST = 'GET_BD_LIST_REQUEST';\r\nexport const SET_BD_LIST_REQUEST = 'SET_BD_LIST_REQUEST';","\r\n\r\n\r\n/** List of datewise Report */\r\nexport const GET_DATEWISE_LIST_REQUEST = 'GET_DATEWISE_LIST_REQUEST';\r\nexport const SET_DATEWISE_LIST_REQUEST = 'SET_DATEWISE_LIST_REQUEST';\r\n\r\n/** List of MonthCount Report */\r\nexport const GET_MONTHCOUNT_LIST_REQUEST = 'GET_MONTHCOUNT_LIST_REQUEST';\r\nexport const SET_MONTHCOUNT_LIST_REQUEST = 'SET_MONTHCOUNT_LIST_REQUEST';\r\n\r\n/** List of Today Report */\r\nexport const GET_TODAY_LIST_REQUEST = 'GET_TODAY_LIST_REQUEST';\r\nexport const SET_TODAY_LIST_REQUEST = 'SET_TODAY_LIST_REQUEST';\r\n\r\n/** List of Revenue Report */\r\nexport const GET_REVENU_LIST_REQUEST = 'GET_REVENU_LIST_REQUEST';\r\nexport const SET_REVENU_LIST_REQUEST = 'SET_REVENU_LIST_REQUEST';\r\n\r\n/** List of Requirement Progress Report */\r\nexport const GET_RPR_LIST_REQUEST = 'GET_RPR_LIST_REQUEST';\r\nexport const SET_RPR_LIST_REQUEST = 'SET_RPR_LIST_REQUEST';","/* AUTH */\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\r\nexport const REGISTER_USER = 'REGISTER_USER';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\r\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\r\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\r\n","/* LAYOUT */\r\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\r\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\r\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\r\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\r\n\r\n/* RIGHT SIDEBAR */\r\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\r\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\r\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\r\n","/** List of Requirement */\r\nexport const GET_REQUIREMENTS_LIST_REQUEST = 'GET_REQUIREMENTS_LIST_REQUEST';\r\nexport const SET_REQUIREMENTS_LIST_REQUEST = 'SET_REQUIREMENTS_LIST_REQUEST';\r\n/** List of Requirement */\r\nexport const GET_CRITICAL_REQUIREMENTS_LIST = 'GET_CRITICAL_REQUIREMENTS_LIST';\r\nexport const SET_CRITICAL_REQUIREMENTS_LIST = 'SET_CRITICAL_REQUIREMENTS_LIST';\r\n\r\n/** List of Requirement */\r\nexport const SAVE_REQUIREMENTS = 'SAVE_REQUIREMENTS';\r\nexport const SET_SAVE_REQUIREMENTS = 'SET_SAVE_REQUIREMENTS';\r\n\r\n//modal\r\nexport const GET_REQUIREMENTS_MODAL = 'GET_REQUIREMENTS_MODAL';\r\nexport const HIDE_REQUIREMENTS_MODAL = 'HIDE_REQUIREMENTS_MODAL';\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getUserList } from '../../../redux/user/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\n\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                    \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewUser = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Users.users);\r\n  // console.log(records, 'join list');\r\n    useEffect(() => {\r\n        dispatch(getUserList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField:'id',\r\n            text:'ID',\r\n            hidden: true\r\n        },\r\n        {\r\n            dataField: 'ECode',\r\n            text: 'Employee Code.',\r\n            //sort: true,\r\n        },\r\n        {\r\n            dataField: 'EFullname',\r\n            text: 'Name',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'ECompany_Name',\r\n            text: 'Company',\r\n        },\r\n        {\r\n            dataField: 'EDesignation',\r\n            text: 'Designation',\r\n        },\r\n        {\r\n            dataField: 'ELocation',\r\n            text: 'Location',\r\n        },\r\n        {\r\n            dataField: 'ERole',\r\n            text: 'Role',\r\n        },\r\n        {\r\n            dataField: 'EEmail',\r\n            text: 'Email',\r\n        },\r\n        {\r\n            dataField: 'email',\r\n            text: 'Edit',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary\"\r\n                    onClick={() => _validateFunction(row)}\r\n                    title=\"Edit\"\r\n                  >\r\n                   <FeatherIcon.Edit />\r\n                  </button>\r\n                );\r\n              },\r\n        },\r\n        {\r\n            dataField: 'Delete',\r\n            text: 'Delete',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary\"\r\n                    onClick={() => _validateFunction(row)}\r\n                    title=\"Delete\"\r\n                  >\r\n                   <FeatherIcon.Trash2 />\r\n                  </button>\r\n                );\r\n              },\r\n        } \r\n    ];\r\n    function _validateFunction(row , id) {    \r\n        // console.log(\"activity id :\",(id));\r\n         // dispatch(getRequirementModal((row)));\r\n \r\n         //dispatch( setSaveRequirement( row) );\r\n \r\n          //   dispatch( getRequirementModal() );\r\n     }\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewUser;\r\n\r\n\r\n","import {\r\n    GET_DT_LIST_REQUEST,\r\n    SET_DT_LIST_REQUEST,\r\n    GET_TOIN_LIST_REQUEST,\r\n    SET_TOIN_LIST_REQUEST,\r\n    GET_MONOF_LIST_REQUEST,\r\n    SET_MONOF_LIST_REQUEST,\r\n    GET_MONTHJOIN_LIST_REQUEST,\r\n    SET_MONTHJOIN_LIST_REQUEST,\r\n    GET_ATSACTI_LIST_REQUEST,\r\n    SET_ATSACTI_LIST_REQUEST\r\n} from './constants';\r\n\r\n//Daily target\r\nexport const getDailyTargetList = () => ({\r\n    type: GET_DT_LIST_REQUEST,\r\n});\r\n\r\nexport const setDailyTargetList = (dailytarget) => ({\r\n    type: SET_DT_LIST_REQUEST,\r\n    payload: dailytarget,\r\n});\r\n//Todays Interview\r\nexport const getTodaysInterviewList = () => ({\r\n    type: GET_TOIN_LIST_REQUEST,\r\n});\r\n\r\nexport const setTodaysInterviewList = (todaysinterview) => ({\r\n    type: SET_TOIN_LIST_REQUEST,\r\n    payload: todaysinterview,\r\n});\r\n//Month Offer\r\nexport const getMonthOfferList = () => ({\r\n  type: GET_MONOF_LIST_REQUEST,\r\n});\r\n\r\nexport const setMonthOfferList = (monthoffer) => ({\r\n  type: SET_MONOF_LIST_REQUEST,\r\n  payload: monthoffer,\r\n});\r\n//Month To Be Join\r\nexport const getMonthToBeJoinList = () => ({\r\n  type: GET_MONTHJOIN_LIST_REQUEST,\r\n});\r\n\r\nexport const setMonthToBeJoinList = (monthtobejoin) => ({\r\n  type: SET_MONTHJOIN_LIST_REQUEST,\r\n  payload: monthtobejoin,\r\n});\r\n\r\n//Ats Activity\r\nexport const getAtsActivityList = () => ({\r\n  type: GET_ATSACTI_LIST_REQUEST,\r\n});\r\n\r\nexport const setAtsActivityList = (atsactivity) => ({\r\n  type: SET_ATSACTI_LIST_REQUEST,\r\n  payload: atsactivity,\r\n});","\r\n/** List of Client */\r\nexport const GET_USER_LIST_REQUEST = 'GET_USER_LIST_REQUEST';\r\nexport const SET_USER_LIST_REQUEST = 'SET_USER_LIST_REQUEST';\r\n\r\n//Create User\r\nexport const ADD_USER = 'ADD_USER';\r\nexport const ADD_USER_REQUEST = 'ADD_USER_REQUEST';\r\n\r\n//error\r\nexport const GET_ERROR = 'GET_ERROR';","\r\n/** List of Client */\r\nexport const GET_REVENUE_LIST_REQUEST = 'GET_REVENUE_LIST_REQUEST';\r\nexport const SET_REVENUE_LIST_REQUEST = 'SET_REVENUE_LIST_REQUEST';\r\n\r\n//Create REVENUE\r\nexport const ADD_REVENUE = 'ADD_REVENUE';\r\nexport const ADD_REVENUE_REQUEST = 'ADD_REVENUE_REQUEST';\r\n\r\n//error\r\nexport const GET_ERROR = 'GET_ERROR';","\r\n/** List of Client */\r\nexport const GET_MONTH_LIST_REQUEST = 'GET_MONTH_LIST_REQUEST';\r\nexport const SET_MONTH_LIST_REQUEST = 'SET_MONTH_LIST_REQUEST';\r\n\r\n//Create MONTH\r\nexport const ADD_MONTH = 'ADD_MONTH';\r\nexport const ADD_MONTH_REQUEST = 'ADD_MONTH_REQUEST';\r\n\r\n//error\r\nexport const GET_ERROR = 'GET_ERROR';","\r\n/** List of Client */\r\nexport const GET_CALL_LIST_REQUEST = 'GET_CALL_LIST_REQUEST';\r\nexport const SET_CALL_LIST_REQUEST = 'SET_CALL_LIST_REQUEST';\r\n\r\n//Create CALL\r\nexport const ADD_CALL = 'ADD_CALL';\r\nexport const ADD_CALL_REQUEST = 'ADD_CALL_REQUEST';\r\n\r\n//error\r\nexport const GET_ERROR = 'GET_ERROR';","/* APP MENU */\r\nexport const INIT_MENU = 'INIT_MENU';\r\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\r\n","module.exports = {\r\n    baseUrl: 'http://144.48.250.235:98/api/',\r\n    \r\n}","\r\n/** List of Client */\r\nexport const GET_CLIENT_LIST_REQUEST = 'GET_CLIENT_LIST_REQUEST';\r\nexport const SET_CLIENT_LIST_REQUEST = 'SET_CLIENT_LIST_REQUEST';\r\n//Add Client\r\nexport const CREATE_CLIENT = 'CREATE_CLIENT';\r\nexport const CREATE_CLIENT_SUCCESS = 'CREATE_CLIENT_SUCCESS';","\r\n/** List of CWS */\r\nexport const GET_CWS_LIST_REQUEST = 'GET_CWS_LIST_REQUEST';\r\nexport const SET_CWS_LIST_REQUEST = 'SET_CWS_LIST_REQUEST';\r\n//Add CWS\r\nexport const CREATE_CWS = 'CREATE_CWS';\r\nexport const CREATE_CWS_SUCCESS = 'CREATE_CWS_SUCCESS';","\r\n/** List of Team */\r\nexport const GET_TEAM_LIST_REQUEST = 'GET_TEAM_LIST_REQUEST';\r\nexport const SET_TEAM_LIST_REQUEST = 'SET_TEAM_LIST_REQUEST';\r\n\r\n//Add Team\r\nexport const CREATE_TEAM = 'CREATE_TEAM';\r\nexport const CREATE_TEAM_SUCCESS = 'CREATE_TEAM_SUCCESS';","\r\n/** List of Client */\r\nexport const GET_ROLE_LIST_REQUEST = 'GET_ROLE_LIST_REQUEST';\r\nexport const SET_ROLE_LIST_REQUEST = 'SET_ROLE_LIST_REQUEST';\r\n\r\n//\r\nexport const CREATE_ROLE = 'CREATE_ROLE';\r\nexport const CREATE_ROLE_SUCCESS = 'CREATE_ROLE_SUCCESS';\r\n\r\n","import {\r\n    GET_LIST_LIST_REQUEST,\r\n    SET_LIST_LIST_REQUEST,\r\n    GET_OFFER_LIST_REQUEST,\r\n    SET_OFFER_LIST_REQUEST,\r\n    GET_VTBJ_LIST_REQUEST,\r\n    SET_VTBJ_LIST_REQUEST,\r\n    GET_JOIN_LIST_REQUEST,\r\n    SET_JOIN_LIST_REQUEST,\r\n    GET_BD_LIST_REQUEST,\r\n    SET_BD_LIST_REQUEST\r\n} from './constants';\r\n\r\nexport const getListList = () => ({\r\n    type: GET_LIST_LIST_REQUEST,\r\n});\r\n\r\nexport const setList = (list) => ({\r\n    type: SET_LIST_LIST_REQUEST,    \r\n    payload: list,\r\n    \r\n});\r\n//offer\r\nexport const getOfferList = () => ({\r\n    type: GET_OFFER_LIST_REQUEST,\r\n});\r\n\r\nexport const setOfferList = (offer) => ({\r\n    type: SET_OFFER_LIST_REQUEST,\r\n    payload: offer,\r\n});\r\n//View to be join\r\nexport const getViewToBeJoinList = () => ({\r\n    type: GET_VTBJ_LIST_REQUEST,\r\n});\r\n\r\nexport const setViewToBeJoinList = (viewtobejoin) => ({\r\n    type: SET_VTBJ_LIST_REQUEST,\r\n    payload: viewtobejoin,\r\n});\r\n\r\n//Join List\r\nexport const getJoinList = () => ({\r\n  type: GET_JOIN_LIST_REQUEST,\r\n});\r\nexport const setJoinList = (joinlist) => ({\r\n  type: SET_JOIN_LIST_REQUEST,\r\n  payload: joinlist,\r\n});\r\n\r\n//BD List\r\nexport const getBDList = () => ({\r\n  type: GET_BD_LIST_REQUEST,\r\n});\r\nexport const setBDList = (bdlist) => ({\r\n  type: SET_BD_LIST_REQUEST,\r\n  payload: bdlist,\r\n});\r\n","import {GET_RPR_LIST_REQUEST, \r\n   SET_RPR_LIST_REQUEST,GET_DATEWISE_LIST_REQUEST, SET_DATEWISE_LIST_REQUEST, GET_MONTHCOUNT_LIST_REQUEST, SET_MONTHCOUNT_LIST_REQUEST,\r\n  GET_TODAY_LIST_REQUEST, SET_TODAY_LIST_REQUEST, GET_REVENU_LIST_REQUEST, SET_REVENU_LIST_REQUEST} from './constants';\r\n\r\n\r\n\r\n//date wise report\r\nexport const getDatewiseReportList =()=>({\r\n  type:GET_DATEWISE_LIST_REQUEST\r\n});\r\nexport const setDatewiseReport = ( datewsiereport ) => ( {\r\n  type: SET_DATEWISE_LIST_REQUEST,\r\n  payload: datewsiereport\r\n} );\r\n\r\n//Month count report\r\nexport const getMonthCountReportList =()=>({\r\n  type:GET_MONTHCOUNT_LIST_REQUEST\r\n});\r\nexport const setMonthCountReport = ( monthcountreport ) => ( {\r\n  type: SET_MONTHCOUNT_LIST_REQUEST,\r\n  payload: monthcountreport\r\n} );\r\n\r\n//Today report\r\nexport const getTodayReportList =()=>({\r\n  type:GET_TODAY_LIST_REQUEST\r\n});\r\nexport const setTodayReport = ( todayrepoert ) => ( {\r\n  type: SET_TODAY_LIST_REQUEST,\r\n  payload: todayrepoert\r\n} );\r\n\r\n//Revenu report\r\nexport const getRevenuReportList =()=>({\r\n  type:GET_REVENU_LIST_REQUEST\r\n})\r\n\r\nexport const setRevenuReport = ( revenureport ) => ( {\r\n  type: SET_REVENU_LIST_REQUEST,\r\n  payload: revenureport\r\n} );\r\n\r\n//requirement report\r\nexport const getReqReportList =()=>({\r\n  type:GET_RPR_LIST_REQUEST\r\n});\r\nexport const setReqReport = ( reqreport ) => ( {\r\n  type: SET_RPR_LIST_REQUEST,\r\n  payload: reqreport\r\n} );","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search} from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\n//import * as FeatherIcon from 'react-feather';\r\nimport { getAttendanceList } from '../../redux/attendance/actions'; \r\n//import PageTitle from '../../components/PageTitle';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //        // dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getAttendanceReportModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst AttendanceReport = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n    let records = useSelector((state) => state.Attendance.attendance);\r\n    \r\n   //console.log(records)\r\n    useEffect(() => {\r\n        dispatch(getAttendanceList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'aname',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'intime',\r\n            text:\"In Time\"\r\n        },\r\n        {\r\n            dataField: 'inip',\r\n            text: 'IP',\r\n        },\r\n        {\r\n            dataField: 'outtime',\r\n            text: 'Out Time',\r\n        },\r\n        {\r\n            dataField: 'outip',\r\n            text: 'IP',\r\n        },\r\n        {\r\n            dataField: 'atime',\r\n            text: 'Total Time',\r\n        }\r\n    ];\r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AttendanceReport;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\n//import * as FeatherIcon from 'react-feather';\r\nimport { getHolidayList } from '../../redux/holiday/actions';\r\nimport config from '../../helpers/baseurl';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\n\r\nvar urlpattern =config.baseUrl;\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n   // const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         //dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getHolidaysModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                           \r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst Holidays = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Holiday.holiday);\r\n   console.log(records)\r\n    useEffect(() => {\r\n        dispatch(getHolidayList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'name',\r\n            text: 'Holiday Name.',\r\n        },\r\n        {\r\n            dataField:'date',\r\n            text:\"Date\"\r\n        },\r\n        {\r\n            dataField: 'day',\r\n            text: 'Day',\r\n        },\r\n        {\r\n            dataField: 'type',\r\n            text: 'Type',\r\n        }\r\n    ];\r\n    let loginDetails = useSelector((state)=> state.Auth.user || []);\r\n    var getUsername = loginDetails.Username;\r\n    const [date, setdate]=useState('');\r\n    const [name, setname]=useState('');\r\n    const [day, setday]=useState('');\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n       const data ={\r\n        date:date,\r\n        name:name,\r\n        day:day,\r\n        type:\"\",\r\n        username:getUsername\r\n       }\r\n       var config = {\r\n        method: 'post',\r\n        url: `${urlpattern}HolidayMaster`,\r\n        data : data\r\n      };\r\n      \r\n      axios(config)\r\n      .then(function (response) {\r\n        console.log(JSON.stringify(response.data));\r\n        dispatch(getHolidayList());\r\n        swal(\"Holiday Created Successful\", \"success\"); \r\n      })\r\n      .catch(function (error) {\r\n        swal(error, \"error\");\r\n      });\r\n     }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <form onSubmit={handleSubmit}> \r\n            <Row>\r\n                <Col md={12} className=\"\">\r\n                <div className=\"input-group mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                <button type=\"submit\" className=\"btn btn-primary pl-5 pr-5\">Create</button>\r\n                </div>\r\n                <input type=\"text\" className=\"form-control search-style\" placeholder=\"Holiday Name :\"\r\n                 onChange={(e) => {\r\n                    setname (e.target.value);\r\n                }}/>\r\n                <input type=\"date\" className=\"form-control search-style\" placeholder=\"Date :\"\r\n                 onChange={(e) => {\r\n                    setdate (e.target.value);\r\n                }}/>\r\n                <input type=\"text\" className=\"form-control search-style\" placeholder=\"Day\"\r\n                 onChange={(e) => {\r\n                    setday (e.target.value);\r\n                }}/>\r\n                </div>\r\n                </Col>                            \r\n            </Row>\r\n            </form>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Holidays;\r\n\r\n\r\n","import React, {  useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { User, Calendar, File } from 'react-feather';\r\nimport config from '../../helpers/baseurl';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\n\r\nvar urlpattern =config.baseUrl;\r\nconst ApplyForLeave =()=> {\r\n    let loginDetails = useSelector((state)=> state.Auth.user || []);\r\n    var getUsername = loginDetails.Username;\r\n    const [type, settype]=useState('');\r\n    const [inwords, setinwords]=useState('');\r\n    const [startdate, setstartdate]=useState('');\r\n    const [enddate, setenddate]=useState('');\r\n    const [reason, setreason]=useState('');\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n       const data ={\r\n        type:type,\r\n        inwords:inwords,\r\n        startdate:startdate,\r\n        enddate:enddate,\r\n        reason:reason,\r\n        createby:getUsername,\r\n        noofdays:\"\"\r\n       }\r\n       var config = {\r\n        method: 'post',\r\n        url: `${urlpattern}LeaveMaster`,\r\n        data : data\r\n      };\r\n      \r\n      axios(config)\r\n      .then(function (response) {\r\n        console.log(JSON.stringify(response.data));\r\n        swal(\"Leave Applay Successful\", \"success\"); \r\n      })\r\n      .catch(function (error) {\r\n        swal(error, \"error\");\r\n      });\r\n     }\r\n    \r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 offset-md-3\">\r\n                            <form onSubmit={handleSubmit}  className=\"authentication-form card p-5\">\r\n                                \r\n                            <h5 className=\"text-uppercase  text-center\">Apply Your Leave</h5>\r\n                            <div className=\"form-group\">\r\n                            <label for=\"fullname\">Leave Type</label>\r\n                            <div class=\"input-group mb-3\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text\" id=\"basic-addon1\"><User className=\"icon-dual\" /></span>\r\n                                </div>\r\n                                <select\r\n                                            name=\"type\"\r\n                                            id=\"type\"\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => {\r\n                                                settype (e.target.value);\r\n                                            }}\r\n                                        >\r\n                                            <option value=\"\">Select</option>\r\n                                            <option value=\"Sick Leave\">Sick Leave</option>\r\n                                            <option value=\"Casual Leave\">Casual Leave</option>\r\n                                            <option value=\"Earn Leave\">Earn Leave</option>\r\n                                        </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                            <label for=\"fullname\">Leave For</label>\r\n                            <div class=\"input-group mb-3\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text\" id=\"basic-addon1\"><User className=\"icon-dual\" /></span>\r\n                                </div>\r\n                                <select\r\n                                            name=\"inwords\"\r\n                                            id=\"inwords\"\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => {\r\n                                                setinwords (e.target.value);\r\n                                            }}\r\n                                        >\r\n                                            <option value=\"\">Select</option>\r\n                                            <option value=\"Half Day\">Half Day</option>\r\n                                            <option value=\"Full Day\">Full Day</option>\r\n                                            <option value=\"More Than 1 Day\">More Than 1 Day</option>\r\n                                        </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                            <label for=\"fullname\">Start Date</label>\r\n                            <div class=\"input-group mb-3\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text\" id=\"basic-addon1\"><Calendar className=\"icon-dual\" /></span>\r\n                                </div>\r\n                                <input\r\n                                            type=\"date\"\r\n                                            name=\"startdate\"\r\n                                            id=\"startdate\"\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => {\r\n                                                setstartdate (e.target.value);\r\n                                            }}\r\n                                        />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                            <label for=\"fullname\">End Date</label>\r\n                            <div class=\"input-group mb-3\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text\" id=\"basic-addon1\"><Calendar className=\"icon-dual\" /></span>\r\n                                </div>\r\n                                <input\r\n                                            type=\"date\"\r\n                                            name=\"enddate\"\r\n                                            id=\"enddate\"\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => {\r\n                                                setenddate (e.target.value);\r\n                                            }}\r\n                                        />\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group\">\r\n                            <label for=\"fullname\">Reason</label>\r\n                            <div class=\"input-group mb-3\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text\" id=\"basic-addon1\"><File className=\"icon-dual\" /></span>\r\n                                </div>\r\n                                <input\r\n                                             type=\"text\"\r\n                                             name=\"reason\"\r\n                                             id=\"reason\" className=\"form-control\"\r\n                                             onChange={(e) => {\r\n                                                 setreason (e.target.value);\r\n                                             }}\r\n                                        />\r\n                                </div>\r\n                            </div>\r\n                               \r\n                                <div className=\"form-group mb-0 text-center\">\r\n                                    <button type=\"submit\" className=\"btn-block btn btn-secondary\">\r\n                                        Apply\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n\r\nexport default ApplyForLeave;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search,CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getAttendanceList } from '../../redux/attendance/actions';\r\n\r\n// const defaultSorted = [\r\n//     {\r\n//         dataField: 'id',\r\n//         order: 'asc',\r\n//     },\r\n// ];\r\nconst { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">SHow</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         dispatch( setDepartamento( row ) );\r\n\r\n    //         dispatch( getDepartamentosModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                    \r\n                                <UncontrolledDropdown className=\" profile-dropdown-menu\">\r\n                                <button className=\"btn btn-secondary bg-secondary upbtn  mr-0\">Upload</button>\r\n                <DropdownToggle\r\n                    data-toggle=\"dropdown\"\r\n                    tag=\"button\"\r\n                    className=\"btn btn-secondary dropdown-toggle bg-secondary  mr-0\">\r\n                    Download <FeatherIcon.ChevronDown />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"topbar-dropdown-menu profile-dropdown-items\">\r\n                    <div className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                    </div>\r\n                    {/* <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export PDF</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export EXCEL</ExportCSVButton>\r\n                    </div> */}\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n                                {/* <ExportCSVButton className=\"btn-primary\" { ...props.csvProps }>Export CSV!!</ExportCSVButton> */}\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                // defaultSorted={defaultSorted}\r\n                                //rowEvents={rowEvent}\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                                wrapperClasses=\"table-responsive\"\r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst LeaveBalance = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n    let records = useSelector((state) => state.Attendance.attendance);\r\n    \r\n    console.log(records);\r\n    useEffect(() => {\r\n        dispatch(getAttendanceList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'date',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField: 'day',\r\n            text: 'Type',\r\n        }, \r\n        {\r\n            dataField: 'intime',\r\n            text: 'Total Available',\r\n        }, \r\n        {\r\n            dataField: 'outtime',\r\n            text: 'Total Used',\r\n        }, \r\n        {\r\n            dataField: 'leavebalance',\r\n            text: 'Balance',\r\n        }, \r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default LeaveBalance;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import { getLeaveList } from '../../redux/leave/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\nimport $ from \"jquery\";\r\nimport config from '../../helpers/baseurl';\r\n\r\n\r\nvar urlpattern =config.baseUrl;\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    \r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                              \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewLeave = () => {\r\n\r\n    const [leaverecord, setleaveRecord]=useState([]);\r\n    let loginDetails = useSelector((state)=> state.Auth.user || []);\r\n     useEffect(() => {\r\n         getleaveReport();\r\n \r\n         // eslint-disable-next-line \r\n     }, []);\r\n     const getleaveReport=()=>{\r\n         var getUsername = loginDetails.Username;\r\n         //alert(\"calling\");\r\n         $.ajax\r\n         ({\r\n              \r\n             url: `${urlpattern}LeaveMaster?username=${getUsername}`,\r\n             type:\"GET\",\r\n             dataType:\"JSON\",\r\n             \r\n             \r\n             success: function(data) \r\n             {\r\n                // debugger;\r\n                 //console.log(\"log response on success\");\r\n                 console.log(data, \"attendance records\");\r\n                 var allLeaverecord = data.Data;\r\n                 setleaveRecord(allLeaverecord);\r\n             }\r\n         });\r\n         \r\n     }\r\n     console.log(leaverecord, \"leaverecordleaverecord\");\r\nlet records = leaverecord || [];\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'id',\r\n            text: 'Id.',\r\n            hidden:true\r\n        },\r\n        {\r\n            dataField:'type',\r\n            text:\"Type\"\r\n        },\r\n        {\r\n            dataField: 'noofdays',\r\n            text: 'No. Of days',\r\n        },\r\n        {\r\n            dataField: 'reason',\r\n            text: 'Reason',\r\n        },\r\n        {\r\n            dataField: 'startdate',\r\n            text: 'Start Date',\r\n        },\r\n        {\r\n            dataField: 'enddate',\r\n            text: 'End Date',\r\n        },\r\n        {\r\n            dataField: 'leadstatus',\r\n            text: 'TL Status',\r\n        },\r\n        {\r\n            dataField: 'managerstatus',\r\n            text: 'Manager Status',\r\n            \r\n        },  \r\n        {\r\n            dataField: 'adminstatus',\r\n            text: 'HR Status',\r\n        }\r\n    ];\r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewLeave;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button,  Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport AttendanceReport from './AttendanceReport';\r\nimport Holidays from './Holidays';\r\nimport ApplyForLeave from './ApplyForLeave';\r\nimport LeaveBalance from './LeaveBalance';\r\nimport ViewLeave from './ViewLeave';\r\nconst Hr = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"page-title\">\r\n                <Col md={6}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Hr', path: '/hr', active: true },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"text-right\">\r\n                <Button color=\"primary\"><i className=\"uil uil-plus\"></i>ADD ITEM</Button>\r\n                </Col>\r\n            </Row>\r\n      <Nav tabs className=\"requirement-tab hr-tab pt-3 pb-3 nav nav-tabs row bg-white\">\r\n        <NavItem className=\"col-sm-3\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Attedance Report\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-2\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Holidays\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-3\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Apply For Leave\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-2\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '4' })}\r\n            onClick={() => { toggle('4'); }}\r\n          >\r\n            View Leave\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-2 \">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '5' })}\r\n            onClick={() => { toggle('5'); }}\r\n          >\r\n            Leave Balance\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <AttendanceReport/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <Holidays/>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n          <ApplyForLeave/>\r\n        </TabPane >\r\n        <TabPane tabId=\"4\">\r\n          <ViewLeave/>\r\n        </TabPane >\r\n        <TabPane tabId=\"5\">\r\n          <LeaveBalance/>\r\n        </TabPane >\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Hr;","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search,CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport {UncontrolledDropdown, DropdownMenu, DropdownToggle, Button } from 'reactstrap';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport PageTitle from '../../components/PageTitle';\r\n\r\nimport $ from \"jquery\";\r\nimport config from '../../helpers/baseurl';\r\n\r\n\r\nvar urlpattern =config.baseUrl;\r\n\r\nconst { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">SHow</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         dispatch( setDepartamento( row ) );\r\n\r\n    //         dispatch( getDepartamentosModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                    \r\n                                <UncontrolledDropdown className=\" profile-dropdown-menu\">\r\n                                <button className=\"btn btn-secondary bg-secondary upbtn  mr-0\">Upload New</button>\r\n                <DropdownToggle\r\n                    data-toggle=\"dropdown\"\r\n                    tag=\"button\"\r\n                    className=\"btn btn-secondary dropdown-toggle bg-secondary  mr-0\">\r\n                    Download <FeatherIcon.ChevronDown />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"topbar-dropdown-menu profile-dropdown-items\">\r\n                    <div className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                    </div>\r\n                    {/* <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export PDF</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export EXCEL</ExportCSVButton>\r\n                    </div> */}\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n                                {/* <ExportCSVButton className=\"btn-primary\" { ...props.csvProps }>Export CSV!!</ExportCSVButton> */}\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                // defaultSorted={defaultSorted}\r\n                                //rowEvents={rowEvent}\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                                wrapperClasses=\"table-responsive\"\r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst Attendance = () => {\r\n\r\n    const [attendancerecord, setAttendanceRecord]=useState([]);\r\n    let loginDetails = useSelector((state)=> state.Auth.user || []);\r\n     useEffect(() => {\r\n         getAttendanceReport();\r\n \r\n         // eslint-disable-next-line \r\n     }, []);\r\n     const getAttendanceReport=()=>{\r\n         var getUsername = loginDetails.Username;\r\n         var getyear = new Date();\r\n         var newyear = getyear.getFullYear();\r\n         var getmonth = new Date();\r\n         var setmonth = getmonth.getMonth();\r\n         console.log(setmonth);\r\n         //alert(\"calling\");\r\n         $.ajax\r\n         ({\r\n              \r\n             url: `${urlpattern}Attendance_Master?username=${getUsername}&month=${setmonth+1}&year=${newyear}`,\r\n             type:\"GET\",\r\n             dataType:\"JSON\",\r\n             \r\n             \r\n             success: function(data) \r\n             {\r\n                // debugger;\r\n                 //console.log(\"log response on success\");\r\n                 console.log(data, \"attendance records\");\r\n                 var allAttendancerecord = data.Data;\r\n                 setAttendanceRecord(allAttendancerecord);\r\n             }\r\n         });\r\n         \r\n     }\r\n     \r\nlet records = attendancerecord || [];\r\n    const columns = [\r\n        {\r\n            dataField: 'date',\r\n            text: 'Date.',\r\n        },\r\n        {\r\n            dataField: 'day',\r\n            text: 'Day',\r\n        }, \r\n        {\r\n            dataField: 'intime',\r\n            text: 'In Time',\r\n        }, \r\n        {\r\n            dataField: 'outtime',\r\n            text: 'Out Time',\r\n        }, \r\n        {\r\n            dataField: 'totaltime',\r\n            text: 'Total Time',\r\n        }, \r\n        {\r\n            dataField: 'status',\r\n            text: 'Status',\r\n        }, \r\n        {\r\n            dataField: 'leavebalance',\r\n            text: 'Leave Balance',\r\n        }, \r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row className=\"page-title mb-3\">\r\n                <Col md={6}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Attendance', path: '/attendance', active: true },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"text-right\">\r\n                <Button color=\"primary\"><i className=\"uil uil-plus\"></i>ADD ITEM</Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Attendance;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\n//import * as FeatherIcon from 'react-feather';\r\nimport { getDailyTargetList } from '../../redux/activity/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getTargetSubmissionModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                //rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst TargetSubmission = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Activity.dailytarget);\r\n   console.log(records)\r\n    useEffect(() => {\r\n        dispatch(getDailyTargetList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'username',\r\n            text: 'Recruiter Name.',\r\n        },\r\n        {\r\n            dataField:'target',\r\n            text:\"Target\"\r\n        },\r\n        {\r\n            dataField: 'achived',\r\n            text: 'Achived',\r\n        },\r\n        {\r\n            dataField: 'closure',\r\n            text: 'Closure',\r\n        }\r\n    ];\r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TargetSubmission;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport { getMonthToBeJoinList } from '../../../redux/activity/actions';\r\nimport moment from 'moment';\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show </label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //        // dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getTodaysInterViewModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n      //var currMonthName  = moment().format('MMMM');\r\n      var prevMonthName  = moment().format('MMMM');\r\n        //console.log(currMonthName);\r\n        //console.log(prevMonthName);\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                             <Row className=\"mt-3\">\r\n                                <Col md={12} className=\"text-uppercase text-center\">\r\n                                    <h5>{prevMonthName} Joining</h5>\r\n                                </Col>                          \r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                               </Col>                            \r\n                            </Row>\r\n                           \r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst TodaysInterView = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Activity.monthtobejoin);\r\n    useEffect(() => {\r\n        dispatch(getMonthToBeJoinList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'candidatename',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'clientname',\r\n            text:\"Client\"\r\n        },\r\n        {\r\n            dataField: 'dates',\r\n            text: 'Offer Date',\r\n        },\r\n        {\r\n            dataField: 'recruitername',\r\n            text: 'Recruiter',\r\n        }\r\n    ];\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TodaysInterView;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport { getMonthOfferList} from '../../../redux/activity/actions';\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //        // dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getMonthOfferModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                             <Row className=\"mt-3\">\r\n                                <Col md={12} className=\"text-uppercase text-center\">\r\n                                    <h5>Month Offer</h5>\r\n                                </Col>                          \r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                               </Col>                            \r\n                            </Row>\r\n                           \r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst MonthOffer = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Activity.monthoffer);\r\n    useEffect(() => {\r\n        dispatch(getMonthOfferList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'candidatename',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'clientname',\r\n            text:\"Client\"\r\n        },\r\n        {\r\n            dataField: 'dates',\r\n            text: 'Offer Date',\r\n        },\r\n        {\r\n            dataField: 'recruitername',\r\n            text: 'Recruiter',\r\n        }\r\n    ];\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row className=\"bg-white\">\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default MonthOffer;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport { getTodaysInterviewList } from '../../../redux/activity/actions';\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         //dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getTodaysInterViewModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    \r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n          No Records Found\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                             <Row>\r\n                                <Col md={12} className=\"text-uppercase text-center\">\r\n                                    <h5>Today's Interview</h5>\r\n                                </Col>                          \r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                               </Col>                            \r\n                            </Row>\r\n                           \r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst TodaysInterView = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Activity.todaysinterview);\r\n    useEffect(() => {\r\n        dispatch(getTodaysInterviewList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'Candidatename',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'InterviewBy',\r\n            text:\"Interview By\"\r\n        },\r\n        {\r\n            dataField: 'Location',\r\n            text: 'Location',\r\n        },\r\n        {\r\n            dataField: 'Time',\r\n            text: 'Time',\r\n        },\r\n        {\r\n            dataField: 'ContactNo',\r\n            text: 'Contact',\r\n            \r\n        }\r\n    ];\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TodaysInterView;\r\n\r\n\r\n","import React from 'react';\r\nimport LastMonthJoining from './OfferAndHire/LastMonthJoining';\r\nimport MonthOffer from './OfferAndHire/MonthOffer';\r\nimport TodaysInterView from './OfferAndHire/TodaysInterView';\r\nimport { Row, Col } from 'reactstrap';\r\nconst OfferAndHire = () => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TodaysInterView/>\r\n                    <MonthOffer/>\r\n                    <LastMonthJoining/>\r\n                </Col>\r\n            </Row>            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default OfferAndHire;\r\n\r\n\r\n","// @flow\r\nimport React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport Col from 'reactstrap/lib/Col';\r\nimport Row from 'reactstrap/lib/Row';\r\n\r\n// simple line chart\r\nconst Graph = () => {\r\n    const apexLineChartWithLables = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'line',\r\n            zoom: {\r\n                enabled: false,\r\n            },\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        colors: ['#5369f8', '#43d39e', '#f77e53', '#1ce1ac', '#25c2e3', '#ffbe0b'],\r\n        tooltip: {\r\n            theme: 'dark',\r\n            x: { show: false }\r\n        },\r\n        dataLabels: {\r\n            enabled: true,\r\n        },\r\n        stroke: {\r\n            width: [3, 3],\r\n            curve: 'smooth',\r\n        },\r\n        title: {\r\n            text: 'SUBBMISSION / INTERVIEW',\r\n            align: 'left',\r\n            style: {\r\n                fontSize: '14px',\r\n            },\r\n        },\r\n        grid: {\r\n            row: {\r\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\r\n                opacity: 0.2,\r\n            },\r\n            borderColor: '#f1f3fa',\r\n        },\r\n        markers: {\r\n            style: 'inverted',\r\n            size: 6,\r\n        },\r\n        xaxis: {\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n            title: {\r\n                text: 'Subbmission Interview',\r\n            },\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: 'Subbmission/Interview',\r\n            },\r\n            min: 5,\r\n            max: 40,\r\n        },\r\n        legend: {\r\n            position: 'top',\r\n            horizontalAlign: 'right',\r\n            floating: true,\r\n            offsetY: -25,\r\n            offsetX: -5,\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 600,\r\n                options: {\r\n                    chart: {\r\n                        toolbar: {\r\n                            show: false,\r\n                        },\r\n                    },\r\n                    legend: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    const apexLineChartWithLablesData = [\r\n        {\r\n            name: 'Submission',\r\n            data: [28, 29, 33, 36, 32, 32, 33],\r\n        },\r\n        {\r\n            name: 'Interview',\r\n            data: [12, 11, 14, 18, 17, 13, 13],\r\n        },\r\n        {\r\n            name: 'Offer',\r\n            data: [8, 9, 11, 12, 17, 13, 13],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col md={12} className=\"text-uppercase text-center\">\r\n                    <h5>Month Graph</h5>\r\n                </Col>                          \r\n            </Row>\r\n           <Row>\r\n               <Col lg={12} className=\"text-right\">\r\n                    <button className=\"btn btn-primary\">Save As</button>\r\n                    <button className=\"btn btn-secondary ml-2\">Print</button>\r\n               </Col>\r\n          </Row> \r\n                <Chart\r\n                    options={apexLineChartWithLables}\r\n                    series={apexLineChartWithLablesData}\r\n                    type=\"line\"\r\n                    className=\"apex-charts\"\r\n                />\r\n         </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Graph;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\n//import * as FeatherIcon from 'react-feather';\r\nimport { getAtsActivityList } from '../../redux/activity/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getJoinListModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                {/* <UncontrolledDropdown className=\" profile-dropdown-menu\">\r\n                <DropdownToggle\r\n                    data-toggle=\"dropdown\"\r\n                    tag=\"button\"\r\n                    className=\"btn btn-secondary dropdown-toggle bg-secondary  mr-0\">\r\n                    Download <FeatherIcon.ChevronDown />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"topbar-dropdown-menu profile-dropdown-items\">\r\n                    <div className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export PDF</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export EXCEL</ExportCSVButton>\r\n                    </div>\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown> */}\r\n                                {/* <ExportCSVButton className=\"btn-primary\" { ...props.csvProps }>Export CSV!!</ExportCSVButton> */}\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst AtsActivity = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Activity.atsactivity);\r\n    useEffect(() => {\r\n        dispatch(getAtsActivityList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'name',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'activity',\r\n            text:\"Activity\"\r\n        },\r\n        {\r\n            dataField: 'activitytime',\r\n            text: 'Date And Time',\r\n        }\r\n    ];\r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AtsActivity;\r\n\r\n\r\n","import React from 'react';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">SHow</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n        return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                           \r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                // defaultSorted={defaultSorted}\r\n                                //rowEvents={rowEvent}\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                                wrapperClasses=\"table-responsive\"\r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst SearchResumeData = (props) => {\r\n\r\n    console.log( props.serchresume);\r\n     \r\nlet records = props.serchresume|| [];\r\n    const columns = [\r\n        {\r\n            dataField: 'R_Name',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField: 'R_DOB',\r\n            text: 'DOB',\r\n        }, \r\n        {\r\n            dataField: 'R_Address',\r\n            text: 'Address',\r\n        }, \r\n        {\r\n            dataField: 'R_Cnt',\r\n            text: 'Phone No',\r\n        }, \r\n        {\r\n            dataField: 'R_Email',\r\n            text: 'Email',\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SearchResumeData;\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\nimport {\r\n    Label,\r\n    FormGroup,\r\n    Button,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n} from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvFeedback } from 'availity-reactstrap-validation';\r\nimport { Mail, User, Phone, Slack } from 'react-feather';\r\nimport config from '../../helpers/baseurl';\r\nimport axios from 'axios';\r\nimport SearchResumeData from './SearchResumeData';\r\n//import $ from \"jquery\";\r\n\r\nvar urlpattern =config.baseUrl;\r\n\r\nconst SearchResume =()=> {\r\n    const [byname, setbyname]=useState('');\r\n    const [byemail, setbyemail]=useState('');\r\n    const [bynumber, setbynumber]=useState('');\r\n    const [byskill, setbyskill]=useState('');\r\n    const [serchresume, setserchresume]=useState([]);\r\n    const handlesubmit=()=>{\r\n        var data = JSON.stringify({\r\n            byname: byname,\r\n            byemail: byemail,\r\n            bynumber: bynumber,\r\n            byskill: byskill\r\n        });\r\n        \r\n        var config = {\r\n          method: 'post',\r\n          url: `${urlpattern}SearchResume`,\r\n          headers: { \r\n            'Content-Type': 'application/json'\r\n          },\r\n          data : data\r\n        };\r\n        \r\n        axios(config)\r\n        .then(function (response) {\r\n            var resumedata =response.data.Data;\r\n            setserchresume(resumedata);\r\n          //console.log(JSON.stringify(response.data));\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n            }\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 offset-md-3\">\r\n                            <AvForm onSubmit={handlesubmit} className=\"authentication-form card p-5\">\r\n                                \r\n                            <h5 className=\"text-uppercase  text-center\">Search By Resume</h5>\r\n                                <AvGroup className=\"\">\r\n                                    <Label for=\"fullname\">Search By Name</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <User className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"text\"\r\n                                            name=\"byname\"\r\n                                            id=\"byname\"\r\n                                            onChange={(e,i) => {\r\n                                                setbyname(e.target.value);\r\n                                            }}\r\n                                            \r\n                                        />\r\n                                    </InputGroup>\r\n\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <AvGroup className=\"\">\r\n                                    <Label for=\"email\">search By Email</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <Mail className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"email\"\r\n                                            name=\"byemail\"\r\n                                            id=\"byemail\"\r\n                                            onChange={(e,i) => {\r\n                                                setbyemail(e.target.value);\r\n                                            }}\r\n                                            \r\n                                        />\r\n                                    </InputGroup>\r\n\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n\r\n                                <AvGroup className=\"mb-3\">\r\n                                    <Label for=\"password\">Search By Number</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <Phone className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"text\"\r\n                                            name=\"bynumber\"\r\n                                            id=\"bynumber\"\r\n                                            onChange={(e,i) => {\r\n                                                setbynumber(e.target.value);\r\n                                            }}\r\n                                            \r\n                                        />\r\n                                    </InputGroup>\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <AvGroup className=\"mb-3\">\r\n                                    <Label for=\"password\">Search By Skill</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <Slack className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"text\"\r\n                                            name=\"byskill\"\r\n                                            onChange={(e,i) => {\r\n                                                setbyskill(e.target.value);\r\n                                            }}\r\n                                            id=\"byskill\"\r\n                                            \r\n                                        />\r\n                                    </InputGroup>\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <FormGroup className=\"form-group mb-0 text-center\">\r\n                                    <Button className=\"btn-block btn btn-secondary\">\r\n                                        Search\r\n                                    </Button>\r\n                                </FormGroup>\r\n                            </AvForm>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                        <SearchResumeData serchresume={serchresume}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n\r\nexport default SearchResume;\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button,  Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport TargetSubmission from './TargetSubmission';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport OfferAndHire from './OfferAndHire';\r\nimport Graph from './Graph';\r\nimport AtsActivity from './AtsActivity';\r\nimport SearchResume from './SearchResume';\r\nconst List = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"page-title\">\r\n                <Col md={6}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Activity', path: '/activity', active: true },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"text-right\">\r\n                <Button color=\"primary\"><i className=\"uil uil-plus\"></i>ADD ITEM</Button>\r\n                </Col>\r\n            </Row>\r\n      <Nav tabs className=\"requirement-tab pt-3 pb-3 nav nav-tabs row bg-white\">\r\n        <NavItem className=\"col-sm-3\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Target / Submission\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-2\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Offer / Hire\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-2\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Graph\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-2\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '4' })}\r\n            onClick={() => { toggle('4'); }}\r\n          >\r\n            ATS Activity\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-3\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '5' })}\r\n            onClick={() => { toggle('5'); }}\r\n          >\r\n            Search Resume\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <TargetSubmission/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <OfferAndHire/>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n          <Graph/>\r\n        </TabPane >\r\n        <TabPane tabId=\"4\">\r\n          <AtsActivity/>\r\n        </TabPane >\r\n        <TabPane tabId=\"5\">\r\n          <SearchResume/>\r\n        </TabPane >\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default List;","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    Label,\r\n    FormGroup,\r\n    Button,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n} from 'reactstrap';\r\nimport { AvForm, AvGroup, AvFeedback } from 'availity-reactstrap-validation';\r\nimport { User } from 'react-feather';\r\nimport { getClientList } from '../../redux/client/actions';\r\nimport { getSalesUserList } from '../../redux/salesuser/actions';\r\nimport { createCws } from '../../redux/clientwisesales/actions';\r\nimport moment from 'moment';\r\nconst AssignClient =(props)=>{\r\n    const [ cid, setCid] = useState([]);\r\n    const [ uid, setUid]= useState([]);\r\n    let clientList = useSelector((state) => state.Client.clients || []);\r\n    let salesUserList = useSelector((state) => state.SalesUser.salesuser || []);\r\n    let loginDetails = useSelector((state)=> state.Auth.user || []);\r\n    //console.log(\"cws\", salesUserList)\r\n    var currentTime = moment().format('YYYY-MM-DD'); \r\n    const dispatch = useDispatch();\r\n     useEffect(() => {\r\n        dispatch(getClientList());\r\n        dispatch(getSalesUserList());\r\n         // eslint-disable-next-line \r\n     }, []);\r\n     const handleSubmit = e => {\r\n        var getUsername = loginDetails.Username;\r\n        e.preventDefault();\r\n        const reqBody ={\r\n            cid:cid ,\r\n            uid:uid,\r\n            username:getUsername,\r\n            createdatetime:currentTime\r\n        };\r\n        dispatch(createCws(reqBody));\r\n    }\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 offset-md-3\">\r\n                            <AvForm onSubmit={handleSubmit} className=\"authentication-form card p-5\">\r\n                                \r\n                            <h5 className=\"text-uppercase  text-center\">Assign Client To Sales</h5>\r\n                                <AvGroup className=\"\">\r\n                                    <Label for=\"fullname\">Select Sales User</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <User className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <select\r\n                                className=\"form-control\"\r\n                                name=\"uid\"\r\n                                required onChange={(e,i) => {\r\n                                    setUid(e.target.value);\r\n                                }}>\r\n                                    <option disabled selected>Select</option>\r\n                                {salesUserList.map((salesusers) => (\r\n                                    <option key={salesusers.EId} value={salesusers.EId}>\r\n                                        {salesusers.EFullname}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                                    </InputGroup>\r\n\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <AvGroup className=\"\">\r\n                                    <Label for=\"fullname\">Select Client Name</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <User className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <select\r\n                                className=\"form-control\"\r\n                                name=\"cid\"\r\n                                required onChange={(e,i) => {\r\n                                    setCid(e.target.value);\r\n                                }}>\r\n                                    <option disabled selected>Select</option>\r\n                                {clientList.map((client) => (\r\n                                    <option key={client.cid} value={client.cid}>\r\n                                        {client.cname}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                                    </InputGroup>\r\n\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <FormGroup className=\"form-group mb-0 text-center\">\r\n                                    <Button type=\"submit\" className=\"btn-block btn btn-secondary\">\r\n                                        Assign Client\r\n                                    </Button>\r\n                                </FormGroup>\r\n                            </AvForm>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\nexport default AssignClient;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport { getCwsList } from '../../redux/clientwisesales/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport axios from 'axios';\r\nimport config from '../../helpers/baseurl';\r\nimport swal from 'sweetalert';\r\nvar urlpattern = config.baseUrl;\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         //dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getJoinListModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                              \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewSalesClient = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.CWS.cws);\r\n    useEffect(() => {\r\n        dispatch(getCwsList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        \r\n        {\r\n            dataField:'name',\r\n            text:\"Sales Name\"\r\n        },\r\n        {\r\n            dataField: 'clientname',\r\n            text: 'Client Name',\r\n        },\r\n        {\r\n            dataField: 'Delete',\r\n            text: 'Delete',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary\"\r\n                    onClick={() => onDeleteRecord(row)}\r\n                    title=\"Delete\"\r\n                  >\r\n                   <FeatherIcon.Trash2 />\r\n                  </button>\r\n                );\r\n              },\r\n        }\r\n    ];\r\n     function onDeleteRecord(row , id) {    \r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Want to delete this record ?\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n          })\r\n          .then((willDelete) => {\r\n            if (willDelete) {\r\n                var config = {\r\n                    method: 'DELETE',\r\n                    url: `${urlpattern}SalesClientMaster/${row.id}`,   \r\n                  };\r\n                  axios(config)\r\n                  .then(function (response) {\r\n                    getCwsList();\r\n                  })\r\n                  .catch(function (error) {\r\n                    console.log(error);\r\n                  });\r\n              swal(\"Your Record has been deleted!\", {\r\n                icon: \"success\",\r\n              });\r\n            } else {\r\n              swal(\"Your Record is safe!\");\r\n            }\r\n          });\r\n        \r\n        \r\n     }\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewSalesClient;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button,  Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport AssignClient from './AssignClient';\r\nimport ViewSalesClient from './ViewSalesClient';\r\nconst ClientWiseSales = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"page-title\">\r\n                <Col md={6}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Hr', path: '/hr', active: true },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"text-right\">\r\n                <Button color=\"primary\"><i className=\"uil uil-plus\"></i>ADD ITEM</Button>\r\n                </Col>\r\n            </Row>\r\n      <Nav tabs className=\"requirement-tab hr-tab pt-3 pb-3 nav nav-tabs row bg-white\">\r\n        <NavItem className=\"col-sm-3\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n           Assign Client\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-3\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            View Client\r\n          </NavLink>\r\n        </NavItem>\r\n       \r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <AssignClient/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <ViewSalesClient/>\r\n        </TabPane>\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ClientWiseSales;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Route } from 'react-router-dom';\r\nimport * as FeatherIcon from 'react-feather';\r\n\r\nimport { isUserAuthenticated, getLoggedInUser } from '../helpers/authUtils';\r\nimport Hr from '../pages/hr/Hr';\r\nimport Attendance from '../pages/attendance/Attedance';\r\nimport Activity from '../pages/acyivity/Activity';\r\nimport ViewUser from '../pages/master/usermaster/ViewUser';\r\n\r\n//clientwisesales\r\nimport clientwisesales from '../pages/clientwisesales/ClientWiseSales';\r\n// auth\r\nconst Login = React.lazy(() => import('../pages/auth/Login'));\r\nconst Logout = React.lazy(() => import('../pages/auth/Logout'));\r\nconst Register = React.lazy(() => import('../pages/auth/Register'));\r\nconst ForgetPassword = React.lazy(() => import('../pages/auth/ForgetPassword'));\r\nconst Confirm = React.lazy(() => import('../pages/auth/Confirm'));\r\n// dashboard\r\n//const DashboardOld = React.lazy(() => import('../pages/dashboardOld'));\r\n//DashboardNew\r\nconst Dashboard =React.lazy(()=> import('../pages/dashboard/Dashboard'));\r\n//working page\r\n//const dashboardOld =React.lazy(()=>import('../pages/dashboardOld/index'));\r\n\r\n//Requirement\r\nconst Requirement =React.lazy(()=>import('../pages/requirement/Requirement'));\r\n//List\r\nconst List =React.lazy(()=>import('../pages/list/List'));\r\n//User\r\nconst Masters = React.lazy(()=> import('../pages/master/Masters'));\r\n//Report\r\nconst Report = React.lazy(()=> import('../pages/report/Report'));\r\n//Report\r\nconst Sales = React.lazy(()=> import('../pages/sales/Sales'));\r\n//Hrpolicy\r\nconst HrPolicy = React.lazy(()=> import('../pages/hrpolicy/HrPolicy'));\r\n//EmplHandbook\r\nconst EmplHandbook = React.lazy(()=> import('../pages/employehandbook/EmplHandbook'));\r\n//Appraisal\r\nconst Appraisal = React.lazy(()=> import('../pages/appraisal/Appraisal'));\r\n//Appraisal\r\nconst SalrySlip = React.lazy(()=> import('../pages/salaryslip/SalrySlip'));\r\n// handle auth and authorization\r\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props => {\r\n            if (!isUserAuthenticated()) {\r\n                // not logged in so redirect to login page with the return url\r\n                return <Redirect to={{ pathname: '/account/login', state: { from: props.location } }} />;\r\n            }\r\n\r\n            const loggedInUser = getLoggedInUser();\r\n           // console.log('loggedInUser=',loggedInUser);\r\n            //console.log('roles',roles);\r\n            //console.log(' roles.indexOf(loggedInUser.role) ', roles.indexOf(loggedInUser.Role) )\r\n            // check if route is restricted by role\r\n            if (roles && roles.indexOf(loggedInUser.Role) === -1) {\r\n               //  console.log('user role check', roles);\r\n                // role not authorised so redirect to home page\r\n                return <Redirect to={{ pathname: '/' }} />;\r\n            }\r\n\r\n            // authorised so return component\r\n            return <Component {...props} />;\r\n        }}\r\n    />\r\n);\r\n\r\n// root routes\r\nconst rootRoute = {\r\n    path: '/',\r\n    exact: true,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n    component: () => <Redirect to=\"/dashboard\" />,\r\n    route: PrivateRoute,\r\n};\r\n//dashboard\r\nconst dashboardRoutes = {\r\n    path: '/dashboard',\r\n    name: 'Dashboard',\r\n    icon: FeatherIcon.Home,\r\n    component: Dashboard,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n    route: PrivateRoute\r\n};\r\n//Requirement\r\nconst requirementRoutes= {\r\n    path: '/reqirement',\r\n    name: 'Requirement',\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n    component: Requirement,\r\n    route: PrivateRoute,\r\n};\r\n//List\r\nconst listRoutes= {\r\n    path: '/list',\r\n    name: 'List',\r\n    component: List,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n    route: PrivateRoute,\r\n};\r\n//Attendance\r\nconst attendanceRoutes= {\r\n    path: '/attendance',\r\n    name: 'Attendance',\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n    component: Attendance,\r\n    route: PrivateRoute,\r\n};\r\n//HrPolicy\r\nconst hrpolicyRoutes= {\r\n    path: '/hrpolicy',\r\n    name: 'HrPolicy',\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n    component: HrPolicy,\r\n    route: PrivateRoute,\r\n};\r\n//EmplHandbook\r\nconst emphandbookRoutes= {\r\n    path: '/employeehandbook',\r\n    name: 'HrPolicy',\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n    component: EmplHandbook,\r\n    route: PrivateRoute,\r\n};\r\n//activity\r\nconst activityRoutes = {\r\n    path: '/activity',\r\n    name: 'Activity',\r\n    icon: FeatherIcon.Activity,\r\n    component: Activity,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n    route: PrivateRoute\r\n};\r\n//Hr\r\nconst hrRoutes = {\r\n    path: '/hr',\r\n    name: 'HR',\r\n    icon: FeatherIcon.Aperture,\r\n    component: Hr,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n    route: PrivateRoute\r\n};\r\n// Master\r\n\r\nconst masterRoutes = {\r\n    path: '/master',\r\n    name: 'Master',\r\n    icon: FeatherIcon.FileText,\r\n    component: Masters,\r\n    route: PrivateRoute,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n};\r\n//View user\r\nconst viewUserRoutes= {\r\n    path: '/viewuser',\r\n    name: 'View User',\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n    component: ViewUser,\r\n    route: PrivateRoute,\r\n};\r\n//clientwisesales\r\nconst clientWiseSalesRoutes = {\r\n    path: '/clientwisesales',\r\n    name: 'Client Wise Sales',\r\n    icon: FeatherIcon.User,\r\n    component: clientwisesales,\r\n    route: PrivateRoute,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n};\r\n//Report\r\nconst reportRoutes = {\r\n    path: '/report',\r\n    name: 'Report',\r\n    icon: FeatherIcon.FileText,\r\n    component: Report,\r\n    route: PrivateRoute,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n};\r\n//Revenue\r\nconst revenueRoutes = {\r\n    path: '/sales',\r\n    name: 'Sales',\r\n    icon: FeatherIcon.Shield,\r\n    component: Sales,\r\n    route: PrivateRoute,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n};\r\n//Aspl\r\nconst asplRoutes = {\r\n    path: '/salaryslip',\r\n    name: 'Salary Slip',\r\n    icon: FeatherIcon.Download,\r\n    component: SalrySlip,\r\n    route: PrivateRoute,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n};\r\n//Aspl\r\nconst appraisalRoutes = {\r\n    path: '/appraisal',\r\n    name: 'Appraisal',\r\n    icon: FeatherIcon.Star,\r\n    component: Appraisal,\r\n    route: PrivateRoute,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n};\r\n//Rt\r\n// const rtRoutes = {\r\n//     path: '/rt',\r\n//     name: 'RT',\r\n//     icon: FeatherIcon.Download,\r\n//     component: dashboardOld,\r\n//     route: PrivateRoute,\r\n//     roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n// };\r\n\r\n// auth\r\nconst authRoutes = {\r\n    path: '/account',\r\n    name: 'Auth',\r\n    children: [\r\n        {\r\n            path: '/account/login',\r\n            name: 'Login',\r\n            component: Login,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/logout',\r\n            name: 'Logout',\r\n            component: Logout,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/register',\r\n            name: 'Register',\r\n            component: Register,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/confirm',\r\n            name: 'Confirm',\r\n            component: Confirm,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/forget-password',\r\n            name: 'Forget Password',\r\n            component: ForgetPassword,\r\n            route: Route,\r\n        },\r\n    ],\r\n};\r\n\r\n// flatten the list of all nested routes\r\nconst flattenRoutes = routes => {\r\n    let flatRoutes = [];\r\n\r\n    routes = routes || [];\r\n    routes.forEach(item => {\r\n        flatRoutes.push(item);\r\n\r\n        if (typeof item.children !== 'undefined') {\r\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\r\n        }\r\n    });\r\n    return flatRoutes;\r\n};\r\n\r\n// All routes\r\nconst allRoutes = [    \r\n    authRoutes,\r\n    rootRoute,\r\n    dashboardRoutes,\r\n    activityRoutes,\r\n    hrRoutes,\r\n    masterRoutes,\r\n    clientWiseSalesRoutes,\r\n    reportRoutes,\r\n    revenueRoutes,\r\n    asplRoutes,\r\n    //rtRoutes,\r\n    requirementRoutes,\r\n    attendanceRoutes,\r\n    listRoutes,\r\n    viewUserRoutes,\r\n    hrpolicyRoutes,\r\n    emphandbookRoutes,\r\n    appraisalRoutes\r\n];\r\n\r\nconst authProtectedRoutes = [dashboardRoutes, activityRoutes, hrRoutes, masterRoutes, clientWiseSalesRoutes,reportRoutes,revenueRoutes,asplRoutes, appraisalRoutes];\r\nconst allFlattenRoutes = flattenRoutes(allRoutes);\r\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\nimport Loadable from 'react-loadable';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { isUserAuthenticated } from '../helpers/authUtils';\r\nimport * as layoutConstants from '../constants/layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\n// Lazy loading and code splitting -\r\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\r\nconst loading = () => <div></div>;\r\n\r\n// All layouts/containers\r\nconst AuthLayout = Loadable({\r\n    loader: () => import('../layouts/Auth'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nconst VerticalLayout = Loadable({\r\n    loader: () => import('../layouts/Vertical'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nconst HorizontalLayout = Loadable({\r\n    loader: () => import('../layouts/Horizontal'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nclass Routes extends Component {\r\n\r\n    // returns the layout\r\n    getLayout = () => {\r\n        if (!isUserAuthenticated()) return AuthLayout;\r\n\r\n        let layoutCls = VerticalLayout;\r\n\r\n        switch (this.props.layout.layoutType) {\r\n            case layoutConstants.LAYOUT_HORIZONTAL:\r\n                layoutCls = HorizontalLayout;\r\n                break;\r\n            default:\r\n                layoutCls = VerticalLayout;\r\n                break;\r\n        }\r\n        return layoutCls;\r\n    }\r\n\r\n    render() {\r\n        const Layout = this.getLayout();\r\n        \r\n        // rendering the router with layout\r\n        return <BrowserRouter>\r\n            <Layout {...this.props}>\r\n                <Switch>\r\n                    {routes.map((route, index) => {\r\n                        return (\r\n                            !route.children ?\r\n                                <route.route\r\n                                    key={index}\r\n                                    path={route.path}\r\n                                    roles={route.roles}\r\n                                    exact={route.exact}\r\n                                    component={route.component}></route.route>\r\n                                : null\r\n                        );\r\n                    })}\r\n                </Switch>\r\n            </Layout>\r\n        </BrowserRouter>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.Layout,\r\n        user: state.Auth.user,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Routes);\r\n","export function configureFakeBackend() {\r\n    let users = [{ id: 1, username: 'test', password: 'test', firstName: 'Test', lastName: 'User', role: 'Admin' }];\r\n    let realFetch = window.fetch;\r\n    window.fetch = function(url, opts) {\r\n        return new Promise((resolve, reject) => {\r\n            // wrap in timeout to simulate server api call\r\n            setTimeout(() => {\r\n                // authenticate\r\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\r\n                    // get parameters from post request\r\n                    let params = JSON.parse(opts.body);\r\n\r\n                    // find if any user matches login credentials\r\n                    let filteredUsers = users.filter(user => {\r\n                        return user.username === params.username && user.password === params.password;\r\n                    });\r\n\r\n                    if (filteredUsers.length) {\r\n                        // if login details are valid return user details and fake jwt token\r\n                        let user = filteredUsers[0];\r\n                        let responseJson = {\r\n                            id: user.id,\r\n                            username: user.username,\r\n                            firstName: user.firstName,\r\n                            lastName: user.lastName,\r\n                            role: 'Admin',\r\n                            token:\r\n                                'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJTaHJleXUifQ.D-isMYoGH6Ah4i_dHxplgJNGtXTLEqZYvha_ULSJRFU',\r\n                        };\r\n                        resolve({ ok: true, json: () => responseJson });\r\n                        //console.log(\"fake backend responseJson\",responseJson);\r\n                    } else {\r\n                        // else return error\r\n                        reject('Username or password is incorrect');\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                // register\r\n                if (url.endsWith('/users/register') && opts.method === 'POST') {\r\n                    // get parameters from post request\r\n                    let params = JSON.parse(opts.body);\r\n\r\n                    // add new users\r\n                    let { firstName, lastName } = params.fullname.split(' ');\r\n                    let newUser = {\r\n                        id: users.length + 1,\r\n                        username: firstName,\r\n                        password: params.password,\r\n                        firstName: firstName,\r\n                        lastName: lastName,\r\n                        role: 'Admin',\r\n                    };\r\n                    users.push({ newUser });\r\n\r\n                    let responseJson = {\r\n                        id: newUser.id,\r\n                        username: newUser.username,\r\n                        firstName: newUser.firstName,\r\n                        lastName: newUser.lastName,\r\n                        role: newUser.role,\r\n                        token:\r\n                            'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJTaHJleXUifQ.D-isMYoGH6Ah4i_dHxplgJNGtXTLEqZYvha_ULSJRFU',\r\n                    };\r\n                    resolve({ ok: true, json: () => responseJson });\r\n                    return;\r\n                }\r\n\r\n                // forget password\r\n                if (url.endsWith('/users/password-reset') && opts.method === 'POST') {\r\n                    // get parameters from post request\r\n                    let params = JSON.parse(opts.body);\r\n\r\n                    // find if any user matches login credentials\r\n                    let filteredUsers = users.filter(user => {\r\n                        return user.username === params.username;\r\n                    });\r\n\r\n                    if (filteredUsers.length) {\r\n                        let responseJson = {\r\n                            message: \"We've sent you a link to reset password to your registered email.\",\r\n                        };\r\n                        resolve({ ok: true, json: () => responseJson });\r\n                    } else {\r\n                        // else return error\r\n                        reject('Sorry, we could not find any registered user with entered username');\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                // get users\r\n                if (url.endsWith('/users') && opts.method === 'GET') {\r\n                    // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\r\n                    if (\r\n                        opts.headers &&\r\n                        opts.headers.Authorization ===\r\n                            'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJTaHJleXUifQ.D-isMYoGH6Ah4i_dHxplgJNGtXTLEqZYvha_ULSJRFU'\r\n                    ) {\r\n                        resolve({ ok: true, json: () => users });\r\n                    } else {\r\n                        // return 401 not authorised if token is null or invalid\r\n                        reject('Unauthorised');\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                // pass through any requests not handled above\r\n                realFetch(url, opts).then(response => resolve(response));\r\n            }, 500);\r\n        });\r\n    };\r\n}\r\n","import React, { Component } from 'react';\r\nimport Routes from './routes/Routes';\r\n\r\n// setup fake backend\r\nimport { configureFakeBackend } from './helpers';\r\n\r\n// Themes\r\n\r\n// default\r\nimport './assets/scss/theme.scss';\r\n\r\n// dark\r\n// import './assets/scss/theme-dark.scss';\r\n\r\n// rtl\r\n// import './assets/scss/theme-rtl.scss';\r\n\r\n\r\n// configure fake backend\r\nconfigureFakeBackend();\r\n\r\n/**\r\n * Main app component\r\n */\r\nclass App extends Component {\r\n  render() {\r\n    return <Routes></Routes>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\nimport * as layoutConstants from '../../constants/layout';\r\n\r\nconst INIT_STATE = {\r\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\r\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\r\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\r\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\r\n    showRightSidebar: false,\r\n};\r\n\r\n\r\nconst Layout = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layoutType: action.payload,\r\n            };\r\n        case CHANGE_LAYOUT_WIDTH:\r\n            return {\r\n                ...state,\r\n                layoutWidth: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_THEME:\r\n            return {\r\n                ...state,\r\n                leftSideBarTheme: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_TYPE:\r\n            return {\r\n                ...state,\r\n                leftSideBarType: action.payload,\r\n            };\r\n        case TOGGLE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: !state.showRightSidebar,\r\n            };\r\n        case SHOW_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: true,\r\n            };\r\n        case HIDE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default Layout;\r\n","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\nimport { getLoggedInUser } from '../../helpers/authUtils';\r\n\r\nconst INIT_STATE = {\r\n    user: getLoggedInUser(),\r\n    loading: false,\r\n};\r\n\r\n\r\nconst Auth = (state = INIT_STATE, action) => {\r\n    //console.log(\"payload in reducer ===\",action.payload);\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loading: true };\r\n        case LOGIN_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, error: null };\r\n        case LOGIN_USER_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case REGISTER_USER:\r\n            return { ...state, loading: true };\r\n        case REGISTER_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, error: null };\r\n        case REGISTER_USER_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case LOGOUT_USER:\r\n            return { ...state, user: null };\r\n        case FORGET_PASSWORD:\r\n            return { ...state, loading: true };\r\n        case FORGET_PASSWORD_SUCCESS:\r\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\r\n        case FORGET_PASSWORD_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Auth;\r\n","// @flow\r\nimport {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\n\r\nconst AppMenu = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case INIT_MENU:\r\n            return action.payload;\r\n        case INIT_MENU_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\r\n            return { ...state };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AppMenu;\r\n","import {GET_USER_LIST_REQUEST,  SET_USER_LIST_REQUEST, ADD_USER_REQUEST, GET_ERROR} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    users: [],\r\n    user:{},\r\n    loading:false,\r\n    error:''\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_USER_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_USER_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                users: action.payload,\r\n                loading:false\r\n            };\r\n            case  ADD_USER_REQUEST:\r\n            return{\r\n                ...state,\r\n                user: action.payload,\r\n                loading:false\r\n            };\r\n            case GET_ERROR:\r\n                return{\r\n                    ...state,\r\n                    error: action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_REQUIREMENTS_LIST_REQUEST, SET_REQUIREMENTS_LIST_REQUEST,\r\n    GET_CRITICAL_REQUIREMENTS_LIST, SET_CRITICAL_REQUIREMENTS_LIST,\r\n    SAVE_REQUIREMENTS, SET_SAVE_REQUIREMENTS,\r\n     GET_REQUIREMENTS_MODAL,  HIDE_REQUIREMENTS_MODAL} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    requirements: [],\r\n    criticalreq:[],\r\n    requirement: {},\r\n    loading:false,\r\n    jid:'',\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_REQUIREMENTS_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            };\r\n        case  SET_REQUIREMENTS_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                requirements: action.payload,\r\n                loading:false\r\n            };\r\n            case GET_CRITICAL_REQUIREMENTS_LIST:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            };\r\n        case  SET_CRITICAL_REQUIREMENTS_LIST:\r\n            return{\r\n                ...state,\r\n                criticalreq: action.payload,\r\n                loading:false\r\n            };\r\n            case SAVE_REQUIREMENTS:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_SAVE_REQUIREMENTS:\r\n            return{\r\n                ...state,\r\n                requirement: action.payload,\r\n                loading:false\r\n            };\r\n            case GET_REQUIREMENTS_MODAL:\r\n                return{\r\n                    ...state,\r\n                    modal: true\r\n                };\r\n            case HIDE_REQUIREMENTS_MODAL:\r\n                return{\r\n                    ...state,\r\n                    requirement: null,\r\n                    modal: false\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n};","import {CREATE_CLIENT_SUCCESS, GET_CLIENT_LIST_REQUEST,  SET_CLIENT_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    clients: [],\r\n    createclients:{},\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_CLIENT_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_CLIENT_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                clients: action.payload,\r\n                loading:false\r\n            };\r\n            case  CREATE_CLIENT_SUCCESS:\r\n            return{\r\n                ...state,\r\n                createclients: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_RECRUITER_LIST_REQUEST,  SET_RECRUITER_LIST_REQUEST} from './constants'\r\nconst INIT_STATE = {\r\n    recruiters: [],\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_RECRUITER_LIST_REQUEST: \r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_RECRUITER_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                recruiters: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_ATTENDANCE_LIST_REQUEST,  SET_ATTENDANCE_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    attendance: [],\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_ATTENDANCE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_ATTENDANCE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                attendance: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {\r\n    GET_LIST_LIST_REQUEST,\r\n    SET_LIST_LIST_REQUEST,\r\n    GET_OFFER_LIST_REQUEST,\r\n    SET_OFFER_LIST_REQUEST,\r\n    GET_VTBJ_LIST_REQUEST,\r\n    SET_VTBJ_LIST_REQUEST,\r\n    GET_JOIN_LIST_REQUEST,\r\n    SET_JOIN_LIST_REQUEST,\r\n    GET_BD_LIST_REQUEST,\r\n    SET_BD_LIST_REQUEST\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    list: [],\r\n    offer: [],\r\n    viewtobejoin:[],\r\n    joinlist:[],\r\n    bdlist:[],\r\n    loading: false,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_LIST_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                //list: action.payload,\r\n                loading: true,\r\n            };\r\n        case SET_LIST_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                list: action.payload,\r\n                loading: false,\r\n            };\r\n        case GET_OFFER_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                //list: action.payload,\r\n                loading: true,\r\n            };\r\n        case SET_OFFER_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                offer: action.payload,\r\n                loading: false,\r\n            };\r\n            case GET_VTBJ_LIST_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    //list: action.payload,\r\n                    loading: true,\r\n                };\r\n            case SET_VTBJ_LIST_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    viewtobejoin: action.payload,\r\n                    loading: false,\r\n                };\r\n                case GET_JOIN_LIST_REQUEST:\r\n                    return {\r\n                        ...state,\r\n                        //list: action.payload,\r\n                        loading: true,\r\n                    };\r\n                case SET_JOIN_LIST_REQUEST:\r\n                    return {\r\n                        ...state,\r\n                        joinlist: action.payload,\r\n                        loading: false,\r\n                    };\r\n                    case GET_BD_LIST_REQUEST:\r\n                        return {\r\n                            ...state,\r\n                            //list: action.payload,\r\n                            loading: true,\r\n                        };\r\n                    case SET_BD_LIST_REQUEST:\r\n                        return {\r\n                            ...state,\r\n                            bdlist: action.payload,\r\n                            loading: false,\r\n                        };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    GET_DT_LIST_REQUEST,\r\n    SET_DT_LIST_REQUEST,\r\n    GET_TOIN_LIST_REQUEST,\r\n    SET_TOIN_LIST_REQUEST,\r\n    GET_MONOF_LIST_REQUEST,\r\n    SET_MONOF_LIST_REQUEST,\r\n    GET_MONTHJOIN_LIST_REQUEST,\r\n    SET_MONTHJOIN_LIST_REQUEST,\r\n    GET_ATSACTI_LIST_REQUEST,\r\n    SET_ATSACTI_LIST_REQUEST\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    dailytarget: [],\r\n    todaysinterview: [],\r\n    monthoffer:[],\r\n    monthtobejoin:[],\r\n    atsactivity:[],\r\n    loading: false,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_DT_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case SET_DT_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                dailytarget: action.payload,\r\n                loading: false,\r\n            };\r\n        case GET_TOIN_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case SET_TOIN_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                todaysinterview: action.payload,\r\n                loading: false,\r\n            };\r\n            case GET_MONOF_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case SET_MONOF_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                monthoffer: action.payload,\r\n                loading: false,\r\n            };\r\n            case GET_MONTHJOIN_LIST_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    loading: true,\r\n                };\r\n            case SET_MONTHJOIN_LIST_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    monthtobejoin: action.payload,\r\n                    loading: false,\r\n                };\r\n                case GET_ATSACTI_LIST_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    loading: true,\r\n                };\r\n            case SET_ATSACTI_LIST_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    atsactivity: action.payload,\r\n                    loading: false,\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {CREATE_TEAM_SUCCESS, GET_TEAM_LIST_REQUEST,  SET_TEAM_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    teams: [],\r\n    createteam:{},\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_TEAM_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_TEAM_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                teams: action.payload,\r\n                loading:false\r\n            };\r\n            case  CREATE_TEAM_SUCCESS:\r\n                return{\r\n                    ...state,\r\n                    createteam: action.payload,\r\n                    loading:false\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { CREATE_ROLE_SUCCESS, GET_ROLE_LIST_REQUEST,  SET_ROLE_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    role: [],\r\n    loading:false,\r\n    createrole:{},\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_ROLE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_ROLE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                role: action.payload,\r\n                loading:false\r\n            };\r\n            case  CREATE_ROLE_SUCCESS:\r\n            return{\r\n                ...state,\r\n                createrole: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_LEAVE_LIST_REQUEST,  SET_LEAVE_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    leave: [],\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_LEAVE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_LEAVE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                leave: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_HOLIDAY_LIST_REQUEST,  SET_HOLIDAY_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    holiday: [],\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_HOLIDAY_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_HOLIDAY_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                holiday: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {CREATE_CWS_SUCCESS, GET_CWS_LIST_REQUEST,  SET_CWS_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    cws: [],\r\n    createcws:{},\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_CWS_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_CWS_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                cws: action.payload,\r\n                loading:false\r\n            };\r\n            case  CREATE_CWS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                createcws: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_SALESUSER_LIST_REQUEST,  SET_SALESUSER_LIST_REQUEST} from './constants'\r\nconst INIT_STATE = {\r\n    salesuser: [],\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_SALESUSER_LIST_REQUEST: \r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_SALESUSER_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                salesuser: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_RPR_LIST_REQUEST,  SET_RPR_LIST_REQUEST, GET_DATEWISE_LIST_REQUEST, SET_DATEWISE_LIST_REQUEST,\r\nGET_MONTHCOUNT_LIST_REQUEST, SET_MONTHCOUNT_LIST_REQUEST, GET_TODAY_LIST_REQUEST, SET_TODAY_LIST_REQUEST,\r\nGET_REVENU_LIST_REQUEST, SET_REVENU_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    reqreport: [],\r\n    datewsiereport: [],\r\n    loading:false,\r\n    monthcountreport:[],\r\n    todayrepoert:[],\r\n    revenureport:[],\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_RPR_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_RPR_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                reqreport: action.payload,\r\n                loading:false\r\n            };\r\n            case GET_DATEWISE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_DATEWISE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                datewsiereport: action.payload,\r\n                loading:false\r\n            };\r\n            case GET_MONTHCOUNT_LIST_REQUEST:\r\n                return{\r\n                    ...state,\r\n                    //requirement: action.payload,\r\n                    loading:true\r\n                };\r\n            case  SET_MONTHCOUNT_LIST_REQUEST:\r\n                return{\r\n                    ...state,\r\n                    monthcountreport: action.payload,\r\n                    loading:false\r\n                };\r\n                case GET_TODAY_LIST_REQUEST:\r\n                return{\r\n                    ...state,\r\n                    //requirement: action.payload,\r\n                    loading:true\r\n                };\r\n            case  SET_TODAY_LIST_REQUEST:\r\n                return{\r\n                    ...state,\r\n                    todayrepoert: action.payload,\r\n                    loading:false\r\n                };\r\n                case GET_REVENU_LIST_REQUEST:\r\n                    return{\r\n                        ...state,\r\n                        //requirement: action.payload,\r\n                        loading:true\r\n                    };\r\n                case  SET_REVENU_LIST_REQUEST:\r\n                    return{\r\n                        ...state,\r\n                        revenureport: action.payload,\r\n                        loading:false\r\n                    };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_TEAMLEAD_LIST_REQUEST,  SET_TEAMLEAD_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    teamlead: [],\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_TEAMLEAD_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_TEAMLEAD_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                teamlead: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_REVENUE_LIST_REQUEST,  SET_REVENUE_LIST_REQUEST, ADD_REVENUE_REQUEST, GET_ERROR} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    revenues: [],\r\n    revenue:{},\r\n    loading:false,\r\n    error:''\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_REVENUE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_REVENUE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                revenues: action.payload,\r\n                loading:false\r\n            };\r\n            case  ADD_REVENUE_REQUEST:\r\n            return{\r\n                ...state,\r\n                revenue: action.payload,\r\n                loading:false\r\n            };\r\n            case GET_ERROR:\r\n                return{\r\n                    ...state,\r\n                    error: action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_MONTH_LIST_REQUEST,  SET_MONTH_LIST_REQUEST, ADD_MONTH_REQUEST, GET_ERROR} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    months: [],\r\n    month:{},\r\n    loading:false,\r\n    error:''\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_MONTH_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_MONTH_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                months: action.payload,\r\n                loading:false\r\n            };\r\n            case  ADD_MONTH_REQUEST:\r\n            return{\r\n                ...state,\r\n                month: action.payload,\r\n                loading:false\r\n            };\r\n            case GET_ERROR:\r\n                return{\r\n                    ...state,\r\n                    error: action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_CALL_LIST_REQUEST,  SET_CALL_LIST_REQUEST, ADD_CALL_REQUEST, GET_ERROR} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    calls: [],\r\n    call:{},\r\n    loading:false,\r\n    error:''\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_CALL_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_CALL_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                calls: action.payload,\r\n                loading:false\r\n            };\r\n            case  ADD_CALL_REQUEST:\r\n            return{\r\n                ...state,\r\n                call: action.payload,\r\n                loading:false\r\n            };\r\n            case GET_ERROR:\r\n                return{\r\n                    ...state,\r\n                    error: action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_REPORTING_MAN_LIST_REQUEST,  SET_REPORTING_MAN_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    reportingmanager: [],\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_REPORTING_MAN_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_REPORTING_MAN_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                reportingmanager: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","// @flow\r\n\r\nimport { combineReducers } from 'redux';\r\nimport Layout from './layout/reducers';\r\nimport Auth from './auth/reducers';\r\nimport AppMenu from './appMenu/reducers';\r\nimport Users from './user/reducers'\r\nimport Requirements from './requirement/reducers';\r\nimport Client from './client/reducers';\r\nimport Recruiter from './recruiter/reducers';\r\nimport Attendance from './attendance/reducers';\r\nimport List from './list/reducers';\r\nimport Activity from './activity/reducers';\r\nimport Teams from './teammaster/reducers';\r\nimport Role from './role/reducers';\r\nimport Leave from './leave/reducers';\r\nimport Holiday from './holiday/reducers';\r\nimport CWS from './clientwisesales/reducers';\r\nimport SalesUser from './salesuser/reducers';\r\nimport Report from'./allreport/reducers';\r\nimport TeamLead from'./teamLead/reducers';\r\nimport SalesRevenue from'./salesrevenue/reducers';\r\nimport SalesMonthReport from'./salesmonthreport/reducers';\r\nimport SalesCallReport from'./salescallreport/reducers';\r\nimport ReportingManager from './reportingmanager/reducers'\r\nexport default combineReducers({\r\n    Auth,\r\n    AppMenu,\r\n    Layout,\r\n    Users,\r\n    Requirements,\r\n    Client,\r\n    Recruiter,\r\n    Attendance,\r\n    List,\r\n    Activity,\r\n    Teams,\r\n    Role,\r\n    Leave,\r\n    Holiday,\r\n    CWS,\r\n    SalesUser,\r\n    Report,\r\n    TeamLead,\r\n    SalesRevenue,\r\n    SalesMonthReport,\r\n    SalesCallReport,\r\n    ReportingManager\r\n});\r\n","/**\r\n * Fetch data from given url\r\n * @param {*} url\r\n * @param {*} options\r\n */\r\nconst fetchJSON = (url, options = {}) => {\r\n    return fetch(url, options)\r\n        .then(response => {\r\n            if (!response.status === 200) {\r\n                throw response.json();\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(json => {\r\n            return json;\r\n        })\r\n        .catch(error => {\r\n            throw error;\r\n        });\r\n};\r\n\r\nexport { fetchJSON };\r\n","// @flow\r\nimport { Cookies } from 'react-cookie';\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { fetchJSON } from '../../helpers/api';\r\n\r\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER, FORGET_PASSWORD } from './constants';\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    //loginUserFailed,\r\n    registerUserSuccess,\r\n    registerUserFailed,\r\n    forgetPasswordSuccess,\r\n    forgetPasswordFailed,\r\n} from './actions';\r\nimport swal from 'sweetalert';\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = user => {\r\n    let cookies = new Cookies();\r\n    if (user) cookies.set('user', JSON.stringify(user), { path: '/' });\r\n    else cookies.remove('user', { path: '/' });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password, history } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n       // const response = yield call(fetchJSON, '/users/authenticate', options);\r\n       const response = yield call(fetchJSON, \"http://144.48.250.235:98/api/login\", options);\r\n        setSession(response.Data);\r\n        console.log(\"Login working\", response.Data.Username);\r\n        localStorage.setItem('Username', response.Data.Username);\r\n        yield put(loginUserSuccess(response.Data));\r\n    } catch (error) {\r\n       // console.log(error, \"login faild\");\r\n        //let message;\r\n        swal({\r\n            title: \"Username Password Invalid\",\r\n            text: \"Message!\",\r\n            type: \"error\"\r\n        }).then(function() {\r\n            window.location = \"/account/login\";\r\n        });\r\n\r\n        //swal(\"Username Password Invalid \", \"error\");\r\n        // logout();\r\n        // yield call(() => {\r\n        //     history.push('/account/login');\r\n        // });\r\n        setSession(null);\r\n    }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n    try {\r\n        setSession(null);\r\n        yield call(() => {\r\n            history.push('/account/login');\r\n        });\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ fullname, email, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/register', options);\r\n        yield put(registerUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(registerUserFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/password-reset', options);\r\n        yield put(forgetPasswordSuccess(response.message));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(forgetPasswordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchLoginUser() {\r\n    yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser() {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser() {\r\n    yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword() {\r\n    yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga() {\r\n    yield all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchRegisterUser), fork(watchForgetPassword)]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        if (width === layoutConstants.LAYOUT_WIDTH_BOXED) {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n            yield call(manageBodyClass, 'boxed-layout', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n            yield call(manageBodyClass, 'boxed-layout', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        if (theme === layoutConstants.LEFT_SIDEBAR_THEME_DARK) {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        switch (type) {\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n                break;\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'add');\r\n                break;\r\n            default:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'remove');\r\n                break;\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType() {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth() {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme() {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType() {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar() {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar() {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar() {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga() {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","\r\n/**\r\n * Flatten the nested list of menu items\r\n */\r\nlet uuid = 1;\r\n\r\nconst assignIdAndParent = (menuItems, parentId) => {\r\n    menuItems = menuItems || [];\r\n    menuItems.forEach(item => {\r\n        const id = item.id || uuid;\r\n        uuid += 1;\r\n        item.id = id;\r\n        item.parentId = item.parentId || parentId;\r\n        item.active = false;\r\n\r\n        if (typeof item.children !== 'undefined') {\r\n            assignIdAndParent(item.children, id);\r\n        }\r\n    });\r\n};\r\n\r\nexport default (menuItems) => {\r\n    assignIdAndParent(menuItems);\r\n    return menuItems;\r\n};\r\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        yield put(initMenuSuccess(menuItems));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit() {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange() {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga() {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","import axios from 'axios';\r\n//import { setSession } from './authUtils';\r\n\r\nconst api = axios.create( {\r\n    baseURL : 'http://144.48.250.235:98/api',  \r\n} );\r\n\r\napi.interceptors.response.use( \r\n    ( response ) => {\r\n        return response;\r\n    },\r\n    ( error ) => {\r\n        const originalRequest = error.config;\r\n        let guid = localStorage.getItem( 'crolGUID' );\r\n        delete api.defaults.headers.common['Authorization'];\r\n\r\n        if( guid && error.response.status === 401 && !originalRequest._retry ) {\r\n            originalRequest._retry = true;\r\n            return axios\r\n                .post( `http://144.48.250.235:98/api/auth`, { GUID: guid } )\r\n                .then( ( res ) => {\r\n                    if( res.status === 200 ){\r\n                       // setSession( res.data.token, '' );\r\n                        originalRequest.headers.Authorization = `Bearer ` + res.data.token;\r\n                        return axios( originalRequest );\r\n                    }\r\n                } );\r\n        }\r\n\r\n        return Promise.reject( error );\r\n    }\r\n );\r\n\r\nexport default api;","import api from './axios';\r\n\r\n\r\n export const getRequirementList = () => {\r\n    return api.get( '/Requirement_Master' );\r\n };\r\n export const getCriticleRequirementList = () => {\r\n   return api.get( '/CriticalRequirement' );\r\n};\r\n\r\n export const editRequirement = () => {\r\n    return api.get( `/Requirement_Master` );\r\n };\r\n//Client\r\n export const getClientList = () => {\r\n   return api.get( '/client_master' );\r\n};\r\n\r\nexport const setClient = ( createclients ) => {\r\n   return api.post( '/client_master', createclients );\r\n};\r\n// recruter master\r\nexport const getRecruiterList = () => {\r\n   return api.get( '/Recruiter_Mst' );\r\n};\r\n\r\nexport const setRecruiter = ( recruiters ) => {\r\n   return api.post( '/Recruiter_Mst', recruiters );\r\n};\r\n\r\n\r\n/** Puestos endpoints */\r\n\r\nexport const getRqsList = () => {\r\n   return api.get( '/Recruiter_Mst' );\r\n};\r\n\r\nexport const setRqs = ( puesto ) => {\r\n   return api.post( '/Recruiter_Mst', puesto );\r\n};\r\nexport const getAttendance = () => {\r\n   return api.get( '/Attendance_Master' );\r\n};\r\nexport const setAttendance = ( attendance ) => {\r\n   return api.post( 'Attendance_Master', attendance );\r\n};\r\n\r\nexport const getListList = () => {\r\n   return api.get( '/OfferList' );\r\n};\r\n\r\n//offer List\r\nexport const getOfferList = () => {\r\n   return api.get( '/OfferList' );\r\n};\r\n//ViewToBeJoin\r\nexport const getViewToBeJoinList = () => {\r\n   return api.get( '/TobeJoinList' );\r\n};\r\n//JoinList\r\nexport const getJoinList = () => {\r\n   return api.get( '/GetStartList' );\r\n};\r\n//BDList\r\nexport const getBDList = () => {\r\n   return api.get( '/BDList' );\r\n};\r\n\r\n//ACtivity Pages Daily Target \r\n//Daily Target List\r\nexport const getDailyTargetList = () => {\r\n   return api.get( '/DailyTarget' );\r\n};\r\n//TodaysInterview\r\nexport const getTodaysInterviewtList = () => {\r\n   return api.get( '/TodaysInterview' );\r\n};\r\n//Month Offer\r\nexport const getMonthOfferList = () => {\r\n   return api.get( '/MonthOffer' );\r\n};\r\n//Month to Be Join\r\nexport const getMonthToBeJoinList = () => {\r\n   return api.get( '/MonthToBeJoin' );\r\n};\r\n//ATS Activity\r\nexport const getAtsActivityList = () => {\r\n   return api.get( '/ActivityMaster' );\r\n};\r\n//Team master\r\nexport const getTeamList = () => {\r\n   return api.get( '/TeamMaster' );\r\n};\r\n\r\n//Reporting manager list getReportingMan\r\nexport const getReportingMan = () => {\r\n   return api.get( '/ReportingManager' );\r\n};\r\nexport const setTeam = (createteam) => {\r\n   return api.post( '/TeamMaster',createteam );\r\n};\r\n//User master \r\nexport const getUserList = () => {\r\n   return api.get( '/User_Master' );\r\n};\r\nexport const setUser = (user) => {\r\n   return api.post( '/User_Master',user);\r\n};\r\n// Team Lead Master \r\nexport const getTeamLead = () => {\r\n   return api.get( '/TeamLead_Master' );\r\n};\r\n//Role master \r\nexport const getRoleList = () => {\r\n   return api.get( '/UserRole_Master' );\r\n};\r\n//Role master \r\nexport const createRole = (createrole) => {\r\n   return api.post( '/UserRole_Master',createrole );\r\n};\r\n//leave\r\nexport const getLeave = () => {\r\n   return api.get( '/LeaveMaster?username=ajay.zala@archesoftronix.com', );\r\n};\r\n//holiday\r\nexport const getHoliday = () => {\r\n   return api.get( '/HolidayMaster', );\r\n};\r\n//client wise sales\r\nexport const getCwsList = () => {\r\n   return api.get( '/SalesClientMaster' );\r\n};\r\nexport const setCws = ( createcws ) => {\r\n   return api.post( '/SalesClientMaster', createcws );\r\n};\r\n//sales user list\r\nexport const getSalesUserList=()=>{\r\n   return api.get('/SalesUser');\r\n}\r\n//requirement progress report \r\nexport const getReqReport=()=>{\r\n   return api.get('/RequirementProgressReport');\r\n}\r\n//datewsie report \r\nexport const getDatewiseReport=()=>{\r\n   return api.get('/DateWiseCountReportMaster?username=ajay.zala@archesoftronix.com&ssd=2021-01-12&eed=2021-02-12');\r\n}\r\n// month count report \r\n//datewsie report \r\nexport const getMonthCountReport=()=>{\r\n   return api.get('/MonthReport?username=ajay.zala@archesoftronix.com');\r\n}\r\n//today report \r\nexport const getTodayReport=()=>{\r\n   return api.get('/TodayReport?username=ajay.zala@archesoftronix.com');\r\n}\r\n//today report \r\nexport const getRevenuReport=()=>{\r\n   return api.get('/RevenueReportDateWise?username=ajay.zala@archesoftronix.com&ssd=2020-01-12&eed=2021-02-12');\r\n}\r\n// Sales Revenue \r\nexport const getRevenueList = () => {\r\n   return api.get( '/SalesMonthlyRevenueReport' );\r\n};\r\nexport const setRevenue = (revenue) => {\r\n   return api.post( '/SalesMonthlyRevenueReport',revenue);\r\n};\r\n// Sales Month Report \r\nexport const getMonthList = () => {\r\n   return api.get( '/SalesMonthlyReport' );\r\n};\r\nexport const setMonth = (month) => {\r\n   return api.post( '/SalesMonthlyReport',month);\r\n};\r\n// Sales Call Report \r\nexport const getCallList = () => {\r\n   return api.get( '/SalesClientCallRecordMaster?username=jigar.jadav@archesoftronix.com' );\r\n};\r\nexport const setCall = (call) => {\r\n   return api.post( '/HolidayMaster',call);\r\n};\r\n/** Departamentos endpoints */\r\nexport const getDepartamentosList = () =>{\r\n    return api.get( '/Requirement_Master' );\r\n };\r\n \r\n export const setDepartamento = ( departamento ) => {\r\n    return api.post( '/Requirement_Master', departamento );\r\n };\r\n \r\n/** Auth */\r\nexport const loginUser = ( username,password) => {\r\n   return api.post( '/login',{username,password});\r\n}; \r\n\r\nexport const getUserImage = ( userId ) => {\r\n   return api.post( '/auth/userimage', { 'id': userId } );\r\n}\r\n\r\n/** Validate windows focus */\r\nexport const getWindowFocusRequest = ( token ) => {\r\n   return api.get( `/auth/verifysession/${token}` );\r\n};","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport swal from 'sweetalert';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\n//import swal from 'sweetalert';\r\nimport {\r\n    ADD_USER,\r\n    GET_USER_LIST_REQUEST,\r\n    //SET_USER_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getUserList () {\r\n    try {\r\n        const response = yield  call( api.getUserList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.getUser( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.getUser( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* setUser( action ){\r\n    try {\r\n        const result = yield call( api.setUser, action.payload );\r\n        yield put( actions.setUserRquest( result.data ) );\r\n        yield call( getUserList );\r\n        console.log(result.data);\r\n        swal(\"Record Created Successful\", \"success\");\r\n    } catch (error) {\r\n        console.log(error);\r\n        swal(error, \"error\");\r\n    }\r\n}\r\nfunction* watchGetUserRequest(){\r\n    yield takeEvery( GET_USER_LIST_REQUEST, getUserList );\r\n}\r\nfunction* watchSetUser(){\r\n    yield takeEvery( ADD_USER, setUser );\r\n}\r\nfunction* userSagas() {\r\n    yield all([\r\n        fork( watchGetUserRequest ),\r\n        fork( watchSetUser ),\r\n    ]);\r\n}\r\n\r\nexport default userSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_REQUIREMENTS_LIST_REQUEST,\r\n    SET_SAVE_REQUIREMENTS,\r\n    GET_CRITICAL_REQUIREMENTS_LIST\r\n    //SET_CLIENT_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getRequirementList () {\r\n    try {\r\n        const response = yield  call( api.getRequirementList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setRequirement( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setRequirement( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* setSaveRequirement( action ){\r\n        let result = yield call( api.getRequirementList, action.payload, action.jid );\r\n        yield put( action.setSaveRequirement( result.data ) );\r\n    \r\n}\r\nfunction* watchGetRequirementRequest(){\r\n    yield takeEvery( GET_REQUIREMENTS_LIST_REQUEST, getRequirementList );\r\n}\r\nfunction* watchSetSaveRequirement(){\r\n    yield takeEvery( SET_SAVE_REQUIREMENTS, setSaveRequirement );\r\n}\r\nfunction* getCriticalRequirementList () {\r\n    try {\r\n        const response = yield  call( api.getCriticleRequirementList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setCriticalRequirement( response.data.Data ) );\r\n        //console.log(response.data, \"Critical saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setCriticalRequirement( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchCriticalRequirement(){\r\n    yield takeEvery( GET_CRITICAL_REQUIREMENTS_LIST, getCriticalRequirementList );\r\n}\r\nfunction* requirementSagas() {\r\n    yield all([\r\n        fork( watchGetRequirementRequest ),\r\n        fork(watchSetSaveRequirement ),\r\n        fork(watchCriticalRequirement)\r\n    ]);\r\n}\r\n\r\nexport default requirementSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport swal from 'sweetalert';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    CREATE_CLIENT,\r\n    GET_CLIENT_LIST_REQUEST,\r\n    //SET_CLIENT_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getClientList () {\r\n    try {\r\n        const response = yield  call( api.getClientList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setClientList( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setClientList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* setClient( action ){\r\n    try {\r\n        const result = yield call( api.setClient, action.payload );\r\n        yield put( actions.createClientSuccess( result.data ) );\r\n        yield call( getClientList );\r\n        swal(\"Record Created Successful\", \"success\"); \r\n        console.log(result);\r\n    } catch (error) {\r\n        console.log(error);\r\n        swal(error, \"error\");\r\n    }\r\n}\r\nfunction* watchGetClientRequest(){\r\n    yield takeEvery( GET_CLIENT_LIST_REQUEST, getClientList );\r\n}\r\nfunction* watchSetClientRequest(){\r\n    yield takeEvery( CREATE_CLIENT, setClient );\r\n}\r\n\r\n\r\nfunction* clientSagas() {\r\n    yield all([\r\n        fork( watchGetClientRequest ),\r\n        fork(watchSetClientRequest),\r\n    ]);\r\n}\r\n\r\nexport default clientSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_RECRUITER_LIST_REQUEST,\r\n   // SET_RECRUITER_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getRecruiterList () {\r\n    try {\r\n        const response = yield  call( api.getRecruiterList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setRecruiter( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setRecruiter( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n// function* setRecruiter( action ){\r\n//     try {\r\n//         const result = yield call( api.setRecruiter, action.payload );\r\n//         yield put( actions.setRecruiter( result.data ) );\r\n//         yield call( getRecruiterList );\r\n//     } catch (error) {\r\n//         console.log(error);\r\n       \r\n//     }\r\n// }\r\nfunction* watchGetRecruiterRequest(){\r\n    yield takeEvery( GET_RECRUITER_LIST_REQUEST, getRecruiterList );\r\n}\r\n\r\nfunction* recruiterSagas() {\r\n    yield all([\r\n        fork( watchGetRecruiterRequest ),\r\n    ]);\r\n}\r\n\r\nexport default recruiterSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_ATTENDANCE_LIST_REQUEST,\r\n    //SET_CLIENT_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getAttendanceList () {\r\n    try {\r\n        const response = yield  call( api.getAttendance );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setAttendance( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setAttendance( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n// function* setAttendance( action ){\r\n//     try {\r\n//         const result = yield call( api.setAttendance, action.payload );\r\n//         yield put( actions.setAttendance( result.data ) );\r\n//         yield call( getAttendanceList );\r\n//     } catch (error) {\r\n//         console.log(error);\r\n       \r\n//     }\r\n// }\r\nfunction* watchGetAttendanceRequest(){\r\n    yield takeEvery( GET_ATTENDANCE_LIST_REQUEST, getAttendanceList );\r\n}\r\n\r\nfunction* attendanceSagas() {\r\n    yield all([\r\n        fork( watchGetAttendanceRequest ),\r\n    ]);\r\n}\r\n\r\nexport default attendanceSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_LIST_LIST_REQUEST,\r\n    GET_OFFER_LIST_REQUEST,\r\n    GET_VTBJ_LIST_REQUEST,\r\n    GET_JOIN_LIST_REQUEST,\r\n    GET_BD_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getListList () {\r\n    try {\r\n        const response = yield  call( api.getListList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetListRequest(){\r\n    yield takeEvery( GET_LIST_LIST_REQUEST, getListList );\r\n}\r\n//offer\r\nfunction* getOfferList () {\r\n    try {\r\n        const response = yield  call( api.getOfferList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setOfferList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setOfferList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetOfferRequest(){\r\n    yield takeEvery( GET_OFFER_LIST_REQUEST, getOfferList );\r\n}\r\n//view to be join\r\nfunction* getViewToBeJoinList () {\r\n    try {\r\n        const response = yield  call( api.getViewToBeJoinList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setViewToBeJoinList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setViewToBeJoinList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetViewToBeJoinRequest(){\r\n    yield takeEvery( GET_VTBJ_LIST_REQUEST, getViewToBeJoinList );\r\n}\r\n\r\n//Join List\r\nfunction* getJoinList () {\r\n    try {\r\n        const response = yield  call( api.getJoinList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setJoinList( response.data.Data ) );\r\n        //console.log(response.data)\r\n       }\r\n       else{\r\n        yield put( actions.setJoinList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetJoinRequest(){\r\n    yield takeEvery( GET_JOIN_LIST_REQUEST, getJoinList );\r\n}\r\n\r\n//BD List\r\nfunction* getBDList () {\r\n    try {\r\n        const response = yield  call( api.getBDList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setBDList( response.data.Data ) );\r\n        //console.log(response.data)\r\n       }\r\n       else{\r\n        yield put( actions.setBDList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetBDRequest(){\r\n    yield takeEvery( GET_BD_LIST_REQUEST, getBDList );\r\n}\r\n\r\nfunction* listSagas() {\r\n    yield all([\r\n        fork( watchGetListRequest ),\r\n        fork( watchGetOfferRequest ),\r\n        fork( watchGetViewToBeJoinRequest ),\r\n        fork( watchGetJoinRequest ),\r\n        fork( watchGetBDRequest ),\r\n    ]);\r\n}\r\n\r\nexport default listSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_DT_LIST_REQUEST,\r\n    GET_TOIN_LIST_REQUEST,\r\n    GET_MONOF_LIST_REQUEST,\r\n    GET_MONTHJOIN_LIST_REQUEST,\r\n    GET_ATSACTI_LIST_REQUEST\r\n} from './constants'\r\n\r\n//Daily Target Submission\r\nfunction* getDailyTargetList () {\r\n    try {\r\n        const response = yield  call( api.getDailyTargetList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setDailyTargetList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setDailyTargetList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetDailyTargetRequest(){\r\n    yield takeEvery( GET_DT_LIST_REQUEST, getDailyTargetList );\r\n}\r\n// Todays Interview\r\nfunction* getTodaysInterviewList () {\r\n    try {\r\n        const response = yield  call( api.getTodaysInterviewtList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setTodaysInterviewList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setTodaysInterviewList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetTodaysInterviewRequest(){\r\n    yield takeEvery( GET_TOIN_LIST_REQUEST, getTodaysInterviewList );\r\n}\r\n// Month Offer\r\nfunction* getMonthOfferList () {\r\n    try {\r\n        const response = yield  call( api.getMonthOfferList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setMonthOfferList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setMonthOfferList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetMonthOfferRequest(){\r\n    yield takeEvery( GET_MONOF_LIST_REQUEST, getMonthOfferList );\r\n}\r\n\r\n// Month to be join\r\nfunction* getMonthToBeJoinList () {\r\n    try {\r\n        const response = yield  call( api.getMonthToBeJoinList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setMonthToBeJoinList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setMonthToBeJoinList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetMonthToBeJoinRequest(){\r\n    yield takeEvery( GET_MONTHJOIN_LIST_REQUEST, getMonthToBeJoinList );\r\n}\r\n// Ats activity\r\nfunction* getAtsActivityList () {\r\n    try {\r\n        const response = yield  call( api.getAtsActivityList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setAtsActivityList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setAtsActivityList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetAtsActivityRequest(){\r\n    yield takeEvery( GET_ATSACTI_LIST_REQUEST, getAtsActivityList );\r\n}\r\nfunction* activitySagas() {\r\n    yield all([\r\n        fork( watchGetDailyTargetRequest ),\r\n        fork( watchGetTodaysInterviewRequest ),\r\n        fork( watchGetMonthOfferRequest ),\r\n        fork(watchGetMonthToBeJoinRequest),\r\n        fork(watchGetAtsActivityRequest),\r\n    ]);\r\n}\r\n\r\nexport default activitySagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport swal from 'sweetalert';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    CREATE_TEAM,\r\n    GET_TEAM_LIST_REQUEST,\r\n    //SET_TEAM_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getTeamList () {\r\n    try {\r\n        const response = yield  call( api.getTeamList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setTeam( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setTeam( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* setTeam( action ){\r\n    try {\r\n        const result = yield call( api.setTeam, action.payload );\r\n        yield put( actions.createTeamSuccess( result.data ) );\r\n        yield call( getTeamList );\r\n        swal(\"Record Created Successful\", \"success\"); \r\n        console.log(result);\r\n    } catch (error) {\r\n        console.log(error);\r\n        swal(error, \"error\");\r\n    }\r\n}\r\nfunction* watchGetTeamRequest(){\r\n    yield takeEvery( GET_TEAM_LIST_REQUEST, getTeamList );\r\n}\r\nfunction* watchSetTeamRequest(){\r\n    yield takeEvery( CREATE_TEAM, setTeam );\r\n}\r\nfunction* teamSagas() {\r\n    yield all([\r\n        fork( watchGetTeamRequest ),\r\n        fork( watchSetTeamRequest ),\r\n    ]);\r\n}\r\n\r\nexport default teamSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport swal from 'sweetalert';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    CREATE_ROLE,\r\n    //CREATE_ROLE_SUCCESS,\r\n    GET_ROLE_LIST_REQUEST,\r\n    //SET_ROLE_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getRoleList () {\r\n    try {\r\n        const response = yield  call( api.getRoleList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.getRolelistRequest( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.getRolelistRequest( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* createRole( action ){\r\n    try {\r\n        const result = yield call( api.createRole, action.payload );\r\n        yield put( actions.createRoleSuccess( result.data ) );\r\n        yield call( getRoleList );\r\n        swal(\"Record Created Successful\", \"success\"); \r\n        console.log(result.data);\r\n    } catch (error) {\r\n        console.log(error);\r\n        swal(error, \"error\");\r\n       \r\n    }\r\n}\r\nfunction* watchGetRoleRequest(){\r\n    yield takeEvery( GET_ROLE_LIST_REQUEST, getRoleList );\r\n}\r\nfunction* watchSetRoleRequest(){\r\n    yield takeEvery( CREATE_ROLE, createRole );\r\n}\r\n\r\nfunction* roleSagas() {\r\n    yield all([\r\n        fork( watchGetRoleRequest ),\r\n        fork( watchSetRoleRequest ),\r\n    ]);\r\n}\r\n\r\nexport default roleSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_LEAVE_LIST_REQUEST,\r\n    //SET_CLIENT_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getLeaveList () {\r\n    try {\r\n        const response = yield  call( api.getLeave );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setLeave( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setLeave( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n// function* setLeave( action ){\r\n//     try {\r\n//         const result = yield call( api.setLeave, action.payload );\r\n//         yield put( actions.setLeave( result.data ) );\r\n//         yield call( getLeaveList );\r\n//     } catch (error) {\r\n//         console.log(error);\r\n       \r\n//     }\r\n// }\r\nfunction* watchGetLeaveRequest(){\r\n    yield takeEvery( GET_LEAVE_LIST_REQUEST, getLeaveList );\r\n}\r\n\r\nfunction* leaveSagas() {\r\n    yield all([\r\n        fork( watchGetLeaveRequest ),\r\n    ]);\r\n}\r\n\r\nexport default leaveSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_HOLIDAY_LIST_REQUEST,\r\n    //SET_CLIENT_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getHolidayList () {\r\n    try {\r\n        const response = yield  call( api.getHoliday );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setHoliday( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setHoliday( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n// function* setHoliday( action ){\r\n//     try {\r\n//         const result = yield call( api.setHoliday, action.payload );\r\n//         yield put( actions.setHoliday( result.data ) );\r\n//         yield call( getHolidayList );\r\n//     } catch (error) {\r\n//         console.log(error);\r\n       \r\n//     }\r\n// }\r\nfunction* watchGetHolidayRequest(){\r\n    yield takeEvery( GET_HOLIDAY_LIST_REQUEST, getHolidayList );\r\n}\r\n\r\nfunction* holidaySagas() {\r\n    yield all([\r\n        fork( watchGetHolidayRequest ),\r\n    ]);\r\n}\r\n\r\nexport default holidaySagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport swal from 'sweetalert';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    CREATE_CWS,\r\n    GET_CWS_LIST_REQUEST,\r\n    //SET_CWS_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getCwsList () {\r\n    try {\r\n        const response = yield  call( api.getCwsList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setCwsList( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setCwsList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* setCws( action ){\r\n    try {\r\n        const result = yield call( api.setCws, action.payload );\r\n        yield put( actions.createCwsSuccess( result.data ) );\r\n        yield call( getCwsList );\r\n        console.log(result);\r\n        swal(\"Record Created Successful\", \"success\"); \r\n    } catch (error) {\r\n        console.log(error);\r\n        swal(error, \"error\");\r\n    }\r\n}\r\nfunction* watchGetCwsRequest(){\r\n    yield takeEvery( GET_CWS_LIST_REQUEST, getCwsList );\r\n}\r\nfunction* watchSetCwsRequest(){\r\n    yield takeEvery( CREATE_CWS, setCws );\r\n}\r\n\r\n\r\nfunction* cwsSagas() {\r\n    yield all([\r\n        fork( watchGetCwsRequest ),\r\n        fork(watchSetCwsRequest),\r\n    ]);\r\n}\r\n\r\nexport default cwsSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_SALESUSER_LIST_REQUEST,\r\n   // SET_SALESUSER_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getSalesUserList () {\r\n    try {\r\n        const response = yield  call( api.getSalesUserList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setSalesUser( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setSalesUser( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n// function* setSalesUser( action ){\r\n//     try {\r\n//         const result = yield call( api.setSalesUser, action.payload );\r\n//         yield put( actions.setSalesUser( result.data ) );\r\n//         yield call( getSalesUserList );\r\n//     } catch (error) {\r\n//         console.log(error);\r\n       \r\n//     }\r\n// }\r\nfunction* watchGetSalesUserRequest(){\r\n    yield takeEvery( GET_SALESUSER_LIST_REQUEST, getSalesUserList );\r\n}\r\n\r\nfunction* salesUserSagas() {\r\n    yield all([\r\n        fork( watchGetSalesUserRequest ),\r\n    ]);\r\n}\r\n\r\nexport default salesUserSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_RPR_LIST_REQUEST,\r\n    GET_DATEWISE_LIST_REQUEST,\r\n    GET_MONTHCOUNT_LIST_REQUEST,\r\n    GET_TODAY_LIST_REQUEST,\r\n    GET_REVENU_LIST_REQUEST\r\n    //SET_CLIENT_LIST_REQUEST\r\n} from './constants'\r\n\r\n// requirement report\r\nfunction* getReqReportList () {\r\n    try {\r\n        const response = yield  call( api.getReqReport );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setReqReport( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setReqReport( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetReqReportRequest(){\r\n    yield takeEvery( GET_RPR_LIST_REQUEST, getReqReportList );\r\n}\r\n// datewise report\r\nfunction* getDatewiseReportList () {\r\n    try {\r\n        const response = yield  call( api.getDatewiseReport );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setDatewiseReport( response.data.Data ) );\r\n        //console.log(response.data, \"Datewiseuire saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setDatewiseReport( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetDatewiseReportRequest(){\r\n    yield takeEvery( GET_DATEWISE_LIST_REQUEST, getDatewiseReportList );\r\n}\r\n// Month count report\r\nfunction* getMonthCountReportList () {\r\n    try {\r\n        const response = yield  call( api.getMonthCountReport );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setMonthCountReport( response.data.Data ) );\r\n        //console.log(response.data, \"MonthCountuire saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setMonthCountReport( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetMonthCountReportRequest(){\r\n    yield takeEvery( GET_MONTHCOUNT_LIST_REQUEST, getMonthCountReportList );\r\n}\r\n// Today report\r\nfunction* getTodayReportList () {\r\n    try {\r\n        const response = yield  call( api.getTodayReport );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setTodayReport( response.data.Data ) );\r\n        //console.log(response.data, \"Todayuire saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setTodayReport( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetTodayReportRequest(){\r\n    yield takeEvery( GET_TODAY_LIST_REQUEST, getTodayReportList );\r\n}\r\n// Revenu report\r\nfunction* getRevenuReportList () {\r\n    try {\r\n        const response = yield  call( api.getRevenuReport );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setRevenuReport( response.data.Data ) );\r\n        //console.log(response.data, \"Revenuuire saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setRevenuReport( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetRevenuReportRequest(){\r\n    yield takeEvery( GET_REVENU_LIST_REQUEST, getRevenuReportList );\r\n}\r\nfunction* reqReportSagas() {\r\n    yield all([\r\n        fork( watchGetReqReportRequest ),\r\n        fork( watchGetDatewiseReportRequest ),\r\n        fork(watchGetMonthCountReportRequest),\r\n        fork(watchGetTodayReportRequest),\r\n        fork(watchGetRevenuReportRequest),\r\n    ]);\r\n}\r\n\r\nexport default reqReportSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_TEAMLEAD_LIST_REQUEST,\r\n    //SET_CLIENT_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getTeamLeadList () {\r\n    try {\r\n        const response = yield  call( api.getTeamLead );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setTeamLead( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setTeamLead( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n// function* setTeamLead( action ){\r\n//     try {\r\n//         const result = yield call( api.setTeamLead, action.payload );\r\n//         yield put( actions.setTeamLead( result.data ) );\r\n//         yield call( getTeamLeadList );\r\n//     } catch (error) {\r\n//         console.log(error);\r\n       \r\n//     }\r\n// }\r\nfunction* watchGetTeamLeadRequest(){\r\n    yield takeEvery( GET_TEAMLEAD_LIST_REQUEST, getTeamLeadList );\r\n}\r\n\r\nfunction* teamLeadSagas() {\r\n    yield all([\r\n        fork( watchGetTeamLeadRequest ),\r\n    ]);\r\n}\r\n\r\nexport default teamLeadSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport swal from 'sweetalert';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\n//import swal from 'sweetalert';\r\nimport {\r\n    ADD_REVENUE,\r\n    GET_REVENUE_LIST_REQUEST,\r\n    //SET_Revenue_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getRevenueList () {\r\n    try {\r\n        const response = yield  call( api.getRevenueList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.getRevenue( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.getRevenue( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* setRevenue( action ){\r\n    try {\r\n        const result = yield call( api.setRevenue, action.payload );\r\n        yield put( actions.setRevenueRquest( result.data ) );\r\n        yield call( getRevenueList );\r\n        console.log(result.data);\r\n        swal(\"Record Created Successful\", \"success\"); \r\n    } catch (error) {\r\n        console.log(error);\r\n        swal(error, \"error\");\r\n    }\r\n}\r\nfunction* watchGetRevenueRequest(){\r\n    yield takeEvery( GET_REVENUE_LIST_REQUEST, getRevenueList );\r\n}\r\nfunction* watchSetRevenue(){\r\n    yield takeEvery( ADD_REVENUE, setRevenue );\r\n}\r\nfunction* revenueSagas() {\r\n    yield all([\r\n        fork( watchGetRevenueRequest ),\r\n        fork( watchSetRevenue ),\r\n    ]);\r\n}\r\n\r\nexport default revenueSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport swal from 'sweetalert';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\n//import swal from 'sweetalert';\r\nimport {\r\n    ADD_MONTH,\r\n    GET_MONTH_LIST_REQUEST,\r\n    //SET_MONTH_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getMonthList () {\r\n    try {\r\n        const response = yield  call( api.getMonthList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.getMonth( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.getMonth( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* setMonth( action ){\r\n    try {\r\n        const result = yield call( api.setMonth, action.payload );\r\n        yield put( actions.setMonthRquest( result.data ) );\r\n        yield call( getMonthList );\r\n        console.log(result.data);\r\n        swal(\"Record Created Successful\", \"success\"); \r\n    } catch (error) {\r\n        console.log(error);\r\n        swal(error, \"error\");\r\n    }\r\n}\r\nfunction* watchGetMonthRequest(){\r\n    yield takeEvery( GET_MONTH_LIST_REQUEST, getMonthList );\r\n}\r\nfunction* watchSetMonth(){\r\n    yield takeEvery( ADD_MONTH, setMonth );\r\n}\r\nfunction* monthSagas() {\r\n    yield all([\r\n        fork( watchGetMonthRequest ),\r\n        fork( watchSetMonth ),\r\n    ]);\r\n}\r\n\r\nexport default monthSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport swal from 'sweetalert';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\n//import swal from 'sweetalert';\r\nimport {\r\n    ADD_CALL,\r\n    GET_CALL_LIST_REQUEST,\r\n    //SET_CALL_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getCallList () {\r\n    try {\r\n        const response = yield  call( api.getCallList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.getCall( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.getCall( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* setCall( action ){\r\n    try {\r\n        const result = yield call( api.setCall, action.payload );\r\n        yield put( actions.setCallRquest( result.data ) );\r\n        yield call( getCallList );\r\n        swal(\"Record Created Successful\", \"success\"); \r\n        console.log(result.data);\r\n    } catch (error) {\r\n        console.log(error);\r\n        swal(error, \"error\");\r\n    }\r\n}\r\nfunction* watchGetCallRequest(){\r\n    yield takeEvery( GET_CALL_LIST_REQUEST, getCallList );\r\n}\r\nfunction* watchSetCall(){\r\n    yield takeEvery( ADD_CALL, setCall );\r\n}\r\nfunction* callSagas() {\r\n    yield all([\r\n        fork( watchGetCallRequest ),\r\n        fork( watchSetCall ),\r\n    ]);\r\n}\r\n\r\nexport default callSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_REPORTING_MAN_LIST_REQUEST,\r\n    //SET_CLIENT_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getReportingManList () {\r\n    try {\r\n        const response = yield  call( api.getReportingMan );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setReportingMan( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setReportingMan( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n// function* setReportingMan( action ){\r\n//     try {\r\n//         const result = yield call( api.setReportingMan, action.payload );\r\n//         yield put( actions.setReportingMan( result.data ) );\r\n//         yield call( getReportingManList );\r\n//     } catch (error) {\r\n//         console.log(error);\r\n       \r\n//     }\r\n// }\r\nfunction* watchGetReportingManRequest(){\r\n    yield takeEvery( GET_REPORTING_MAN_LIST_REQUEST, getReportingManList );\r\n}\r\n\r\nfunction* reportingManSagas() {\r\n    yield all([\r\n        fork( watchGetReportingManRequest ),\r\n    ]);\r\n}\r\n\r\nexport default reportingManSagas;\r\n","// @flow\r\nimport { all } from 'redux-saga/effects';\r\nimport authSaga from './auth/saga';\r\nimport layoutSaga from './layout/saga';\r\nimport appMenuSaga from './appMenu/saga';\r\nimport userSaga from './user/sagas';\r\nimport requirementSagas from './requirement/sagas';\r\nimport clientSagas from './client/sagas';\r\nimport recruiterSagas from './recruiter/sagas';\r\nimport attendanceSagas from './attendance/sagas';\r\nimport listSagas from './list/sagas';\r\nimport activitySagas from './activity/sagas';\r\nimport teamSagas from './teammaster/sagas';\r\nimport roleSagas from './role/sagas';\r\nimport leaveSagas from './leave/sagas';\r\nimport holidaySagas from './holiday/sagas';\r\nimport cwsSagas from './clientwisesales/sagas';\r\nimport salesUserSagas from './salesuser/sagas';\r\nimport reqReportSagas from './allreport/sagas';\r\nimport teamLeadSagas from './teamLead/sagas';\r\nimport revenueSagas from './salesrevenue/sagas';\r\nimport monthSagas from './salesmonthreport/sagas';\r\nimport callSagas from './salescallreport/sagas'\r\nimport reportingManSagas from './reportingmanager/sagas'\r\nexport default function* rootSaga(getState: any): any {\r\n    yield all( [\r\n        authSaga(), \r\n        layoutSaga(), \r\n        appMenuSaga(), \r\n        userSaga(),\r\n        requirementSagas(),\r\n        clientSagas(),\r\n       recruiterSagas(),\r\n       attendanceSagas(),\r\n       listSagas(),\r\n       activitySagas(),\r\n       teamSagas(),\r\n       roleSagas(),\r\n       leaveSagas(),\r\n       holidaySagas(),\r\n       cwsSagas(),\r\n       salesUserSagas(),\r\n       reqReportSagas(),\r\n       teamLeadSagas(),\r\n       revenueSagas(),\r\n       monthSagas(),\r\n       callSagas(),\r\n       reportingManSagas()\r\n    ] );\r\n}\r\n","// @flow\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducers from './reducers';\r\nimport sagas from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState: {}) {\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\r\n    sagaMiddleware.run(sagas);\r\n    return store;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './redux/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore()}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n","import {CREATE_CWS, CREATE_CWS_SUCCESS, GET_CWS_LIST_REQUEST, \r\n   SET_CWS_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getCwsList =()=>({\r\n  type:GET_CWS_LIST_REQUEST\r\n})\r\n\r\nexport const setCwsList = ( cws ) => ( {\r\n  type: SET_CWS_LIST_REQUEST,\r\n  payload: cws\r\n} );\r\n\r\nexport const createCws = ( cws ) => ( {\r\n  type: CREATE_CWS,\r\n  payload: cws\r\n} );\r\nexport const createCwsSuccess = ( createcws ) => ( {\r\n  type: CREATE_CWS_SUCCESS,\r\n  payload: createcws\r\n} );","/* Layout types and other constants */\r\n\r\nexport const LAYOUT_VERTICAL = 'vertical';\r\nexport const LAYOUT_HORIZONTAL = 'topnav';\r\n\r\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\r\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\r\n\r\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\r\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\r\n\r\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\r\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\r\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\n/**\r\n * Renders the PageTitle\r\n */\r\nconst PageTitle = (props) => {\r\n    //const title = props.title || \"\";\r\n    const items = props.breadCrumbItems || \"\";\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Breadcrumb className=\" mt-2 font-size-14\">\r\n                <BreadcrumbItem>\r\n                    <Link to=\"/\">ATS</Link>\r\n                </BreadcrumbItem>\r\n                {items.map((item, index) => {\r\n                    return item.active ? (\r\n                        <BreadcrumbItem active key={index}>\r\n                            {item.label}\r\n                        </BreadcrumbItem>\r\n                    ) : (\r\n                            <BreadcrumbItem key={index}>\r\n                                <Link to={item.path}>{item.label}</Link>\r\n                            </BreadcrumbItem>\r\n                        );\r\n                })}\r\n            </Breadcrumb>\r\n\r\n            {/* <h4 className=\"mb-1 mt-0\">{title}</h4> */}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PageTitle;","\r\n/** List of Client */\r\nexport const GET_ATTENDANCE_LIST_REQUEST = 'GET_ATTENDANCE_LIST_REQUEST';\r\nexport const SET_ATTENDANCE_LIST_REQUEST = 'SET_ATTENDANCE_LIST_REQUEST';\r\n\r\n","\r\n/** List of Client */\r\nexport const GET_HOLIDAY_LIST_REQUEST = 'GET_HOLIDAY_LIST_REQUEST';\r\nexport const SET_HOLIDAY_LIST_REQUEST = 'SET_HOLIDAY_LIST_REQUEST';\r\n\r\n","\r\n/** List of Client */\r\nexport const GET_SALESUSER_LIST_REQUEST = 'GET_SALESUSER_LIST_REQUEST';\r\nexport const SET_SALESUSER_LIST_REQUEST = 'SET_SALESUSER_LIST_REQUEST';\r\n\r\n","\r\n/** List of Client */\r\nexport const GET_RECRUITER_LIST_REQUEST = 'GET_RECRUITER_LIST_REQUEST';\r\nexport const SET_RECRUITER_LIST_REQUEST = 'SET_RECRUITER_LIST_REQUEST';\r\n\r\n","\r\n/** List of Client */\r\nexport const GET_LEAVE_LIST_REQUEST = 'GET_LEAVE_LIST_REQUEST';\r\nexport const SET_LEAVE_LIST_REQUEST = 'SET_LEAVE_LIST_REQUEST';\r\n\r\n","\r\n/** List of Client */\r\nexport const GET_TEAMLEAD_LIST_REQUEST = 'GET_TEAMLEAD_LIST_REQUEST';\r\nexport const SET_TEAMLEAD_LIST_REQUEST = 'SET_TEAMLEAD_LIST_REQUEST';\r\n\r\n","\r\n/** List of Client */\r\nexport const GET_REPORTING_MAN_LIST_REQUEST = 'GET_REPORTING_MAN_LIST_REQUEST';\r\nexport const SET_REPORTING_MAN_LIST_REQUEST = 'SET_REPORTING_MAN_LIST_REQUEST';\r\n\r\n","import {GET_ATTENDANCE_LIST_REQUEST, \r\n   SET_ATTENDANCE_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getAttendanceList =()=>({\r\n  type:GET_ATTENDANCE_LIST_REQUEST\r\n})\r\n\r\nexport const setAttendance = ( attendance ) => ( {\r\n  type: SET_ATTENDANCE_LIST_REQUEST,\r\n  payload: attendance\r\n} );","// @flow\r\nimport jwtDecode from 'jwt-decode';\r\nimport { Cookies } from 'react-cookie';\r\n\r\n/**\r\n * Checks if user is authenticated\r\n */\r\nconst isUserAuthenticated = () => {\r\n   \r\n    const user = getLoggedInUser();\r\n    if (!user) {\r\n        return false;\r\n    }\r\n    //console.log(\"isUserAuthenticated\",user);\r\n    const decoded = jwtDecode(user.token);\r\n    const currentTime = Date.now() / 1000;\r\n    if (decoded.exp < currentTime) {\r\n        console.warn('access token expired');\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n};\r\n\r\n/**\r\n * Returns the logged in user\r\n */\r\nconst getLoggedInUser = () => {\r\n    const cookies = new Cookies();\r\n    const user = cookies.get('user');\r\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\r\n};\r\n\r\nexport { isUserAuthenticated, getLoggedInUser };\r\n"],"sourceRoot":""}