{"version":3,"sources":["pages/sales/callreport/AddCall.js","pages/sales/callreport/ViewCall.js","pages/sales/callreport/CallReportNav.js","pages/sales/monthreport/AddMonthReport.js","pages/sales/monthreport/ViewMonthReport.js","pages/sales/monthreport/MonthReportNav.js","pages/sales/revenuereport/AddRevenuReport.js","pages/sales/revenuereport/ViewRevenuReport.js","pages/sales/revenuereport/RevenueReportNav.js","pages/sales/Sales.js"],"names":["AddCall","clientList","useSelector","state","Client","clients","getUsername","Auth","user","Username","useState","dt","setdt","client","setclient","poc","setpoc","agenda","setagenda","dispatch","useDispatch","useEffect","getClientList","Fragment","Form","onSubmit","e","preventDefault","reqBody","username","setCall","Row","Col","className","style","height","lg","FormGroup","Label","for","type","name","id","onChange","target","value","selected","desabled","map","key","cid","cname","urlpattern","config","baseUrl","defaultSorted","dataField","order","sizePerPageRenderer","options","currSizePerPage","onSizePerPageChange","Input","defaultValue","option","idx","text","TableWithSearch","props","SearchBar","Search","rowData","setrowData","rowEvent","onDoubleClick","row","alert","console","log","NoDataIndication","bootstrap4","keyField","data","records","columns","search","md","searchProps","baseProps","bordered","rowEvents","noDataIndication","pagination","paginationFactory","sizePerPage","sizePerPageList","length","ViewCall","callrecord","setCallRecord","loginDetails","getAllCall","$","ajax","url","dataType","success","allCalls","Data","sort","CallReportNav","activeTab","setActiveTab","toggle","tab","Nav","tabs","NavItem","NavLink","classnames","active","onClick","TabContent","TabPane","tabId","AddMonthReport","months","setmonths","years","setyears","bd","setbd","join","setjoin","position","setposition","passthrough","setpassthrough","business","setbusiness","bulkdeal","setbulkdeal","submission","setsubmission","poextend","setpoextend","intreceived","setintreceived","totrevenue","settotrevenue","attrition","setattrition","feedbackpending","setfeedbackpending","noshow","setnoshow","remark","setremark","offer","setoffer","React","label","selectMonth","setMonth","required","disabled","setmonth","year","Date","getFullYear","Array","from","v","i","getDropList","class","ViewMonthReport","SalesMonthReport","getMonthList","MonthReportNav","AddRevenuReport","srmonth","setsrmonth","srattrition","setsrattrition","srbd","setsrbd","srclient","setsrclient","srtotgp","setsrtotgp","sractualstart","setsractualstart","sravggpadded","setsravggpadded","srnettotgp","setsrnettotgp","srstart","setsrstart","srnettotgpadded","setsrnettotgpadded","srtypeofemployement","setsrtypeofemployement","setRevenue","selmonth","ViewRevenuReport","SalesRevenue","revenues","getRevenueList","hidden","RevenueReportNav","Sales","PageTitle","breadCrumbItems","path","Button","color"],"mappings":"6QA6GeA,EAvGC,KACZ,IAAIC,EAAaC,YAAaC,GAAUA,EAAMC,OAAOC,SAAW,IAG5DC,EAFeJ,YAAaC,GAASA,EAAMI,KAAKC,MAAQ,IAE7BC,SAJb,EAKAC,mBAAS,IALT,mBAKXC,EALW,KAKPC,EALO,OAMQF,mBAAS,IANjB,mBAMXG,EANW,KAMHC,EANG,OAOEJ,mBAAS,IAPX,mBAOXK,EAPW,KAONC,EAPM,OAQQN,mBAAS,IARjB,mBAQXO,EARW,KAQHC,EARG,KASZC,EAAWC,cAChBC,oBAAU,KACPF,EAASG,gBAET,IAcJ,OACI,kBAAC,IAAMC,SAAP,KAEI,kBAACC,EAAA,EAAD,CAAMC,SAhBOC,IACjBA,EAAEC,iBACH,IAAMC,EAAS,CACdjB,GAAGA,EACHE,OAAOA,EACPE,IAAIA,EACJE,OAAOA,EACPY,SAASvB,GAGVa,EAASW,YAAQF,MAOR,kBAACG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,UAAU,wBACX,yBAAKA,UAAU,WAAWC,MAAO,CAACC,OAAO,UACzC,wBAAIF,UAAU,+BAAd,eACJ,kBAACF,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKI,GAAI,IACG,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,IAAI,qBAAX,aACI,2BAAOC,KAAK,OAAOC,KAAK,KAAKR,UAAU,eAAeS,GAAG,KACrDC,SAAWjB,IACPd,EAAOc,EAAEkB,OAAOC,YAMhC,kBAACb,EAAA,EAAD,CAAKI,GAAI,IACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,qBAAX,iBAEA,4BAAQN,UAAU,eAAeQ,KAAK,SACtCC,GAAG,SAAUC,SAAWjB,IACpBZ,EAAWY,EAAEkB,OAAOC,SAEnB,4BAAQC,UAAQ,EAACC,UAAQ,GAAzB,UACC9C,EAAW+C,IAAKnC,GACtB,4BAAQoC,IAAKpC,EAAOqC,IAAKL,MAAOhC,EAAOqC,KAClCrC,EAAOsC,WAMpB,kBAACnB,EAAA,EAAD,CAAKI,GAAI,IACL,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,IAAI,qBAAX,OACI,2BAAOC,KAAK,OAAOC,KAAK,MAAMR,UAAU,eAAeS,GAAG,MACtDC,SAAWjB,IACPV,EAAQU,EAAEkB,OAAOC,YAMjC,kBAACb,EAAA,EAAD,CAAKI,GAAI,IACL,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,IAAI,qBAAX,UACI,2BAAOC,KAAK,OAAOC,KAAK,SAASR,UAAU,eAAeS,GAAG,SACzDC,SAAWjB,IACPR,EAAWQ,EAAEkB,OAAOC,aAOxC,kBAACd,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKI,GAAI,IACL,4BAAQI,KAAK,SAASP,UAAU,mBAAhC,UACA,4BAAQA,UAAU,0BAAlB,kB,8FCvFxBmB,E,OAAYC,EAAOC,QAEjBC,EAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,EAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMtC,SAAP,KACI,2BAAOU,UAAU,iBAAjB,QACA,kBAAC6B,EAAA,EAAD,CACItB,KAAK,SACLC,KAAK,SACLC,GAAG,aACHT,UAAU,gDACV8B,aAAcH,EACdjB,SAAWjB,GAAMmC,EAAoBnC,EAAEkB,OAAOC,QAC7Cc,EAAQX,IAAI,CAACgB,EAAQC,IACX,4BAAQhB,IAAKgB,GAAMD,EAAOE,QAGzC,2BAAOjC,UAAU,iBAAjB,UAIFkC,EAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UADuB,EAGD3D,mBAAS,IAHR,mBAGxB6D,EAHwB,KAGfC,EAHe,KAMvBC,EAAW,CACfC,cAAgBC,IACZC,QACIJ,EAAYD,GAAY,IAAIA,EAASI,IACrCE,QAAQC,IAAI,UAAWP,KAI7BQ,EAAmB,IACrB,yBAAK9C,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAGrB,OAEY,kBAAC,IAAD,CAAiB+C,YAAU,EAACC,SAAS,aAAaC,KAAMd,EAAMe,QAASC,QAAShB,EAAMgB,QAASC,QAAM,GAC/FjB,GACE,kBAAC,IAAM7C,SAAP,KACI,kBAACQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKsD,GAAI,EAAGrD,UAAU,IAClB,kBAACoC,EAAcD,EAAMmB,eAI7B,kBAAC,IAAD,iBACQnB,EAAMoB,UADd,CAEIC,UAAU,EACVlC,cAAeA,EACfmC,UAAWjB,EACXkB,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACbpC,oBAAqBA,EACrBqC,gBAAiB,CACb,CAAE7B,KAAM,KAAMrB,MAAO,IACrB,CAAEqB,KAAM,KAAMrB,MAAO,IACrB,CAAEqB,KAAM,KAAMrB,MAAO,IACrB,CAAEqB,KAAM,QAASrB,MAASuB,EAAMe,QAAUf,EAAMe,QAAQa,OAAS,YAuFlGC,EA1EE,KAAM,MAIcvF,mBAAS,IAJvB,mBAIbwF,EAJa,KAIDC,EAJC,KAKhBC,EAAelG,YAAaC,GAASA,EAAMI,KAAKC,MAAQ,IAI3Da,oBAAU,KACPgF,KAGA,IACH,IAAMA,EAAW,KACb,IAAI/F,EAAc8F,EAAa3F,SAE/B6F,IAAEC,KACD,CAEGC,IAAI,GAAD,OAAKpD,EAAL,gDAAuD9C,GAC1DkC,KAAK,MACLiE,SAAS,OAGTC,QAAS,SAASxB,GAIdL,QAAQC,IAAII,EAAM,gBAClB,IAAIyB,EAAWzB,EAAK0B,KACpBT,EAAcQ,OAKtBxB,EAASe,GAAc,GA2B3B,OACI,kBAAC,IAAM3E,SAAP,KACI,kBAACQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACmC,EAAD,CAAiBgB,QAASA,EAASC,QA9BnC,CAEZ,CACI5B,UAAW,SACXU,KAAM,cACN2C,MAAM,GAEV,CACIrD,UAAW,KACXU,KAAM,QAEV,CACIV,UAAW,MACXU,KAAM,OAEV,CACIV,UAAW,SACXU,KAAM,UAEV,CACIV,UAAW,WACXU,KAAM,qBC7GH4C,EAzCQ1C,IAAW,IAAD,EACG1D,mBAAS,KADZ,mBACxBqG,EADwB,KACbC,EADa,KAGzBC,EAASC,IACVH,IAAcG,GAAKF,EAAaE,IAGrC,OACE,kBAAC,IAAM3F,SAAP,KACE,kBAAC4F,EAAA,EAAD,CAAKC,MAAI,EAACnF,UAAU,qDAClB,kBAACoF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACErF,UAAWsF,IAAW,CAAEC,OAAsB,MAAdT,IAChCU,QAAS,KAAQR,EAAO,OAF1B,aAOF,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACErF,UAAWsF,IAAW,CAAEC,OAAsB,MAAdT,IAChCU,QAAS,KAAQR,EAAO,OAF1B,eAQJ,kBAACS,EAAA,EAAD,CAAYzF,UAAU,kBAAkB8E,UAAWA,GACjD,kBAACY,EAAA,EAAD,CAASC,MAAM,KAEV,kBAAC,EAAD,OAEL,kBAACD,EAAA,EAAD,CAASC,MAAM,KACd,kBAAC,EAAD,U,iBCiTMC,EAjVQ,KACnB,IAAM1G,EAAWC,cADQ,EAECV,mBAAS,IAFV,mBAElBoH,EAFkB,KAEVC,EAFU,OAGDrH,mBAAS,IAHR,mBAGlBsH,EAHkB,KAGXC,EAHW,OAIPvH,mBAAS,IAJF,mBAIlBwH,EAJkB,KAIdC,EAJc,OAKHzH,mBAAS,IALN,mBAKlB0H,EALkB,KAKZC,EALY,OAMC3H,mBAAS,IANV,mBAMlBG,EANkB,KAMVC,EANU,OAOKJ,mBAAS,IAPd,mBAOlB4H,EAPkB,KAORC,EAPQ,OAQW7H,mBAAS,IARpB,mBAQlB8H,EARkB,KAQLC,EARK,OASK/H,mBAAS,IATd,mBASlBgI,EATkB,KASRC,EATQ,OAUKjI,mBAAS,IAVd,mBAUlBkI,EAVkB,KAURC,EAVQ,OAWSnI,mBAAS,IAXlB,mBAWlBoI,EAXkB,KAWNC,EAXM,OAYKrI,mBAAS,IAZd,oBAYlBsI,GAZkB,MAYRC,GAZQ,SAaWvI,mBAAS,IAbpB,qBAalBwI,GAbkB,MAaLC,GAbK,SAcSzI,mBAAS,IAdlB,qBAclB0I,GAdkB,MAcNC,GAdM,SAeO3I,mBAAS,IAfhB,qBAelB4I,GAfkB,MAePC,GAfO,SAgBmB7I,mBAAS,IAhB5B,qBAgBlB8I,GAhBkB,MAgBDC,GAhBC,SAiBC/I,mBAAS,IAjBV,qBAiBlBgJ,GAjBkB,MAiBVC,GAjBU,SAkBCjJ,mBAAS,IAlBV,qBAkBlBkJ,GAlBkB,MAkBVC,GAlBU,SAmBDnJ,mBAAS,IAnBR,qBAmBlBoJ,GAnBkB,MAmBXC,GAnBW,MAyDrB9J,GAAaC,YAAaC,GAAUA,EAAMC,OAAOC,SAAW,IAChEgB,oBAAW,KACPF,EAASG,gBAGR,IA9DoB,OA+DD0I,IAAMtJ,SAAS,CACnC,CAAEuJ,MAAO,UAAWpH,MAAO,WAC3B,CAAEoH,MAAO,WAAYpH,MAAO,YAC5B,CAAEoH,MAAO,QAASpH,MAAO,SACzB,CAAEoH,MAAO,QAASpH,MAAO,SACzB,CAAEoH,MAAO,MAAOpH,MAAO,OACvB,CAAEoH,MAAO,OAAQpH,MAAO,QACxB,CAAEoH,MAAO,OAAQpH,MAAO,QACxB,CAAEoH,MAAO,SAAUpH,MAAO,UAC1B,CAAEoH,MAAO,YAAapH,MAAO,aAC7B,CAAEoH,MAAO,UAAWpH,MAAO,WAC3B,CAAEoH,MAAO,WAAYpH,MAAO,YAC5B,CAAEoH,MAAO,WAAYpH,MAAO,cAZvBqH,GA/DgB,qBA8EzB,OACI,kBAAC,IAAM3I,SAAP,KAEI,kBAACC,EAAA,EAAD,CAAMC,SAxDOC,IACjBA,EAAEC,iBACF,IAAMC,EAAS,CACXkG,OAAOA,EACPE,MAAMA,EACNE,GAAGA,EACHE,KAAKA,EACLvH,OAAOA,EACPyH,SAASA,EACTE,YAAYA,EACZE,SAASA,EACTE,SAASA,EACTE,WAAWA,EACXE,SAASA,GACTE,YAAYA,GACZE,WAAWA,GACXE,UAAUA,GACVE,gBAAgBA,GAChBE,OAAOA,GACPE,OAAOA,GACPE,MAAMA,IAEV3I,EAASgJ,YAASvI,MAmCM,kBAACG,EAAA,EAAD,KACJ,kBAACC,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,qBAAX,gBAA4C,0BAAMN,UAAU,WAAhB,MAC5C,4BAAQA,UAAU,2BAA2BmI,UAAQ,EACtD3H,KAAK,SAASC,GAAG,SAASC,SAAWjB,IACpCqG,EAAWrG,EAAEkB,OAAOC,SAEnB,4BAAQwH,UAAQ,EAACvH,UAAQ,EAACD,MAAM,IAAhC,UACJqH,GAAYlH,IAAKsH,GACd,4BAAQrH,IAAKqH,EAASzH,MAAOA,MAAOyH,EAASzH,OACxCyH,EAASL,WAMtB,kBAACjI,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,qBAAX,eAA2C,0BAAMN,UAAU,WAAhB,MAC3C,4BAAQA,UAAU,2BAA2BmI,UAAQ,EACtD3H,KAAK,QAAQC,GAAG,QAAQC,SAAWjB,IAClCuG,EAAUvG,EAAEkB,OAAOC,SAElB,4BAAQwH,UAAQ,EAACvH,UAAQ,EAACD,MAAM,IAAhC,UAzDb,MAChB,IAAM0H,GAAO,IAAIC,MAAOC,cAC1B,OACIC,MAAMC,KAAM,IAAID,MAAM,IAAK,CAACE,EAAEC,IAC5B,4BAAQ5H,IAAK4H,EAAGhI,MAAO0H,EAAKM,GAAIN,EAAKM,KAsDXC,MAIV,kBAAC9I,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,MACI,kBAACuB,EAAA,EAAD,CACItB,KAAK,OACLP,UAAU,cACVS,GAAG,KACHD,KAAK,KAAKE,SAAWjB,IACjByG,EAAOzG,EAAEkB,OAAOC,aAKhC,kBAACd,EAAA,EAAD,CAAKE,UAAU,QACnB,kBAACD,EAAA,EAAD,CAAKI,GAAI,GACD,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,qBAAX,iBAA6C,0BAAMN,UAAU,WAAhB,MAC7C,4BAAQA,UAAU,2BAA2BmI,UAAQ,EACtD3H,KAAK,SAASC,GAAG,SAASC,SAAWjB,IACpCZ,EAAWY,EAAEkB,OAAOC,SAEnB,4BAAQwH,UAAQ,EAACvH,UAAQ,EAACD,MAAM,IAAhC,UACC5C,GAAW+C,IAAKnC,GAClB,4BAAQoC,IAAKpC,EAAOqC,IAAKL,MAAOhC,EAAOqC,KAClCrC,EAAOsC,WAOxB,kBAACnB,EAAA,EAAD,CAAKI,GAAI,GACD,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,QACA,kBAACuB,EAAA,EAAD,CACItB,KAAK,OACLP,UAAU,cACVS,GAAG,OACHD,KAAK,OAAOE,SAAWjB,IACnB2G,EAAS3G,EAAEkB,OAAOC,YAKlC,kBAACb,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,kBACA,kBAACuB,EAAA,EAAD,CACItB,KAAK,OACLP,UAAU,cACVS,GAAG,WACHD,KAAK,WAAWE,SAAWjB,IACvB6G,EAAa7G,EAAEkB,OAAOC,aAK1C,kBAACd,EAAA,EAAD,CAAKE,UAAU,QACX,kBAACD,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,eACA,kBAACuB,EAAA,EAAD,CACItB,KAAK,OACLP,UAAU,cACVS,GAAG,cACHD,KAAK,cAAcE,SAAWjB,IAC1B+G,EAAgB/G,EAAEkB,OAAOC,YAKzC,kBAACb,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,qBACI,kBAACuB,EAAA,EAAD,CACItB,KAAK,OACLP,UAAU,cACVS,GAAG,WACHD,KAAK,WAAWE,SAAWjB,IACvBiH,EAAajH,EAAEkB,OAAOC,YAItC,kBAACb,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,YACA,kBAACuB,EAAA,EAAD,CACItB,KAAK,OACLP,UAAU,cACVS,GAAG,WACHD,KAAK,WAAWE,SAAWjB,IACvBmH,EAAanH,EAAEkB,OAAOC,aAKtC,kBAACd,EAAA,EAAD,CAAKE,UAAU,QACf,kBAACD,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,sBACI,kBAACuB,EAAA,EAAD,CACItB,KAAK,OAAO4H,UAAQ,EACpBnI,UAAU,cACVS,GAAG,aACHD,KAAK,aAAaE,SAAWjB,IACzBqH,EAAerH,EAAEkB,OAAOC,YAKxC,kBAACb,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,cACA,kBAACuB,EAAA,EAAD,CACItB,KAAK,OACLP,UAAU,cACVS,GAAG,WACHD,KAAK,WAAWE,SAAWjB,IACvBuH,GAAavH,EAAEkB,OAAOC,YAKtC,kBAACb,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,sBACI,kBAACuB,EAAA,EAAD,CACItB,KAAK,OACLE,GAAG,cACHT,UAAU,cACVQ,KAAK,cAAcE,SAAWjB,IAC1ByH,GAAgBzH,EAAEkB,OAAOC,aAK7C,kBAACd,EAAA,EAAD,CAAKE,UAAU,QACX,kBAACD,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,mBACA,kBAACuB,EAAA,EAAD,CACItB,KAAK,OACLP,UAAU,cACVS,GAAG,YACHD,KAAK,YAAYE,SAAWjB,IACxB6H,GAAc7H,EAAEkB,OAAOC,YAKvC,kBAACb,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,oBACI,kBAACuB,EAAA,EAAD,CACItB,KAAK,OACLE,GAAG,kBACHT,UAAU,cACVQ,KAAK,kBAAkBE,SAAWjB,IAC9B+H,GAAoB/H,EAAEkB,OAAOC,YAI7C,kBAACb,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,iBACA,kBAACuB,EAAA,EAAD,CACItB,KAAK,OACLP,UAAU,cACVS,GAAG,aACHD,KAAK,aAAaE,SAAWjB,IACzB2H,GAAe3H,EAAEkB,OAAOC,aAK5C,kBAACd,EAAA,EAAD,CAAKE,UAAU,QACX,kBAACD,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,WACI,kBAACuB,EAAA,EAAD,CACItB,KAAK,OACLE,GAAG,SACHT,UAAU,cACVQ,KAAK,SAASE,SAAWjB,IACrBiI,GAAWjI,EAAEkB,OAAOC,YAKpC,kBAACb,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,UACA,kBAACuB,EAAA,EAAD,CACItB,KAAK,OACLP,UAAU,cACVS,GAAG,SACHD,KAAK,SAASE,SAAWjB,IACrBmI,GAAWnI,EAAEkB,OAAOC,YAKpC,kBAACb,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,SACI,kBAACuB,EAAA,EAAD,CACItB,KAAK,OACLE,GAAG,QACHT,UAAU,cACVQ,KAAK,QAAQE,SAAWjB,IACpBqI,GAAUrI,EAAEkB,OAAOC,aAKvC,kBAACd,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKI,GAAI,IACL,4BAAQI,KAAK,SAASP,UAAU,mBAAhC,QACA,4BAAQA,UAAU,0BAAlB,eCpUtBsB,EAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,EAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMtC,SAAP,KACI,2BAAOU,UAAU,iBAAjB,QACA,kBAAC6B,EAAA,EAAD,CACItB,KAAK,SACLC,KAAK,SACLC,GAAG,aACHT,UAAU,gDACV8B,aAAcH,EACdjB,SAAWjB,GAAMmC,EAAoBnC,EAAEkB,OAAOC,QAC7Cc,EAAQX,IAAI,CAACgB,EAAQC,IACX,4BAAQhB,IAAKgB,GAAMD,EAAOE,QAGzC,2BAAOjC,UAAU,iBAAjB,UAIFkC,EAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UADuB,EAGD3D,mBAAS,IAHR,mBAGxB6D,EAHwB,KAGfC,EAHe,KAMvBC,EAAW,CACfC,cAAgBC,IACZC,QACIJ,EAAYD,GAAY,IAAIA,EAASI,IACrCE,QAAQC,IAAI,UAAWP,KAI7BQ,EAAmB,IACrB,yBAAK9C,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAGrB,OAEY,kBAAC,IAAD,CAAiB+C,YAAU,EAACC,SAAS,aAAaC,KAAMd,EAAMe,QAASC,QAAShB,EAAMgB,QAASC,QAAM,GAC/FjB,GACE,kBAAC,IAAM7C,SAAP,KACI,kBAACQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKsD,GAAI,EAAGrD,UAAU,IAClB,kBAACoC,EAAcD,EAAMmB,eAG7B,yBAAKwF,MAAM,oBACX,kBAAC,IAAD,iBACQ3G,EAAMoB,UADd,CAEIC,UAAU,EACVlC,cAAeA,EACfmC,UAAWjB,EACXkB,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACbpC,oBAAqBA,EACrBqC,gBAAiB,CACb,CAAE7B,KAAM,KAAMrB,MAAO,IACrB,CAAEqB,KAAM,KAAMrB,MAAO,IACrB,CAAEqB,KAAM,KAAMrB,MAAO,IACrB,CAAEqB,KAAM,QAASrB,MAASuB,EAAMe,QAAUf,EAAMe,QAAQa,OAAS,aAmHlGgF,EArGS,KAEpB,IAAM7J,EAAWC,cACb+D,EAAUjF,YAAaC,GAAUA,EAAM8K,iBAAiBnD,QAAU,IAEtEzG,oBAAU,KACNF,EAAS+J,gBAGV,IAiFH,OACI,kBAAC,IAAM3J,SAAP,KACI,kBAACQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,EAAD,CAAiBmD,QAASA,EAASC,QAnFnC,CACZ,CACI5B,UAAW,OACXU,KAAM,aACN2C,MAAM,GAEV,CACIrD,UAAW,SACXU,KAAM,SAEV,CACIV,UAAW,QACXU,KAAM,QAEV,CACIV,UAAW,SACXU,KAAM,UAEV,CACIV,UAAW,WACXU,KAAM,iBAEV,CACIV,UAAW,WACXU,KAAM,qBAEV,CACIV,UAAW,aACXU,KAAM,eAEV,CACIV,UAAW,cACXU,KAAM,sBAEV,CACIV,UAAW,kBACXU,KAAM,oBAEV,CACIV,UAAW,SACXU,KAAM,WAEV,CACIV,UAAW,QACXU,KAAM,SAEV,CACIV,UAAW,KACXU,KAAM,MAEV,CACIV,UAAW,OACXU,KAAM,QAEV,CACIV,UAAW,cACXU,KAAM,eAEV,CACIV,UAAW,WACXU,KAAM,aAEV,CACIV,UAAW,WACXU,KAAM,aAEV,CACIV,UAAW,YACXU,KAAM,mBAEV,CACIV,UAAW,aACXU,KAAM,iBAEV,CACIV,UAAW,SACXU,KAAM,iBC5IHiH,EAzCS/G,IAAW,IAAD,EACE1D,mBAAS,KADX,mBACzBqG,EADyB,KACdC,EADc,KAG1BC,EAASC,IACVH,IAAcG,GAAKF,EAAaE,IAGrC,OACE,kBAAC,IAAM3F,SAAP,KACE,kBAAC4F,EAAA,EAAD,CAAKC,MAAI,EAACnF,UAAU,qDAClB,kBAACoF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACErF,UAAWsF,IAAW,CAAEC,OAAsB,MAAdT,IAChCU,QAAS,KAAQR,EAAO,OAF1B,qBAOF,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACErF,UAAWsF,IAAW,CAAEC,OAAsB,MAAdT,IAChCU,QAAS,KAAQR,EAAO,OAF1B,uBAQJ,kBAACS,EAAA,EAAD,CAAYzF,UAAU,kBAAkB8E,UAAWA,GACjD,kBAACY,EAAA,EAAD,CAASC,MAAM,KAEV,kBAAC,EAAD,OAEL,kBAACD,EAAA,EAAD,CAASC,MAAM,KACd,kBAAC,EAAD,U,SC8MMwD,EA9OS,KACpB,IAAMjK,EAAWC,cADS,EAEEV,mBAAS,IAFX,mBAEnB2K,EAFmB,KAEVC,EAFU,OAGU5K,mBAAS,IAHnB,mBAGnB6K,EAHmB,KAGNC,EAHM,OAIJ9K,mBAAS,IAJL,mBAInB+K,EAJmB,KAIbC,EAJa,OAKIhL,mBAAS,IALb,mBAKnBiL,EALmB,KAKTC,EALS,OAMElL,mBAAS,IANX,mBAMnBmL,EANmB,KAMVC,EANU,OAOcpL,mBAAS,IAPvB,mBAOnBqL,EAPmB,KAOJC,EAPI,OAQYtL,mBAAS,IARrB,mBAQnBuL,EARmB,KAQLC,EARK,OASQxL,mBAAS,IATjB,mBASnByL,EATmB,KASPC,EATO,OAUE1L,mBAAS,IAVX,mBAUnB2L,EAVmB,KAUVC,EAVU,OAWkB5L,mBAAS,IAX3B,mBAWnB6L,EAXmB,KAWFC,EAXE,OAa0B9L,mBAAS,IAbnC,oBAanB+L,GAbmB,MAaEC,GAbF,SAoCJ1C,IAAMtJ,SAAS,CACjC,CAAEuJ,MAAO,UAAWpH,MAAO,WAC3B,CAAEoH,MAAO,WAAYpH,MAAO,YAC5B,CAAEoH,MAAO,QAASpH,MAAO,SACzB,CAAEoH,MAAO,QAASpH,MAAO,SACzB,CAAEoH,MAAO,MAAOpH,MAAO,OACvB,CAAEoH,MAAO,OAAQpH,MAAO,QACxB,CAAEoH,MAAO,OAAQpH,MAAO,QACxB,CAAEoH,MAAO,SAAUpH,MAAO,UAC1B,CAAEoH,MAAO,YAAapH,MAAO,aAC7B,CAAEoH,MAAO,UAAWpH,MAAO,WAC3B,CAAEoH,MAAO,WAAYpH,MAAO,YAC5B,CAAEoH,MAAO,WAAYpH,MAAO,cAZzBqH,GApCmB,qBAoDtBjK,GAAaC,YAAaC,GAAUA,EAAMC,OAAOC,SAAW,IAMhE,OALAgB,oBAAW,KACPF,EAASG,gBAGR,IAED,kBAAC,IAAMC,SAAP,KAEI,kBAACC,EAAA,EAAD,CAAMC,SA3COC,IACjBA,EAAEC,iBACF,IAAMC,EAAS,CACXyJ,QAAQA,EACRE,YAAYA,EACZE,KAAKA,EACLE,SAASA,EACTE,QAAQA,EACRE,cAAcA,EACdE,aAAaA,EACbE,WAAWA,EACXE,QAAQA,EACRE,gBAAgBA,EAEhBE,oBAAoBA,IAExBtL,EAASwL,YAAW/K,MA4BI,kBAACG,EAAA,EAAD,KACJ,kBAACC,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,qBAAX,gBAA4C,0BAAMN,UAAU,WAAhB,MAC5C,4BAAQA,UAAU,2BAA2BmI,UAAQ,EACtD3H,KAAK,UAAUC,GAAG,UAAUC,SAAWjB,IACtC4J,EAAY5J,EAAEkB,OAAOC,SAEpB,4BAAQwH,UAAQ,EAACvH,UAAQ,EAACD,MAAM,IAAhC,UACJqH,GAAYlH,IAAK4J,GACd,4BAAQ3J,IAAK2J,EAAS/J,MAAOA,MAAO+J,EAAS/J,OACxC+J,EAAS3C,WAMtB,kBAACjI,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,aACI,kBAACuB,EAAA,EAAD,CACItB,KAAK,OACLP,UAAU,cACVS,GAAG,cACHD,KAAK,cAAcE,SAAWjB,IAC1B8J,EAAgB9J,EAAEkB,OAAOC,YAK7C,kBAACb,EAAA,EAAD,CAAKI,GAAI,GACD,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,qBAAX,iBAA6C,0BAAMN,UAAU,WAAhB,MAC7C,4BAAQA,UAAU,2BAA2BmI,UAAQ,EACtD3H,KAAK,WAAWC,GAAG,WAAWC,SAAWjB,IACxCkK,EAAalK,EAAEkB,OAAOC,SAErB,4BAAQwH,UAAQ,EAACvH,UAAQ,EAACD,MAAM,IAAhC,UACC5C,GAAW+C,IAAKnC,GAClB,4BAAQoC,IAAKpC,EAAOqC,IAAKL,MAAOhC,EAAOqC,KAClCrC,EAAOsC,YAOxB,kBAACpB,EAAA,EAAD,CAAKE,UAAU,QACf,kBAACD,EAAA,EAAD,CAAKI,GAAI,GACD,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,OACA,kBAACuB,EAAA,EAAD,CACItB,KAAK,OAAO4H,UAAQ,EACpBnI,UAAU,cACVS,GAAG,OACHD,KAAK,OAAOE,SAAWjB,IACnBgK,EAAShK,EAAEkB,OAAOC,YAKlC,kBAACb,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,aACA,kBAACuB,EAAA,EAAD,CACItB,KAAK,OAAQ4H,UAAQ,EACrBnI,UAAU,cACVS,GAAG,UACHD,KAAK,UAAUE,SAAWjB,IACtBoK,EAAYpK,EAAEkB,OAAOC,YAIrC,kBAACb,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,gBACA,kBAACuB,EAAA,EAAD,CACItB,KAAK,OACLP,UAAU,cACVS,GAAG,gBACHD,KAAK,gBAAgBE,SAAWjB,IAC5BsK,EAAkBtK,EAAEkB,OAAOC,aAK/C,kBAACd,EAAA,EAAD,CAAKE,UAAU,QACX,kBAACD,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,gBAAyC,0BAAMN,UAAU,WAAhB,MACrC,kBAAC6B,EAAA,EAAD,CACItB,KAAK,OAAO4H,UAAQ,EACpBnI,UAAU,cACVS,GAAG,eACHD,KAAK,eAAeE,SAAWjB,IAC3BwK,EAAiBxK,EAAEkB,OAAOC,YAI1C,kBAACb,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,iBACA,kBAACuB,EAAA,EAAD,CACItB,KAAK,OAAO4H,UAAQ,EACpBnI,UAAU,cACVS,GAAG,aACHD,KAAK,aAAaE,SAAWjB,IACzB0K,EAAe1K,EAAEkB,OAAOC,YAKxC,kBAACb,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,UACI,kBAACuB,EAAA,EAAD,CACItB,KAAK,OAAO4H,UAAQ,EACpBnI,UAAU,cACVS,GAAG,UACHD,KAAK,UAAUE,SAAWjB,IACtB4K,EAAY5K,EAAEkB,OAAOC,aAKrC,kBAACd,EAAA,EAAD,CAAKE,UAAU,QAaf,kBAACD,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,uBACA,kBAACuB,EAAA,EAAD,CACItB,KAAK,OACLP,UAAU,cACVS,GAAG,kBACHD,KAAK,kBAAkBE,SAAWjB,IAC9B8K,EAAoB9K,EAAEkB,OAAOC,YAM7C,kBAACb,EAAA,EAAD,CAAKI,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,uBACA,kBAACuB,EAAA,EAAD,CACItB,KAAK,OACLP,UAAU,cACVS,GAAG,sBACHD,KAAK,sBAAsBE,SAAWjB,IAClCgL,GAAwBhL,EAAEkB,OAAOC,aAKrD,kBAACd,EAAA,EAAD,CAAKE,UAAU,QACf,kBAACD,EAAA,EAAD,CAAKI,GAAI,IACL,4BAAQI,KAAK,SAASP,UAAU,mBAAhC,QACA,4BAAQA,UAAU,0BAAlB,eChOtBsB,EAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,EAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMtC,SAAP,KACI,2BAAOU,UAAU,iBAAjB,QACA,kBAAC6B,EAAA,EAAD,CACItB,KAAK,SACLC,KAAK,SACLC,GAAG,aACHT,UAAU,gDACV8B,aAAcH,EACdjB,SAAWjB,GAAMmC,EAAoBnC,EAAEkB,OAAOC,QAC7Cc,EAAQX,IAAI,CAACgB,EAAQC,IACX,4BAAQhB,IAAKgB,GAAMD,EAAOE,QAGzC,2BAAOjC,UAAU,iBAAjB,UAIFkC,EAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UADuB,EAGD3D,mBAAS,IAHR,mBAGxB6D,EAHwB,KAGfC,EAHe,KAMvBC,EAAW,CACfC,cAAgBC,IACZC,QACIJ,EAAYD,GAAY,IAAIA,EAASI,IACrCE,QAAQC,IAAI,UAAWP,KAI7BQ,EAAmB,IACrB,yBAAK9C,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAGrB,OAEY,kBAAC,IAAD,CAAiB+C,YAAU,EAACC,SAAS,aAAaC,KAAMd,EAAMe,QAASC,QAAShB,EAAMgB,QAASC,QAAM,GAC/FjB,GACE,kBAAC,IAAM7C,SAAP,KACI,kBAACQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKsD,GAAI,EAAGrD,UAAU,IAClB,kBAACoC,EAAcD,EAAMmB,eAG7B,yBAAKwF,MAAM,oBACX,kBAAC,IAAD,iBACQ3G,EAAMoB,UADd,CAEIC,UAAU,EACVlC,cAAeA,EACfmC,UAAWjB,EACXkB,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACbpC,oBAAqBA,EACrBqC,gBAAiB,CACb,CAAE7B,KAAM,KAAMrB,MAAO,IACrB,CAAEqB,KAAM,KAAMrB,MAAO,IACrB,CAAEqB,KAAM,KAAMrB,MAAO,IACrB,CAAEqB,KAAM,QAASrB,MAASuB,EAAMe,QAAUf,EAAMe,QAAQa,OAAS,aAqGlG6G,EAvFU,KAErB,IAAM1L,EAAWC,cACd+D,EAAUjF,YAAaC,GAAUA,EAAM2M,aAAaC,UAEvD1L,oBAAU,KACNF,EAAS6L,gBAGV,IAmEH,OACI,kBAAC,IAAMzL,SAAP,KACI,kBAACQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,EAAD,CAAiBmD,QAASA,EAASC,QArEnC,CACZ,CACI5B,UAAU,KACVU,KAAK,KACL+I,QAAQ,GAEZ,CACIzJ,UAAW,YACXU,KAAM,cAGV,CACIV,UAAW,QACXU,KAAM,QACN2C,MAAM,GAEV,CACIrD,UAAW,OACXU,KAAM,QAEV,CACIV,UAAW,aACXU,KAAM,UAEV,CACIV,UAAW,YACXU,KAAM,cAEV,CACIV,UAAW,UACXU,KAAM,YAEV,CACIV,UAAW,YACXU,KAAM,qBAEV,CACIV,UAAW,QACXU,KAAM,SAEV,CACIV,UAAW,YACXU,KAAM,aAEV,CACIV,UAAW,KACXU,KAAM,MAEV,CACIV,UAAW,cACXU,KAAM,gBAEV,CACIV,UAAW,aACXU,KAAM,gBAEV,CACIV,UAAW,kBACXU,KAAM,oBAEV,CACIV,UAAW,mBACXU,KAAM,8BC/HHgJ,EAzCW9I,IAAW,IAAD,EACA1D,mBAAS,KADT,mBAC3BqG,EAD2B,KAChBC,EADgB,KAG5BC,EAASC,IACVH,IAAcG,GAAKF,EAAaE,IAGrC,OACE,kBAAC,IAAM3F,SAAP,KACE,kBAAC4F,EAAA,EAAD,CAAKC,MAAI,EAACnF,UAAU,qDAClB,kBAACoF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACErF,UAAWsF,IAAW,CAAEC,OAAsB,MAAdT,IAChCU,QAAS,KAAQR,EAAO,OAF1B,uBAOF,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACErF,UAAWsF,IAAW,CAAEC,OAAsB,MAAdT,IAChCU,QAAS,KAAQR,EAAO,OAF1B,yBAQJ,kBAACS,EAAA,EAAD,CAAYzF,UAAU,kBAAkB8E,UAAWA,GACjD,kBAACY,EAAA,EAAD,CAASC,MAAM,KAEV,kBAAC,EAAD,OAEL,kBAACD,EAAA,EAAD,CAASC,MAAM,KACd,kBAAC,EAAD,UCgCMuF,UAhEA/I,IAAW,IAAD,EACW1D,mBAAS,KADpB,mBAChBqG,EADgB,KACLC,EADK,KAGjBC,EAASC,IACVH,IAAcG,GAAKF,EAAaE,IAGrC,OACE,kBAAC,IAAM3F,SAAP,KACE,kBAACQ,EAAA,EAAD,CAAKE,UAAU,cACL,kBAACD,EAAA,EAAD,CAAKsD,GAAI,GACL,kBAAC8H,EAAA,EAAD,CACIC,gBAAiB,CACb,CAAEpD,MAAO,QAASqD,KAAM,SAAU9F,QAAQ,OAItD,kBAACxF,EAAA,EAAD,CAAKsD,GAAI,EAAGrD,UAAU,cACtB,kBAACsL,EAAA,EAAD,CAAQC,MAAM,WAAU,uBAAGvL,UAAU,iBAArC,cAGV,kBAACkF,EAAA,EAAD,CAAKC,MAAI,EAACnF,UAAU,uDAClB,kBAACoF,EAAA,EAAD,CAASpF,UAAU,YACjB,kBAACqF,EAAA,EAAD,CACErF,UAAWsF,IAAW,CAAEC,OAAsB,MAAdT,IAChCU,QAAS,KAAQR,EAAO,OAF1B,YAOF,kBAACI,EAAA,EAAD,CAASpF,UAAU,YACjB,kBAACqF,EAAA,EAAD,CACErF,UAAWsF,IAAW,CAAEC,OAAsB,MAAdT,IAChCU,QAAS,KAAQR,EAAO,OAF1B,iBAOF,kBAACI,EAAA,EAAD,CAASpF,UAAU,YACjB,kBAACqF,EAAA,EAAD,CACErF,UAAWsF,IAAW,CAAEC,OAAsB,MAAdT,IAChCU,QAAS,KAAQR,EAAO,OAF1B,iBAQJ,kBAACS,EAAA,EAAD,CAAYzF,UAAU,kBAAkB8E,UAAWA,GACjD,kBAACY,EAAA,EAAD,CAASC,MAAM,KAEV,kBAAC,EAAD,OAEL,kBAACD,EAAA,EAAD,CAASC,MAAM,KACd,kBAAC,EAAD,OAED,kBAACD,EAAA,EAAD,CAASC,MAAM,KACd,kBAAC,EAAD","file":"static/js/29.06cf72eb.chunk.js","sourcesContent":["import React, { useEffect, useState} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, FormGroup, Form, Label} from 'reactstrap';\r\nimport { getClientList } from '../../../redux/client/actions';\r\nimport { setCall } from '../../../redux/salescallreport/actions';\r\n\r\nconst AddCall = () => {\r\n    let clientList = useSelector((state) => state.Client.clients || []);\r\n    let loginDetails = useSelector((state)=> state.Auth.user || []);\r\n    //console.log(loginDetails.Username);\r\n    var getUsername = loginDetails.Username;\r\n    const [dt, setdt]=useState('');\r\n    const [client, setclient]=useState('');\r\n    const [poc, setpoc]=useState('');\r\n    const [agenda, setagenda]=useState('');\r\n    const dispatch = useDispatch();\r\n     useEffect(() => {\r\n        dispatch(getClientList());\r\n         // eslint-disable-next-line \r\n     }, []);\r\n     const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n       const reqBody ={\r\n        dt:dt,\r\n        client:client,\r\n        poc:poc,\r\n        agenda:agenda,\r\n        username:getUsername\r\n       // teammember\r\n       }\r\n       dispatch(setCall(reqBody));\r\n     }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col className=\"col-md-6 offset-md-3\">\r\n                        <div className=\"card p-5\" style={{height:'600px'}}>\r\n                        <h5 className=\"text-uppercase  text-center\">Create Team</h5>\r\n                    <Row>\r\n                    <Col lg={12}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoApellidos\">Call Date</Label>\r\n                                    <input type=\"date\" name=\"dt\" className=\"form-control\" id=\"dt\" \r\n                                        onChange={(e) => {\r\n                                            setdt (e.target.value);\r\n                                        }} />\r\n                                    \r\n                                   \r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={12}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Select Client</Label>\r\n                                   \r\n                                    <select className=\"form-control\" name=\"client\"\r\n                                    id=\"client\"  onChange={(e) => {\r\n                                        setclient (e.target.value);\r\n                                    }}>\r\n                                         <option selected desabled>Select</option>\r\n                                         {clientList.map((client) => (\r\n                                    <option key={client.cid} value={client.cid}>\r\n                                        {client.cname}\r\n                                    </option>\r\n                                ))}\r\n                                    </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={12}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoApellidos\">POC</Label>\r\n                                    <input type=\"text\" name=\"poc\" className=\"form-control\" id=\"poc\" \r\n                                        onChange={(e) => {\r\n                                            setpoc (e.target.value);\r\n                                        }} />\r\n                                    \r\n                                   \r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={12}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoApellidos\">Agenda</Label>\r\n                                    <input type=\"text\" name=\"agenda\" className=\"form-control\" id=\"agenda\" \r\n                                        onChange={(e) => {\r\n                                            setagenda (e.target.value);\r\n                                        }} />\r\n                                    \r\n                                   \r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={12}>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            <button className=\"btn btn-secondary ml-3\">Cancel</button>\r\n                            </Col>\r\n                        </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            \r\n                       \r\n                        </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddCall;\r\n\r\n\r\n\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport $ from \"jquery\";\r\nimport config from '../../../helpers/baseurl';\r\nvar urlpattern =config.baseUrl;\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                    \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewCall = () => {\r\n\r\n    //const dispatch = useDispatch(); \r\n   //let records = useSelector((state) => state.SalesCallReport.calls);\r\n   const [callrecord, setCallRecord]=useState([]);\r\n   let loginDetails = useSelector((state)=> state.Auth.user || []);\r\n   //console.log(loginDetails.Username);\r\n   \r\n  // console.log(records, 'join list');\r\n    useEffect(() => {\r\n       getAllCall();\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n    const getAllCall=()=>{\r\n        var getUsername = loginDetails.Username;\r\n        //alert(\"calling\");\r\n        $.ajax\r\n        ({\r\n             \r\n            url: `${urlpattern}SalesClientCallRecordMaster?username=${getUsername}`,\r\n            type:\"GET\",\r\n            dataType:\"JSON\",\r\n            \r\n            \r\n            success: function(data) \r\n            {\r\n               // debugger;\r\n                //console.log(\"log response on success\");\r\n                console.log(data, \"call records\");\r\n                var allCalls = data.Data;\r\n                setCallRecord(allCalls);\r\n            }\r\n        });\r\n        \r\n    }\r\n    let records =callrecord || [];\r\n    const columns = [\r\n      \r\n        {\r\n            dataField: 'client',\r\n            text: 'Client Name',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'dt',\r\n            text: 'Date',\r\n        },\r\n        {\r\n            dataField: 'poc',\r\n            text: 'POC',\r\n        },\r\n        {\r\n            dataField: 'agenda',\r\n            text: 'Agenda',\r\n        },\r\n        {\r\n            dataField: 'username',\r\n            text: 'Sales Name',\r\n        },\r\n        \r\n    ];\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewCall;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink} from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport AddCall from './AddCall';\r\nimport ViewCall from './ViewCall';\r\n\r\nconst CallReportNav = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Nav tabs className=\"second-level-tab nav nav-tabs justify-content-end\">\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Add Call\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            View Call\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <AddCall/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <ViewCall/> \r\n        </TabPane>\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CallReportNav;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, FormGroup, Form, Label, Input} from 'reactstrap';\r\nimport { getClientList } from '../../../redux/client/actions';\r\nimport { setMonth } from '../../../redux/salesmonthreport/actions';\r\n//import axios from 'axios';\r\n// import Select from 'react-select';\r\nconst AddMonthReport = () => { \r\n    const dispatch = useDispatch();\r\n    const [months, setmonths]=useState('');\r\n    const [years, setyears]=useState('');\r\n    const [bd, setbd]=useState('');\r\n    const [join, setjoin]=useState('');\r\n    const [client, setclient]=useState('');\r\n    const [position, setposition]=useState('');\r\n    const [passthrough, setpassthrough]=useState('');\r\n    const [business, setbusiness]=useState('');\r\n    const [bulkdeal, setbulkdeal]=useState('');\r\n    const [submission, setsubmission]=useState('');\r\n    const [poextend, setpoextend]=useState('');\r\n    const [intreceived, setintreceived]=useState('');\r\n    const [totrevenue, settotrevenue]=useState('');\r\n    const [attrition, setattrition]=useState('');\r\n    const [feedbackpending, setfeedbackpending]=useState('');\r\n    const [noshow, setnoshow]=useState([]);\r\n    const [remark, setremark]=useState('');\r\n    const [offer, setoffer]=useState('');\r\n\r\n    \r\n\r\n    \r\n  \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const reqBody ={\r\n            months:months,\r\n            years:years,\r\n            bd:bd,\r\n            join:join,\r\n            client:client,\r\n            position:position,\r\n            passthrough:passthrough,\r\n            business:business,\r\n            bulkdeal:bulkdeal,\r\n            submission:submission,\r\n            poextend:poextend,\r\n            intreceived:intreceived,\r\n            totrevenue:totrevenue,\r\n            attrition:attrition,\r\n            feedbackpending:feedbackpending,\r\n            noshow:noshow,\r\n            remark:remark,\r\n            offer:offer,\r\n        };\r\n        dispatch(setMonth(reqBody));\r\n    }\r\n   const  getDropList = () => {\r\n        const year = new Date().getFullYear();\r\n      return (\r\n          Array.from( new Array(50), (v,i) =>\r\n            <option key={i} value={year+i}>{year+i}</option>\r\n        )\r\n      );\r\n    };\r\n    let clientList = useSelector((state) => state.Client.clients || []);\r\n    useEffect( () => {\r\n        dispatch(getClientList());\r\n    \r\n        // eslint-disable-next-line\r\n      }, [] );\r\n      const [selectMonth] = React.useState([\r\n        { label: 'January', value: 'January'},\r\n        { label: 'February', value: 'February' },\r\n        { label: 'March', value: 'March' },\r\n        { label: 'April', value: 'April' },\r\n        { label: 'May', value: 'May' },\r\n        { label: 'June', value: 'June' },\r\n        { label: 'July', value: 'July' },\r\n        { label: 'August', value: 'August' },\r\n        { label: 'September', value: 'September' },\r\n        { label: 'October', value: 'October' },\r\n        { label: 'November', value: 'November' },\r\n        { label: 'December', value: 'December' },\r\n\r\n    ]);\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Form onSubmit={handleSubmit}>\r\n                                <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Select Month <span className=\"redspan\">*</span></Label>\r\n                                    <select className=\"form-control style-input\" required\r\n                                   name=\"months\" id=\"months\" onChange={(e) => {\r\n                                    setmonths (e.target.value);\r\n                                }}>\r\n                                     <option disabled selected value=\"\">Select</option>\r\n                                {selectMonth.map((setmonth) => (\r\n                                    <option key={setmonth.value} value={setmonth.value}>\r\n                                        {setmonth.label}\r\n                                    </option>\r\n                                ))}\r\n                                   </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Select Year <span className=\"redspan\">*</span></Label>\r\n                                    <select className=\"form-control style-input\" required\r\n                                   name=\"years\" id=\"years\" onChange={(e) => {\r\n                                    setyears (e.target.value);\r\n                                }}>\r\n                                     <option disabled selected value=\"\">Select</option>\r\n                                     {getDropList()}\r\n                                   </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">BD</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"bd\"\r\n                                        name=\"bd\" onChange={(e) => {\r\n                                            setbd (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-3\">\r\n                        <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Select Client <span className=\"redspan\">*</span></Label>\r\n                                    <select className=\"form-control style-input\" required\r\n                                   name=\"client\" id=\"client\" onChange={(e) => {\r\n                                    setclient (e.target.value);\r\n                                }}>\r\n                                     <option disabled selected value=\"\">Select</option>\r\n                                     {clientList.map((client) => (\r\n                                    <option key={client.cid} value={client.cid}>\r\n                                        {client.cname}\r\n                                    </option>\r\n                                ))}\r\n                                   </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                           \r\n                        <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Join</Label>\r\n                                    <Input\r\n                                        type=\"text\" \r\n                                        className=\"style-input\"\r\n                                        id=\"join\"\r\n                                        name=\"join\" onChange={(e) => {\r\n                                            setjoin (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                       \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Open Position </Label>\r\n                                    <Input\r\n                                        type=\"text\"  \r\n                                        className=\"style-input\"\r\n                                        id=\"position\"\r\n                                        name=\"position\" onChange={(e) => {\r\n                                            setposition (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col> \r\n                            </Row>\r\n                        <Row className=\"mt-3\">\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Passthrough</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"passthrough\"\r\n                                        name=\"passthrough\" onChange={(e) => {\r\n                                            setpassthrough (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                       \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Business Recieved</Label>\r\n                                    <Input\r\n                                        type=\"text\" \r\n                                        className=\"style-input\"\r\n                                        id=\"business\"\r\n                                        name=\"business\" onChange={(e) => {\r\n                                            setbusiness (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Bulkdeal</Label>\r\n                                    <Input\r\n                                        type=\"text\" \r\n                                        className=\"style-input\"\r\n                                        id=\"bulkdeal\"\r\n                                        name=\"bulkdeal\" onChange={(e) => {\r\n                                            setbulkdeal (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-3\">\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">No. Of Submission </Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"submission\"\r\n                                        name=\"submission\" onChange={(e) => {\r\n                                            setsubmission (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                           \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">PO Extend </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"poextend\"\r\n                                        name=\"poextend\" onChange={(e) => {\r\n                                            setpoextend (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                       \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Interview Recieved</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"intreceived\"\r\n                                        className=\"style-input\"\r\n                                        name=\"intreceived\" onChange={(e) => {\r\n                                            setintreceived (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            </Row>\r\n                        <Row className=\"mt-3\">\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Attrition Saved</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"attrition\"\r\n                                        name=\"attrition\" onChange={(e) => {\r\n                                            setattrition (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                       \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Feedback Pending</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"feedbackpending\"\r\n                                        className=\"style-input\"\r\n                                        name=\"feedbackpending\" onChange={(e) => {\r\n                                            setfeedbackpending (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Total Revenue</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"totrevenue\"\r\n                                        name=\"totrevenue\" onChange={(e) => {\r\n                                            settotrevenue (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            </Row>\r\n                        <Row className=\"mt-3\">\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">No Show</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"noshow\"\r\n                                        className=\"style-input\"\r\n                                        name=\"noshow\" onChange={(e) => {\r\n                                            setnoshow (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                          \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Remark</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"remark\"\r\n                                        name=\"remark\" onChange={(e) => {\r\n                                            setremark (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                       \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Offer</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"offer\"\r\n                                        className=\"style-input\"\r\n                                        name=\"offer\" onChange={(e) => {\r\n                                            setoffer (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={12}>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                            <button className=\"btn btn-secondary ml-3\">Cancel</button>\r\n                            </Col>\r\n                        </Row>\r\n                        </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddMonthReport;\r\n\r\n\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport { getMonthList } from '../../../redux/salesmonthreport/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n//import * as FeatherIcon from 'react-feather';\r\n\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                    \r\n                            </Row>\r\n                            <div class=\"table-responsive\">\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewMonthReport = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n    let records = useSelector((state) => state.SalesMonthReport.months || []);\r\n  // console.log(records, 'join list');\r\n    useEffect(() => {\r\n        dispatch(getMonthList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'name',\r\n            text: 'Sales Name',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'months',\r\n            text: 'Month',\r\n        },\r\n        {\r\n            dataField: 'years',\r\n            text: 'Year',\r\n        },\r\n        {\r\n            dataField: 'client',\r\n            text: 'Client',\r\n        },\r\n        {\r\n            dataField: 'position',\r\n            text: 'Open Position',\r\n        },\r\n        {\r\n            dataField: 'business',\r\n            text: 'Business Recieved',\r\n        },\r\n        {\r\n            dataField: 'submission',\r\n            text: 'Submissions',\r\n        },\r\n        {\r\n            dataField: 'intreceived',\r\n            text: 'Interview Recieved',\r\n        },\r\n        {\r\n            dataField: 'feedbackpending',\r\n            text: 'Feedback Pending',\r\n        },\r\n        {\r\n            dataField: 'noshow',\r\n            text: 'No Show',\r\n        },\r\n        {\r\n            dataField: 'offer',\r\n            text: 'Offer',\r\n        },\r\n        {\r\n            dataField: 'bd',\r\n            text: 'BD',\r\n        },\r\n        {\r\n            dataField: 'join',\r\n            text: 'Join',\r\n        },\r\n        {\r\n            dataField: 'passthrough',\r\n            text: 'Pass Trough',\r\n        },\r\n        {\r\n            dataField: 'bulkdeal',\r\n            text: 'Bulk Deal',\r\n        },\r\n        {\r\n            dataField: 'poextend',\r\n            text: 'PO Extend',\r\n        },\r\n        {\r\n            dataField: 'attrition',\r\n            text: 'Attrition Saved',\r\n        },\r\n        {\r\n            dataField: 'totrevenue',\r\n            text: 'Total Revenue',\r\n        },\r\n        {\r\n            dataField: 'remark',\r\n            text: 'Remark',\r\n        },\r\n    ]\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewMonthReport;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink} from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport AddMonthReport from './AddMonthReport';\r\nimport ViewMonthReport from './ViewMonthReport';\r\n\r\nconst MonthReportNav = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Nav tabs className=\"second-level-tab nav nav-tabs justify-content-end\">\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Add Month Report\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            View Month Report\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <AddMonthReport/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <ViewMonthReport/> \r\n        </TabPane>\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MonthReportNav;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, FormGroup, Form, Label, Input} from 'reactstrap';\r\nimport { getClientList } from '../../../redux/client/actions';\r\nimport { setRevenue } from '../../../redux/salesrevenue/actions';\r\n//import axios from 'axios';\r\n// import Select from 'react-select';\r\nconst AddRevenuReport = () => { \r\n    const dispatch = useDispatch();\r\n    const [srmonth, setsrmonth]=useState([]);\r\n    const [srattrition, setsrattrition]=useState('');\r\n    const [srbd, setsrbd]=useState('');\r\n    const [srclient, setsrclient]=useState('');\r\n    const [srtotgp, setsrtotgp]=useState('');\r\n    const [sractualstart, setsractualstart]=useState('');\r\n    const [sravggpadded, setsravggpadded]=useState('');\r\n    const [srnettotgp, setsrnettotgp]=useState('');\r\n    const [srstart, setsrstart]=useState('');\r\n    const [srnettotgpadded, setsrnettotgpadded]=useState('');\r\n   // const [srmargintype,setsrmargintype]=useState('');\r\n    const [srtypeofemployement, setsrtypeofemployement]=useState('');\r\n    \r\n\r\n    \r\n  \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const reqBody ={\r\n            srmonth:srmonth,\r\n            srattrition:srattrition,\r\n            srbd:srbd,\r\n            srclient:srclient,\r\n            srtotgp:srtotgp,\r\n            sractualstart:sractualstart,\r\n            sravggpadded:sravggpadded,\r\n            srnettotgp:srnettotgp,\r\n            srstart:srstart,\r\n            srnettotgpadded:srnettotgpadded,\r\n           // srmargintype:srmargintype,\r\n            srtypeofemployement:srtypeofemployement\r\n        };\r\n        dispatch(setRevenue(reqBody));\r\n    }\r\n    const [selectMonth] = React.useState([\r\n        { label: 'January', value: 'January'},\r\n        { label: 'February', value: 'February' },\r\n        { label: 'March', value: 'March' },\r\n        { label: 'April', value: 'April' },\r\n        { label: 'May', value: 'May' },\r\n        { label: 'June', value: 'June' },\r\n        { label: 'July', value: 'July' },\r\n        { label: 'August', value: 'August' },\r\n        { label: 'September', value: 'September' },\r\n        { label: 'October', value: 'October' },\r\n        { label: 'November', value: 'November' },\r\n        { label: 'December', value: 'December' },\r\n\r\n    ]);\r\n   \r\n    let clientList = useSelector((state) => state.Client.clients || []);\r\n    useEffect( () => {\r\n        dispatch(getClientList());\r\n    \r\n        // eslint-disable-next-line\r\n      }, [] );\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Form onSubmit={handleSubmit}>\r\n                                <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Select Month <span className=\"redspan\">*</span></Label>\r\n                                    <select className=\"form-control style-input\" required\r\n                                   name=\"srmonth\" id=\"srmonth\" onChange={(e) => {\r\n                                    setsrmonth (e.target.value);\r\n                                }}>\r\n                                     <option disabled selected value=\"\">Select</option>\r\n                                {selectMonth.map((selmonth) => (\r\n                                    <option key={selmonth.value} value={selmonth.value}>\r\n                                        {selmonth.label}\r\n                                    </option>\r\n                                ))}\r\n                                   </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Attrition</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"srattrition\"\r\n                                        name=\"srattrition\" onChange={(e) => {\r\n                                            setsrattrition (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                       \r\n                        <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Select Client <span className=\"redspan\">*</span></Label>\r\n                                    <select className=\"form-control style-input\" required\r\n                                   name=\"srclient\" id=\"srclient\" onChange={(e) => {\r\n                                    setsrclient (e.target.value);\r\n                                }}>\r\n                                     <option disabled selected value=\"\">Select</option>\r\n                                     {clientList.map((client) => (\r\n                                    <option key={client.cid} value={client.cid}>\r\n                                        {client.cname}\r\n                                    </option>\r\n                                ))}\r\n                                   </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            </Row>\r\n                        <Row className=\"mt-3\">\r\n                        <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">BD </Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"srbd\"\r\n                                        name=\"srbd\" onChange={(e) => {\r\n                                            setsrbd (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Total GP </Label>\r\n                                    <Input\r\n                                        type=\"text\"  required\r\n                                        className=\"style-input\"\r\n                                        id=\"srtotgp\"\r\n                                        name=\"srtotgp\" onChange={(e) => {\r\n                                            setsrtotgp (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Actual Start</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"sractualstart\"\r\n                                        name=\"sractualstart\" onChange={(e) => {\r\n                                            setsractualstart (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"mt-3\">\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Avg GP Added <span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"sravggpadded\"\r\n                                        name=\"sravggpadded\" onChange={(e) => {\r\n                                            setsravggpadded (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Net Total GP </Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"srnettotgp\"\r\n                                        name=\"srnettotgp\" onChange={(e) => {\r\n                                            setsrnettotgp (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Start </Label>\r\n                                    <Input\r\n                                        type=\"date\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"srstart\"\r\n                                        name=\"srstart\" onChange={(e) => {\r\n                                            setsrstart (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-3\">\r\n                            {/* <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Total GP Added</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"srmargintype\"\r\n                                        className=\"style-input\"\r\n                                        name=\"srmargintype\" onChange={(e) => {\r\n                                            setsrmargintype (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col> */}\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Net Total GP Added </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"srnettotgpadded\"\r\n                                        name=\"srnettotgpadded\" onChange={(e) => {\r\n                                            setsrnettotgpadded (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                       \r\n                           \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Type Of Employement</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"srtypeofemployement\"\r\n                                        name=\"srtypeofemployement\" onChange={(e) => {\r\n                                            setsrtypeofemployement (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"mt-3\">\r\n                        <Col lg={12}>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                            <button className=\"btn btn-secondary ml-3\">Cancel</button>\r\n                            </Col>\r\n                        </Row>\r\n                        </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddRevenuReport;\r\n\r\n\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import * as FeatherIcon from 'react-feather';\r\nimport { getRevenueList } from '../../../redux/salesrevenue/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\n\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                    \r\n                            </Row>\r\n                            <div class=\"table-responsive\">\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewRevenuReport = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.SalesRevenue.revenues);\r\n  // console.log(records, 'join list');\r\n    useEffect(() => {\r\n        dispatch(getRevenueList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField:'id',\r\n            text:'ID',\r\n            hidden: true\r\n        },\r\n        {\r\n            dataField: 'salesname',\r\n            text: 'Sales Name',\r\n            //sort: true,\r\n        },\r\n        {\r\n            dataField: 'month',\r\n            text: 'Month',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'year',\r\n            text: 'Year',\r\n        },\r\n        {\r\n            dataField: 'clientname',\r\n            text: 'Client',\r\n        },\r\n        {\r\n            dataField: 'currenthc',\r\n            text: 'Current HC',\r\n        },\r\n        {\r\n            dataField: 'totalgp',\r\n            text: 'Total GP',\r\n        },\r\n        {\r\n            dataField: 'averagegp',\r\n            text: 'Total Avg. GP Add',\r\n        },\r\n        {\r\n            dataField: 'start',\r\n            text: 'Start',\r\n        },\r\n        {\r\n            dataField: 'attrition',\r\n            text: 'Attrition',\r\n        },\r\n        {\r\n            dataField: 'bd',\r\n            text: 'BD',\r\n        },\r\n        {\r\n            dataField: 'actualstart',\r\n            text: 'Actual Start',\r\n        },\r\n        {\r\n            dataField: 'nettotalgp',\r\n            text: 'Net Total GP',\r\n        },\r\n        {\r\n            dataField: 'nettotalgpadded',\r\n            text: 'Net Total GP Add',\r\n        },\r\n        {\r\n            dataField: 'typeofemployment',\r\n            text: 'Type Of Employement',\r\n        },\r\n    ]\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewRevenuReport;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink} from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport AddRevenuReport from './AddRevenuReport';\r\nimport ViewRevenuReport from './ViewRevenuReport';\r\n\r\nconst RevenueReportNav = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Nav tabs className=\"second-level-tab nav nav-tabs justify-content-end\">\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Add Revenue Report\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            View Revenue Report\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <AddRevenuReport/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <ViewRevenuReport/> \r\n        </TabPane>\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default RevenueReportNav;","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button,  Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport CallReportNav from './callreport/CallReportNav';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport MonthReportNav from './monthreport/MonthReportNav';\r\nimport RevenueReportNav from './revenuereport/RevenueReportNav';\r\nconst Sales = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"page-title\">\r\n                <Col md={6}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Sales', path: '/sales', active: true },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"text-right\">\r\n                <Button color=\"primary\"><i className=\"uil uil-plus\"></i>ADD ITEM</Button>\r\n                </Col>\r\n            </Row>\r\n      <Nav tabs className=\"requirement-tab pt-3 pb-3 nav nav-tabs row bg-white\">\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Revenue\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Month Report\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Call Report \r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <RevenueReportNav/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <MonthReportNav/>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n         <CallReportNav/>\r\n        </TabPane >\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Sales;"],"sourceRoot":""}