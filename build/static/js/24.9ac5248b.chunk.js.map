{"version":3,"sources":["pages/dashboard/StatisticsWidget.js","pages/dashboard/Chart.js","pages/dashboard/TodayDashbord.js","pages/dashboard/Dashboard.js"],"names":["StatisticsWidget","props","Card","className","classNames","bgClass","CardBody","title","description","footerPara","footdesc","LineChart","options","chart","height","type","zoom","enabled","toolbar","show","colors","tooltip","theme","x","dataLabels","stroke","width","curve","text","align","style","fontSize","grid","row","opacity","borderColor","markers","size","xaxis","categories","yaxis","min","max","legend","position","horizontalAlign","floating","offsetY","offsetX","responsive","breakpoint","series","name","data","TodayDashbord","Fragment","Row","Col","md","xl","Chart","Dashboard","useState","activeTab","setActiveTab","toggle","tab","PageTitle","breadCrumbItems","label","path","active","Button","color","Nav","tabs","NavItem","NavLink","classnames","onClick","TabContent","TabPane","tabId","sm","body","CardTitle","CardText"],"mappings":"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","file":"static/js/24.9ac5248b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardBody } from 'reactstrap';\r\nimport classNames from 'classnames';\r\n\r\nconst StatisticsWidget = (props) => {\r\n\r\n    //const Icon = props.icon;\r\n\r\n    return (\r\n        <Card className={classNames(\"gray-brd\", props.bgClass)}>\r\n            <CardBody className=\"pb-2\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h2 className=\"mb-0 text-primary font-weight-normal\">{props.title}</h2>\r\n                        <span className=\"text-muted font-size-14\">{props.description}</span>\r\n                    </div>\r\n                    </div>\r\n                    <div>\r\n                        <h2 className=\"mb-0 text-primary\">{props.footerPara}</h2>\r\n                        <span className=\"text-muted font-size-14\">{props.footdesc}</span>\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default StatisticsWidget;\r\n","// @flow\r\nimport React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { Card, CardBody } from 'reactstrap';\r\n\r\n// simple line chart\r\nconst LineChart = () => {\r\n    const apexLineChartWithLables = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'line',\r\n            zoom: {\r\n                enabled: false,\r\n            },\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        colors: ['#5369f8', '#43d39e', '#f77e53', '#1ce1ac', '#25c2e3', '#ffbe0b'],\r\n        tooltip: {\r\n            theme: 'dark',\r\n            x: { show: false }\r\n        },\r\n        dataLabels: {\r\n            enabled: true,\r\n        },\r\n        stroke: {\r\n            width: [3, 3],\r\n            curve: 'smooth',\r\n        },\r\n        title: {\r\n            text: 'Monthly Revenue',\r\n            align: 'left',\r\n            style: {\r\n                fontSize: '14px',\r\n            },\r\n        },\r\n        grid: {\r\n            row: {\r\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\r\n                opacity: 0.2,\r\n            },\r\n            borderColor: '#f1f3fa',\r\n        },\r\n        markers: {\r\n            style: 'inverted',\r\n            size: 6,\r\n        },\r\n        xaxis: {\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n            title: {\r\n                text: 'Ultima actualization hace 15 min',\r\n            },\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: 'Temperature',\r\n            },\r\n            min: 5,\r\n            max: 40,\r\n        },\r\n        legend: {\r\n            position: 'top',\r\n            horizontalAlign: 'right',\r\n            floating: true,\r\n            offsetY: -25,\r\n            offsetX: -5,\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 600,\r\n                options: {\r\n                    chart: {\r\n                        toolbar: {\r\n                            show: false,\r\n                        },\r\n                    },\r\n                    legend: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    const apexLineChartWithLablesData = [\r\n        {\r\n            name: 'High - 2018',\r\n            data: [28, 29, 33, 36, 32, 32, 33],\r\n        },\r\n        {\r\n            name: 'Low - 2018',\r\n            data: [12, 11, 14, 18, 17, 13, 13],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Card className=\"gray-brd\">\r\n            <CardBody>\r\n                <h4 className=\"header-title mt-0 mb-3\">Revenue</h4>\r\n                <Chart\r\n                    options={apexLineChartWithLables}\r\n                    series={apexLineChartWithLablesData}\r\n                    type=\"line\"\r\n                    className=\"apex-charts\"\r\n                />\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default LineChart;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n//import * as FeatherIcon from 'react-feather';\r\nimport StatisticsWidget from './StatisticsWidget';\r\n//import ApplicationList from './ApplicationList';\r\nimport Chart from './Chart'\r\nconst TodayDashbord = () => {\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Row>\r\n            <Col md={6} xl={3}>\r\n                <StatisticsWidget description=\"Submission\" title=\"1500\" footerPara=\"50% \" footdesc=\"Submission to Interview\" ></StatisticsWidget> \r\n            </Col>\r\n            <Col md={6} xl={3}>\r\n                <StatisticsWidget description=\"Interview\" title=\"900\" footerPara=\"50% \" footdesc=\"Submission to Offer\" ></StatisticsWidget> \r\n            </Col>\r\n            <Col md={6} xl={3}>\r\n                 <StatisticsWidget description=\"Offer\" title=\"500\" footerPara=\"50% \" footdesc=\"Submission to Hire\" ></StatisticsWidget> \r\n            </Col>\r\n            <Col md={6} xl={3}>\r\n                 <StatisticsWidget description=\"Hire\" title=\"100\" footerPara=\"50%\" footdesc=\"Pending Approval\"  ></StatisticsWidget> \r\n            </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12} xl={12}>\r\n                    <Chart/> \r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TodayDashbord;\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport PageTitle from '../../components/PageTitle';\r\n//import HomeTopbar from '../../components/HomeTopbar';\r\nimport TodayDashboard from './TodayDashbord';\r\nconst Dashboard = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <Row className=\"page-title\">\r\n                <Col md={6}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Dashboard', path: '/Dashboard/Home', active: true },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"text-right\">\r\n                <Button color=\"primary\"><i className=\"uil uil-plus\"></i>ADD ITEM</Button>\r\n                </Col>\r\n            </Row>\r\n      <Nav tabs className=\"mt-2 dash-tab\">\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n           Today\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Yesterday\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            This Week\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '4' })}\r\n            onClick={() => { toggle('4'); }}\r\n          >\r\n            This Month\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '5' })}\r\n            onClick={() => { toggle('5'); }}\r\n          >\r\n            Till Date\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '6' })}\r\n            onClick={() => { toggle('6'); }}\r\n          >\r\n            General\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n            <TodayDashboard/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n          <Row>\r\n            <Col sm=\"6\">\r\n              <Card body>\r\n                <CardTitle>Special Title Treatment</CardTitle>\r\n                <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\r\n                <Button>Go somewhere</Button>\r\n              </Card>\r\n            </Col>           \r\n          </Row>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n          <Row>\r\n            <Col sm=\"6\">\r\n              <Card body>\r\n                <CardTitle>3 Special Title Treatment</CardTitle>\r\n                <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\r\n                <Button>Go somewhere</Button>\r\n              </Card>\r\n            </Col>           \r\n          </Row>\r\n        </TabPane>\r\n        <TabPane tabId=\"4\">\r\n          <Row>\r\n            <Col sm=\"6\">\r\n              <Card body>\r\n                <CardTitle>4 Special Title Treatment</CardTitle>\r\n                <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\r\n                <Button>Go somewhere</Button>\r\n              </Card>\r\n            </Col>           \r\n          </Row>\r\n        </TabPane>\r\n        <TabPane tabId=\"5\">\r\n          <Row>\r\n            <Col sm=\"6\">\r\n              <Card body>\r\n                <CardTitle>5 Special Title Treatment</CardTitle>\r\n                <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\r\n                <Button>Go somewhere</Button>\r\n              </Card>\r\n            </Col>           \r\n          </Row>\r\n        </TabPane>\r\n        <TabPane tabId=\"6\">\r\n          <Row>\r\n            <Col sm=\"6\">\r\n              <Card body>\r\n                <CardTitle>6 Special Title Treatment</CardTitle>\r\n                <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\r\n                <Button>Go somewhere</Button>\r\n              </Card>\r\n            </Col>           \r\n          </Row>\r\n        </TabPane>\r\n      </TabContent>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default Dashboard;"],"sourceRoot":""}