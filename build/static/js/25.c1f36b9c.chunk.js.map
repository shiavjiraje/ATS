{"version":3,"sources":["pages/list/ViewOffer.js","pages/list/JoinList.js","pages/list/ViewToBeJoin.js","pages/list/ViewBD.js","pages/list/List.js"],"names":["defaultSorted","dataField","order","ExportCSVButton","CSVExport","sizePerPageRenderer","options","currSizePerPage","onSizePerPageChange","Fragment","className","Input","type","name","id","defaultValue","onChange","e","target","value","map","option","idx","key","text","TableWithSearch","props","SearchBar","Search","NoDataIndication","bootstrap4","keyField","data","records","columns","search","Row","Col","md","searchProps","UncontrolledDropdown","DropdownToggle","data-toggle","tag","DropdownMenu","right","csvProps","baseProps","bordered","noDataIndication","pagination","paginationFactory","sizePerPage","sizePerPageList","length","ViewOffer","dispatch","useDispatch","useSelector","state","List","offer","useEffect","getOfferList","useState","rowData","setrowData","rowEvent","onDoubleClick","row","alert","console","log","rowEvents","JoinList","joinlist","getJoinList","ViewToBeJoin","viewtobejoin","getViewToBeJoinList","formatter","cellContent","onClick","onEditPost","title","ViewBd","bdlist","getBDList","activeTab","setActiveTab","toggle","tab","PageTitle","breadCrumbItems","label","path","active","Button","color","Nav","tabs","NavItem","NavLink","classnames","TabContent","TabPane","tabId"],"mappings":"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","file":"static/js/25.c1f36b9c.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search,CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getOfferList } from '../../redux/list/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\nconst { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n   // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getViewOfferModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                <UncontrolledDropdown className=\" profile-dropdown-menu\">\r\n                <DropdownToggle\r\n                    data-toggle=\"dropdown\"\r\n                    tag=\"button\"\r\n                    className=\"btn btn-secondary dropdown-toggle bg-secondary  mr-0\">\r\n                    Download <FeatherIcon.ChevronDown />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"topbar-dropdown-menu profile-dropdown-items\">\r\n                    <div className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                    </div>\r\n                    {/* <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export PDF</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export EXCEL</ExportCSVButton>\r\n                    </div> */}\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n                                {/* <ExportCSVButton className=\"btn-primary\" { ...props.csvProps }>Export CSV!!</ExportCSVButton> */}\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewOffer = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.List.offer);\r\n   //console.log(records)\r\n    useEffect(() => {\r\n        dispatch(getOfferList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'd.R_Name',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'e.J_Client_Id',\r\n            text:\"Client\"\r\n        },\r\n        {\r\n            dataField: 'e.J_Skill',\r\n            text: 'Skill',\r\n        },\r\n        {\r\n            dataField: 'e.J_Location',\r\n            text: 'Location',\r\n        },\r\n        {\r\n            dataField: 'c.O_Sel_Date',\r\n            text: 'Select Date',\r\n        },\r\n        {\r\n            dataField: 'c.O_Off_Date',\r\n            text: 'Oferr Date',\r\n        },\r\n        {\r\n            dataField: 'c.O_Join_Date',\r\n            text: 'Start Date',\r\n        },\r\n        {\r\n            dataField: 'g.E_Fullname',\r\n            text: 'Recruiter',\r\n            \r\n        },  \r\n        {\r\n            dataField: 'c.O_Status',\r\n            text: 'Status',\r\n        }\r\n    ];\r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewOffer;\r\n\r\n\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search,CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getJoinList } from '../../redux/list/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\n\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\nconst { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                <UncontrolledDropdown className=\" profile-dropdown-menu\">\r\n                <DropdownToggle\r\n                    data-toggle=\"dropdown\"\r\n                    tag=\"button\"\r\n                    className=\"btn btn-secondary dropdown-toggle bg-secondary  mr-0\">\r\n                    Dropdown <FeatherIcon.ChevronDown />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"topbar-dropdown-menu profile-dropdown-items\">\r\n                    <div className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                    </div>\r\n                    {/* <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export PDF</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export EXCEL</ExportCSVButton>\r\n                    </div> */}\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n                                {/* <ExportCSVButton className=\"btn-primary\" { ...props.csvProps }>Export CSV!!</ExportCSVButton> */}\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst JoinList = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.List.joinlist);\r\n  // console.log(records, 'join list');\r\n    useEffect(() => {\r\n        dispatch(getJoinList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'd.R_Name',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'e.J_Client_Id',\r\n            text:\"Client\"\r\n        },\r\n        {\r\n            dataField: 'e.J_Skill',\r\n            text: 'Skill',\r\n        },\r\n        {\r\n            dataField: 'e.J_Location',\r\n            text: 'Location',\r\n        },\r\n        {\r\n            dataField: 'c.O_Sel_Date',\r\n            text: 'Select Date',\r\n        },\r\n        {\r\n            dataField: 'c.O_Off_Date',\r\n            text: 'Oferr Date',\r\n        },\r\n        {\r\n            dataField: 'c.O_Join_Date',\r\n            text: 'Start Date',\r\n        },\r\n        {\r\n            dataField: 'g.E_Fullname',\r\n            text: 'Recruiter',\r\n            \r\n        },  \r\n        {\r\n            dataField: 'c.O_Status',\r\n            text: 'Status',\r\n        }\r\n    ];\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default JoinList;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search,CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getViewToBeJoinList } from '../../redux/list/actions';\r\nimport { Link } from 'react-router-dom';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\nconst { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getViewToBeJoinModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                <UncontrolledDropdown className=\" profile-dropdown-menu\">\r\n                <DropdownToggle\r\n                    data-toggle=\"dropdown\"\r\n                    tag=\"button\"\r\n                    className=\"btn btn-secondary dropdown-toggle bg-secondary  mr-0\">\r\n                    Download <FeatherIcon.ChevronDown />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"topbar-dropdown-menu profile-dropdown-items\">\r\n                    <div className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                    </div>\r\n                    {/* <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export PDF</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export EXCEL</ExportCSVButton>\r\n                    </div> */}\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n                                {/* <ExportCSVButton className=\"btn-primary\" { ...props.csvProps }>Export CSV!!</ExportCSVButton> */}\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                //rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewToBeJoin = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.List.viewtobejoin);\r\n   //console.log(records, 'view to be join')\r\n    useEffect(() => {\r\n        dispatch(getViewToBeJoinList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'name',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'client',\r\n            text:\"Client\"\r\n        },\r\n        {\r\n            dataField: 'skill',\r\n            text: 'Skill',\r\n        },\r\n        {\r\n            dataField: 'location',\r\n            text: 'Location',\r\n        },\r\n        {\r\n            dataField: 'seldate',\r\n            text: 'Select Date',\r\n        },\r\n        {\r\n            dataField: 'offdate',\r\n            text: 'Oferr Date',\r\n        },\r\n        {\r\n            dataField: 'joindate',\r\n            text: 'Start Date',\r\n        },\r\n        {\r\n            dataField: 'recruitername',\r\n            text: 'Recruiter',\r\n            \r\n        },  \r\n        {\r\n            dataField: 'status',\r\n            text: 'Status',\r\n        },\r\n        {\r\n            dataField: 'cstatus',\r\n            text: 'Change Status',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.id;\r\n                return (\r\n                  <Link\r\n                    onClick={() => onEditPost(row.id)}\r\n                    title=\"Change Status\"\r\n                  >\r\n                    Change Status\r\n                  </Link>\r\n                );\r\n              },\r\n        }\r\n    ];\r\n \r\n const onEditPost=()=>{\r\n    console.log('clicked');\r\n }\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewToBeJoin;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search,CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getBDList } from '../../redux/list/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\nconst { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getJoinListModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                <UncontrolledDropdown className=\" profile-dropdown-menu\">\r\n                <DropdownToggle\r\n                    data-toggle=\"dropdown\"\r\n                    tag=\"button\"\r\n                    className=\"btn btn-secondary dropdown-toggle bg-secondary  mr-0\">\r\n                    Dropdown <FeatherIcon.ChevronDown />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"topbar-dropdown-menu profile-dropdown-items\">\r\n                    <div className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                    </div>\r\n                    {/* <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export PDF</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export EXCEL</ExportCSVButton>\r\n                    </div> */}\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n                                {/* <ExportCSVButton className=\"btn-primary\" { ...props.csvProps }>Export CSV!!</ExportCSVButton> */}\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewBd = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.List.bdlist);\r\n    useEffect(() => {\r\n        dispatch(getBDList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'd.R_Name',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'e.J_Client_Id',\r\n            text:\"Client\"\r\n        },\r\n        {\r\n            dataField: 'e.J_Skill',\r\n            text: 'Skill',\r\n        },\r\n        {\r\n            dataField: 'e.J_Location',\r\n            text: 'Location',\r\n        },\r\n        {\r\n            dataField: 'c.O_Sel_Date',\r\n            text: 'Select Date',\r\n        },\r\n        {\r\n            dataField: 'c.O_Off_Date',\r\n            text: 'Oferr Date',\r\n        },\r\n        {\r\n            dataField: 'c.O_Join_Date',\r\n            text: 'Start Date',\r\n        },\r\n        {\r\n            dataField: 'g.E_Fullname',\r\n            text: 'Recruiter',\r\n            \r\n        },  \r\n        {\r\n            dataField: 'c.O_Status',\r\n            text: 'Status',\r\n        }\r\n    ];\r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewBd;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button,  Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport ViewOffer from './ViewOffer';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport JoinList from './JoinList';\r\nimport ViewToBeJoin from './ViewToBeJoin';\r\nimport ViewBd from './ViewBD';\r\nconst List = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"page-title\">\r\n                <Col md={6}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'List', path: '/list', active: true },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"text-right\">\r\n                <Button color=\"primary\"><i className=\"uil uil-plus\"></i>ADD ITEM</Button>\r\n                </Col>\r\n            </Row>\r\n      <Nav tabs className=\"requirement-tab pt-3 pb-3 nav nav-tabs row bg-white\">\r\n        <NavItem className=\"col-sm-3\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            View Offer\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-3\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            View to be Join\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-3\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Join List\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-3\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '4' })}\r\n            onClick={() => { toggle('4'); }}\r\n          >\r\n            View BD\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <ViewOffer/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <ViewToBeJoin/>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n          <JoinList/>\r\n        </TabPane >\r\n        <TabPane tabId=\"4\">\r\n          <ViewBd/>\r\n        </TabPane >\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default List;"],"sourceRoot":""}