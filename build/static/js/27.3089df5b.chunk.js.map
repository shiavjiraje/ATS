{"version":3,"sources":["pages/requirement/AddRequirement.js","pages/requirement/EditRequirementmodal.js","pages/requirement/ShowRequirement.js","pages/requirement/ResumeUpload.js","pages/requirement/SetInterview.js","pages/requirement/SetOffer.js","pages/requirement/ViewRequirement.js","pages/requirement/ShowRequirementCritical.js","pages/requirement/CriticalRequirement.js","pages/requirement/Requirement.js"],"names":["AddRequirement","props","useState","jclientPost","setJclient","jobcodePost","setJobcode","jskillPost","setJskill","jpositionPost","setJposition","jlocationPost","setJlocation","jendclientPost","setJendClient","jtotminPost","setJtoMin","jtotmaxPost","setJtoMax","jrelminPost","setJelMin","jrelmaxPost","setJelMax","jbillratePost","setBillRate","jpayratePost","setPayRate","jpocnoPost","setJpocNo","jmandatoryskillPost","setJmandatoryskill","jjdPost","setJobDesc","jcreatedbyPost","setJcreatedby","jcategoryPost","setJcategory","jtypePost","setJtype","jemptypePost","setJemployementtyp","selectedValue","setSelectedValue","clientList","useSelector","state","Client","clients","recruterList","Recruiter","recruiters","dispatch","useDispatch","useEffect","getClientList","getRecruiterList","cleanForm","alert","React","label","value","selectCatagory","selectReqType","selectEmpType","Fragment","onSubmit","e","preventDefault","reqBody","jclientid","jobcode","jskill","jposition","jlocation","jendclient","jtotmin","jtotmax","jrelmin","jrelmax","jbillrate","jpayrate","jpocno","jmandatoryskill","jjd","jcategory","jtype","jemployementtyp","jassignuser","jcreatedby","axios","post","then","response","console","log","swal","catch","error","Row","Col","lg","type","onChange","target","name","FormGroup","Label","for","className","required","i","disabled","selected","map","client","key","cid","cname","catagory","reqtype","emptype","rows","options","onSelect","selectedList","selectedItem","x","EFullname","onRemove","removedItem","displayValue","showCheckbox","EditRequirementmodal","row","modal","Requirements","requirmentStore","requirement","setRequirement","handleChange","toggle","actions","Modal","isOpen","size","ModalHeader","ModalBody","Form","Input","id","ModalFooter","Button","color","onClick","urlpattern","config","baseUrl","defaultSorted","dataField","order","sizePerPageRenderer","currSizePerPage","onSizePerPageChange","defaultValue","option","idx","text","TableWithSearch","SearchBar","Search","rowData","setrowData","rowEvent","onDoubleClick","NoDataIndication","bootstrap4","keyField","data","records","columns","search","md","searchProps","baseProps","bordered","rowEvents","noDataIndication","pagination","paginationFactory","sizePerPage","sizePerPageList","length","ShowRequirementCritical","getAllRequirementMaster","requireData","setrequireData","loginDetails","Auth","user","showrdt","viewSingleRequirement","require","getUsername","Username","setjid","jid","method","url","headers","JSON","stringify","newrequireData","Data","sort","formatter","cellContent","title","goBackToRequirement","jclientname","jpoc","ResumeUpload","c","R_Status","interviewid","R_Id","candidatename","R_Name","setinterviewid","setinterviewname","changeResumeUploadStatus","resid","acceptresume","rejectresume","setModal","status","setstatus","interviewname","interviewdate","setinterviewdate","interviewtime","setinterviewtime","interviewby","setinterviewby","interviewlocation","setinterviewlocation","interviewnote","setinterviewnote","file","setFile","handleSubmit","a","formData","FormData","append","fetch","body","json","result","Message","files","resumeid","requirementid","username","SetInterview","iid","changeInterViewStatus","cfid","SetOffer","offerId","offerid","setofferId","changeOfferViewStatus","ExportCSVButton","CSVExport","UncontrolledDropdown","DropdownToggle","data-toggle","tag","DropdownMenu","right","csvProps","wrapperClasses","ViewRequirement","requirements","getRequirementList","uploadFile","res","activeTab","setActiveTab","tab","showrequrement","setshowrequrement","setviewSingleRequirement","showRequrementDetails","headerStyle","colum","colIndex","width","newjid","toggle2","showActionStatus","toggle3","newsumdeta","setsummarydetails","setsummarydeatailsmodal","showResumeUploadtDetails","showSetInterviewDetails","showSetOfferDetails","setSaveRequirement","getRequirementModal","_validateFunction","modal2","setModal2","handleSubmitAction","modal3","setModal3","summarydetails","setsumrymodal","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","sm","ShowRequirement","submission","interview","offer","start","bd","J_Code","d","C_Name","J_Skill","J_Position","J_Location","J_EndClient","J_Tot_Max_Exp","J_Tot_Min_Exp","J_Rel_Max_Exp","J_Rel_Min_Exp","C_Category","C_Type","J_Employment_Type","J_POC","J_AssignUser","J_MandatorySkill","J_JD","index","CriticalRequirement","criticalreq","getCriticalRequirementList","J_Id","Requirement","PageTitle","breadCrumbItems","path"],"mappings":"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","file":"static/js/27.3089df5b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'; \r\nimport { useSelector, useDispatch } from 'react-redux';\r\n//import { getRequirementList, setRequirement } from '../../redux/requirement/actions';\r\nimport { getClientList } from '../../redux/client/actions';\r\nimport { getRecruiterList } from '../../redux/recruiter/actions';\r\nimport { Row, Col, FormGroup,  Label } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport swal from 'sweetalert';\r\nconst AddRequirement = (props) => {\r\n    //const [jidPost, setJid] = useState('1000034');\r\n    const [jclientPost, setJclient] = useState([]);\r\n    const [jobcodePost, setJobcode] = useState('');\r\n    const [jskillPost, setJskill] = useState('');\r\n    const [jpositionPost, setJposition] = useState('');\r\n    const [jlocationPost, setJlocation] = useState([]);\r\n    const [jendclientPost, setJendClient] = useState('');\r\n    const [jtotminPost, setJtoMin] = useState('');\r\n    const [jtotmaxPost, setJtoMax] = useState('');\r\n    const [jrelminPost, setJelMin] = useState('');\r\n    const [jrelmaxPost, setJelMax] = useState('');\r\n    const [jbillratePost, setBillRate] = useState('');\r\n    const [jpayratePost, setPayRate] = useState('');\r\n    const [jpocnoPost, setJpocNo] = useState('');\r\n    const [jmandatoryskillPost, setJmandatoryskill] = useState('');\r\n    const [jjdPost, setJobDesc] = useState('');\r\n    const [jcreatedbyPost, setJcreatedby] = useState('');\r\n    \r\n    const [jcategoryPost, setJcategory] = useState([]);\r\n    const [jtypePost, setJtype] = useState([]);\r\n    const [jemptypePost, setJemployementtyp] = useState([]);\r\n    //const [jassignuserPost, setJassignuser] = useState([]);\r\n    const [selectedValue, setSelectedValue] = useState([]);\r\n\r\n    const onSelect=(selectedList, selectedItem)=> {\r\n        setSelectedValue(selectedList.map(x=>x.EFullname));\r\n    }\r\n    \r\n    const onRemove=(selectedList, removedItem)=> {\r\n        setSelectedValue(selectedList.map(x=>x.EFullname));\r\n    }\r\n\r\n    // const handleMultiChange = (e) => {\r\n    //     console.log(\"console EE\", e);\r\n    //     setSelectedValue(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    //     console.log(\"selected value\", selectedValue);\r\n    //   }\r\n    const handleRequirementForm = (e) => {\r\n        e.preventDefault();\r\n        let reqBody = {\r\n            //jid: jidPost,\r\n            jclientid: jclientPost,\r\n            jobcode: jobcodePost,\r\n            jskill: jskillPost,\r\n            jposition: jpositionPost,\r\n            jlocation: jlocationPost,\r\n            jendclient: jendclientPost,\r\n            jtotmin: jtotminPost,\r\n            jtotmax: jtotmaxPost,\r\n            jrelmin: jrelminPost,\r\n            jrelmax: jrelmaxPost,\r\n            jbillrate: jbillratePost,\r\n            jpayrate: jpayratePost,\r\n            jpocno: jpocnoPost,\r\n            jmandatoryskill: jmandatoryskillPost,\r\n            jjd: jjdPost,\r\n            jcategory: jcategoryPost,\r\n            jtype: jtypePost,\r\n            jemployementtyp: jemptypePost,\r\n            jassignuser: selectedValue,\r\n            jcreatedby:jcreatedbyPost\r\n        };\r\n       // console.log(reqBody);\r\n        axios\r\n            .post('http://144.48.250.235:98/api/Requirement_Master', reqBody)\r\n\r\n            .then((response) => {\r\n               console.log(response);\r\n               swal(\"Status Updated Successful\", \"success\");\r\n            }).catch(function (error) {\r\n                swal(error, \"error\");\r\n              });\r\n        cleanForm();\r\n    };\r\n\r\n    \r\n    \r\n    let clientList = useSelector((state) => state.Client.clients || []);\r\n    let recruterList = useSelector((state) => state.Recruiter.recruiters || []);\r\n    //console.log(\"recruter\", recruterList)\r\n    const dispatch = useDispatch();\r\n     useEffect(() => {\r\n        dispatch(getClientList());\r\n        dispatch(getRecruiterList());\r\n         // eslint-disable-next-line \r\n     }, []);\r\n    \r\n    \r\n    const cleanForm = () => {\r\n        alert();\r\n        //setJid('');\r\n        setJobcode('');\r\n        setJskill('');\r\n        setJposition('');\r\n        setJendClient('');\r\n        setJtoMin('');\r\n        setJtoMax('');\r\n        setJelMin('');\r\n        setJelMax('');\r\n        setBillRate('');\r\n        setPayRate('');\r\n        setJpocNo('');\r\n        setJmandatoryskill('');\r\n        setJobDesc('');\r\n    };\r\n    \r\n    const [selectCatagory] = React.useState([\r\n        {\r\n            label: 'IT',\r\n            value: 'IT',\r\n        },\r\n        { label: 'NON IT', value: 'NON IT' }\r\n    ]);\r\n    // const [selectLocation] = React.useState([\r\n    //     {\r\n    //         label: 'Mumbai',\r\n    //         value: 'Mumbai',\r\n    //     },\r\n    //     { label: 'Gujrat', value: 'Gujrat' },\r\n    //     { label: 'Pune', value: 'Pune' },\r\n    // ]);\r\n    const [selectReqType] = React.useState([\r\n        {\r\n            label: 'DRIVE',\r\n            value: 'DRIVE',\r\n        },\r\n        { label: 'PROCESS', value: 'PROCESS' },\r\n        { label: 'EXCLUSIVE', value: 'EXCLUSIVE' },\r\n    ]);\r\n    const [selectEmpType] = React.useState([\r\n        {\r\n            label: 'CONTRACTUAL',\r\n            value: 'CONTRACTUAL',\r\n        },\r\n        { label: 'PERMANENT', value: 'PERMANENT' },\r\n        { label: 'C2H', value: 'C2H' },\r\n    ]);\r\n    // const recruterList=[\r\n    //     {name: 'EFullname', id: 'Eid'}\r\n    // ]\r\n    return (\r\n        <React.Fragment>\r\n            <form onSubmit={handleRequirementForm}>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        {/* <input\r\n                            type=\"hidden\"\r\n                            value=\"testUi\"\r\n                            onChange={(e) => {\r\n                                setJid(e.target.value);\r\n                            }}\r\n                            name=\"jid\"\r\n                        /> */}\r\n                        <input\r\n                            type=\"hidden\"\r\n                            value=\"testUi\"\r\n                            onChange={(e) => {\r\n                                setJcreatedby (e.target.value);\r\n                            }}\r\n                            name=\"jcreatedby\"\r\n                        />\r\n                        <FormGroup>\r\n                            <Label for=\"empleadoApellidos\">\r\n                                Client <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <select\r\n                                className=\"style-input form-control\"\r\n                                name=\"jclientid\"\r\n                                required onChange={(e,i) => {\r\n                                    setJclient(e.target.value);\r\n                                }}>\r\n                                    <option disabled selected>Select</option>\r\n                                {clientList.map((client) => (\r\n                                    <option key={client.cid} value={client.cid}>\r\n                                        {client.cname}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Job Code<span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                className=\"style-input form-control\"\r\n                                onChange={(e) => {\r\n                                    setJobcode(e.target.value);\r\n                                }}\r\n                                name=\"jobcode\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Main Skill<span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJskill(e.target.value);\r\n                                }}\r\n                                className=\"style-input form-control\"\r\n                                name=\"jskill\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Number of Position <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJposition(e.target.value);\r\n                                }}\r\n                                className=\"style-input form-control\"\r\n                                name=\"jposition\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Location <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJlocation(e.target.value);\r\n                                }}\r\n                                className=\"style-input form-control\"\r\n                                name=\"jlocation\"\r\n                            />\r\n                            {/* <select\r\n                                required\r\n                                className=\"style-input form-control\"\r\n                                required\r\n                                name=\"jlocation\"\r\n                                onChange={(e) => {\r\n                                    setJlocation(e.target.value);\r\n                                }}>\r\n                                {selectLocation.map((sellocation) => (\r\n                                    <option key={sellocation.value} value={sellocation.value}>\r\n                                        {sellocation.label}\r\n                                    </option>\r\n                                ))}\r\n                            </select> */}\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                End Client <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJendClient(e.target.value);\r\n                                }}\r\n                                className=\"style-input form-control\"\r\n                                name=\"jendclient\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Total Minimum Experience <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJtoMin(e.target.value);\r\n                                }}\r\n                                className=\"style-input form-control\"\r\n                                name=\"jtotmin\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Total Maximum Experience <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJtoMax(e.target.value);\r\n                                }}\r\n                                className=\"style-input form-control\"\r\n                                name=\"jtotmax\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Relvent Minimum Experience <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJelMin(e.target.value);\r\n                                }}\r\n                                className=\"style-input form-control\"\r\n                                name=\"jrelmin\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Relvent Maximum Experience <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJelMax(e.target.value);\r\n                                }}\r\n                                className=\"style-input form-control\"\r\n                                name=\"jrelmax\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Bill Rate <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setBillRate(e.target.value);\r\n                                }}\r\n                                className=\"style-input form-control\"\r\n                                name=\"jbillrate\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Pay Rate <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                className=\"style-input form-control\"\r\n                                onChange={(e) => {\r\n                                    setPayRate(e.target.value);\r\n                                }}\r\n                                name=\"jpayrate\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>Select Catagory</Label>\r\n                            <select\r\n                                className=\"style-input form-control\"\r\n                                name=\"jcategory\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJcategory(e.target.value);\r\n                                }}>\r\n                                    <option disabled selected>Select</option>\r\n                                {selectCatagory.map((catagory) => (\r\n                                    <option key={catagory.value} value={catagory.value}>\r\n                                        {catagory.label}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Requirments Type <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <select\r\n                                className=\"style-input form-control\"\r\n                                name=\"jtype\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJtype(e.target.value);\r\n                                }}>\r\n                                    <option disabled selected>Select</option>\r\n                                {selectReqType.map((reqtype) => (\r\n                                    <option key={reqtype.value} value={reqtype.value}>\r\n                                        {reqtype.label}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Type Of Employement <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <select\r\n                                className=\"style-input form-control\"\r\n                                name=\"jemployementtyp\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJemployementtyp(e.target.value);\r\n                                }}>\r\n                                    <option disabled selected>Select</option>\r\n                                {selectEmpType.map((emptype) => (\r\n                                    <option key={emptype.value} value={emptype.value}>\r\n                                        {emptype.label}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                POC Name <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                className=\"style-input form-control\"\r\n                                onChange={(e) => {\r\n                                    setJpocNo(e.target.value);\r\n                                }}\r\n                                name=\"jpocno\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Mandatory Skills <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                className=\"style-input form-control\"\r\n                                onChange={(e) => {\r\n                                    setJmandatoryskill(e.target.value);\r\n                                }}\r\n                                name=\"jmandatoryskill\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mt-2\">\r\n                    <Col lg={12}>\r\n                        <Label>Description</Label>\r\n                        <textarea\r\n                            className=\"form-control style-textarea\"\r\n                            rows=\"7\"\r\n                            onChange={(e) => {\r\n                                setJobDesc(e.target.value);\r\n                            }}\r\n                            name=\"jjd\"></textarea>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mt-3\">\r\n                    <Col lg={6} className=\"mb-5\">\r\n                        <h5 className=\"text-uppercase mt-4\">Assign To :</h5>\r\n                        <Multiselect\r\n                            options={recruterList}\r\n                            onSelect={onSelect}\r\n                            onRemove={onRemove}\r\n                            name=\"jassignuser\"\r\n                            displayValue=\"EFullname\"\r\n                            showCheckbox={true}\r\n                            />\r\n                          \r\n                        {/* {recruterList.map((recruter, index) => (\r\n                            <div className=\"form-check mt-1\">\r\n                                <label className=\"form-check-label\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        onChange={(e) => {\r\n                                           // setJassignuser(e.target.value);\r\n                                           handleCheeckboxChange()\r\n                                        }}\r\n                                        value={recruter.Eid}\r\n                                    />\r\n                                    {recruter.EFullname}\r\n                                </label>\r\n                            </div>\r\n                        ))} */}\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 mt-3 text-right\">\r\n                        <button type=\"submit\" className=\"btn btn-primary mr-2\">\r\n                            Submit\r\n                        </button>\r\n                        <button className=\"btn btn-secondary\">Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddRequirement;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport * as actions from '../../redux/requirement/actions';\r\nconst EditRequirementmodal = (props, row) => {\r\n    const {\r\n        //buttonLabel,\r\n        className,\r\n    } = props;\r\n    const dispatch = useDispatch();\r\n\r\n    const modal = useSelector((state) => state.Requirements.modal);\r\n    const requirmentStore = useSelector((state) => state.Requirements.requirement);\r\n   // let clientList = useSelector((state) => state.Client.clients || []);\r\n    //console.log(requirmentStore.jid,\"requirmentStorerequirmentStore\");\r\n    //console.log(requirmentStore.jid, \"requirmentStorerequirmentStore\");\r\n    //var reqjid =requirmentStore.jid || 0;\r\n    //const [jid, setJid]=useState(reqjid);\r\n    const [requirement, setRequirement] = useState( {\r\n     // jid:reqjid,\r\n      jobcode: '',\r\n      jskill:'',\r\n  } );\r\n  \r\n\r\n  const { jobcode, jskill } = requirement;\r\n\r\n    useEffect( () => {\r\n      \r\n      setRequirement( {\r\n          ...requirement,\r\n          jobcode: requirmentStore ? requirmentStore.jobcode : '',\r\n          jskill:requirmentStore ? requirmentStore.jskill:'',\r\n      } );\r\n  \r\n      // eslint-disable-next-line\r\n    }, [requirmentStore] );\r\n    const handleChange = e => {\r\n        setRequirement( {\r\n              ...requirement,\r\n              [e.target.name]: e.target.value\r\n          } );\r\n      }\r\n    //console.log(\"Edit Requirement id :\", requirmentStore);\r\n    const toggle = () => {\r\n        if (!modal) {\r\n            dispatch(actions.getRequirementModal());\r\n           \r\n        } else {\r\n            dispatch(actions.hideRequirementModal());\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Modal isOpen={modal} size={\"lg\"} toggle={toggle} className={` ${className} 'modal-lg' `}>\r\n                <ModalHeader toggle={toggle}>Update Requirment</ModalHeader>\r\n\r\n                <ModalBody>\r\n                <Form>\r\n                                <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Client</Label>\r\n                                    <Select />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Job Code</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"jobcode\"\r\n                                        id=\"jobcode\"\r\n                                        value={ jobcode || '' }\r\n                                        onChange={handleChange}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Main Skill</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"jskill\"\r\n                                        id=\"jskill\"\r\n                                        value={ jskill || '' } \r\n                                        onChange={handleChange}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Number of Position</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Location</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">End Client</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Total Minimum Experience</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Total Maximum Experience</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Relvent Minimum Experience</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Relvent Maximum Experience</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Bill Rate</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Pay Rate</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Select Catagory</Label>\r\n                                    <Select/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Requirments Type</Label>\r\n                                   <Select/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Type Of Employement</Label>\r\n                                    <Select/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">POC Name</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Mandatory Skills</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={toggle}>Add</Button>\r\n                    <Button color=\"secondary\" className=\"ml-1\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditRequirementmodal;\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import PageTitle from '../../components/PageTitle';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport config from '../../helpers/baseurl';\r\n\r\n\r\nvar urlpattern =config.baseUrl;\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                    \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ShowRequirementCritical = (props) => {\r\n\r\n    //const dispatch = useDispatch(); \r\n    //let records =  [];\r\n  //console.log(records, 'join list');\r\n    useEffect(() => {\r\n      getAllRequirementMaster();\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n    const [requireData, setrequireData]=useState([]);\r\n    let loginDetails = useSelector((state)=> state.Auth.user || []);\r\n    var showrdt =props.viewSingleRequirement;\r\n    const getAllRequirementMaster=()=>{\r\n      var axios = require('axios');\r\n      var getUsername = loginDetails.Username;\r\n      var setjid = showrdt.jid;\r\nvar data = '';\r\n\r\nvar config = {\r\n  method: 'get',\r\n  url: `${urlpattern}ResumeMaster?jid=${setjid}&username=${getUsername}`,\r\n  headers: { \r\n    'Content-Type': 'application/json'\r\n  },\r\n  data : data\r\n};\r\n\r\naxios(config)\r\n.then(function (response) {\r\n  console.log(JSON.stringify(response.data));\r\n  var newrequireData =response.data.Data;\r\n  setrequireData(newrequireData);\r\n})\r\n.catch(function (error) {\r\n  console.log(error);\r\n});\r\n\r\n    }\r\nlet records = requireData ||[];\r\nconsole.log(records,\"viewSingleRequirement records\");\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'c.R_Name',\r\n            text: 'Name',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'c.R_Cnt',\r\n            text: 'Number',\r\n        },\r\n        {\r\n            dataField: 'c.R_Email',\r\n            text: 'Email',\r\n        },\r\n        {\r\n            dataField: 'c.R_Tot_Exp',\r\n            text: 'Total Experince',\r\n        },\r\n        {\r\n            dataField: 'c.R_NP',\r\n            text: 'Notice Period',\r\n        },\r\n        {\r\n          dataField: 'c.R_Cur_CTC',\r\n          text: 'CTC',\r\n      },\r\n      {\r\n        dataField: 'c.R_updateby',\r\n        text: 'Upload By',\r\n    },\r\n    {\r\n      dataField: 'c.R_updateon',\r\n      text: 'Upload On',\r\n  },\r\n  {\r\n    dataField: 'c.R_Status',\r\n    text: 'Status',\r\n},\r\n        {\r\n            dataField: 'Action',\r\n            text: 'Action',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                    <button type=\"button\" \r\n                    id=\"actionButton\" title=\"Action\"\r\n                onClick={() => {_validateFunction(row=[])}} \r\n                className=\"btn btn-link text-secondary\">\r\n                 <FeatherIcon.Target />\r\n                 {/* <i className=\"uil uil-file-exclamation-alt\"></i> */}\r\n                </button>\r\n                );\r\n              },\r\n        },\r\n    ];\r\n    function _validateFunction(row , id) {    \r\n        // console.log(\"activity id :\",(id));\r\n         // dispatch(getRequirementModal((row)));\r\n \r\n         //dispatch( setSaveRequirement( row) );\r\n \r\n          //   dispatch( getRequirementModal() );\r\n     }\r\n    return (\r\n        <React.Fragment>\r\n           <Row>\r\n           <Col className=\"text-right\" lg={12}><button className=\"btn btn-primary\" onClick={props.goBackToRequirement}>Go Back To Requirement</button></Col>\r\n                <Col lg={6} className=\"mt-2\">\r\n                  <label className=\"col-sm-12\"><b>Job Code :</b> {showrdt.jobcode} </label>\r\n                  <label className=\"col-sm-12\"><b>Client Name :</b> {showrdt.jclientname}</label>\r\n                  <label className=\"col-sm-12\"><b>Skill :</b> {showrdt.jskill}</label>\r\n                  <label className=\"col-sm-12\"><b>Position :</b> {showrdt.jposition}</label>\r\n                  <label className=\"col-sm-12\"><b>Location :</b> {showrdt.jlocation}</label>\r\n                  <label className=\"col-sm-12\"><b>End Client :</b> {showrdt.jendclient}</label>\r\n                  <label className=\"col-sm-12\"><b>Total Experience :</b> {showrdt.jtotmax} Years &nbsp;To &nbsp;{showrdt.jtotmin} Years</label>\r\n                  <label className=\"col-sm-12\"><b>Relevent Experience :</b> {showrdt.jrelmax} Years&nbsp; To &nbsp;{showrdt.jrelmin} Years</label>\r\n                </Col>\r\n                <Col lg={6}>\r\n                  <label className=\"col-sm-12\"><b>Category :</b> {showrdt.jcategory}</label>\r\n                  <label className=\"col-sm-12\"><b>Type :</b> {showrdt.jtype}</label>\r\n                  <label className=\"col-sm-12\"><b>Employement Type :</b> {showrdt.jemployementtyp}</label>\r\n                  <label className=\"col-sm-12\"><b>POC Name :</b> {showrdt.jpoc}</label>\r\n                  <label className=\"col-sm-12\"><b>Assign User : </b>{showrdt.jassignuser}</label>\r\n                  <label className=\"col-sm-12\"><b>Mandatory Skill :</b> {showrdt.jmandatoryskill}</label>\r\n                  <label className=\"col-sm-12\"><b>Job Description : </b>{showrdt.jjd}</label>\r\n                  <label className=\"col-sm-12\"><b>Test Requirement :</b> {showrdt.jskill}</label>\r\n                </Col>\r\n           </Row>     \r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ShowRequirementCritical;\r\n\r\n\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import PageTitle from '../../components/PageTitle';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport config from '../../helpers/baseurl';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n//import axios from 'axios';\r\n\r\nvar urlpattern =config.baseUrl;\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                    \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ResumeUpload = (props) => {\r\n\r\n    //const dispatch = useDispatch(); \r\n    //let records =  [];\r\n  //console.log(records, 'join list');\r\n    useEffect(() => {\r\n      getAllRequirementMaster();\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n    const [requireData, setrequireData]=useState([]);\r\n    let loginDetails = useSelector((state)=> state.Auth.user || []);\r\n    var showrdt =props.viewSingleRequirement;\r\n    var getUsername = loginDetails.Username;\r\n    var setjid = showrdt.jid;\r\n    const getAllRequirementMaster=()=>{\r\n      var axios = require('axios');\r\n     \r\n     \r\nvar data = '';\r\n\r\nvar config = {\r\n  method: 'get',\r\n  url: `${urlpattern}ResumeMaster?jid=${setjid}&username=${getUsername}`,\r\n  headers: { \r\n    'Content-Type': 'application/json'\r\n  },\r\n  data : data\r\n};\r\n\r\naxios(config)\r\n.then(function (response) {\r\n  console.log(JSON.stringify(response.data));\r\n  var newrequireData =response.data.Data;\r\n  setrequireData(newrequireData);\r\n})\r\n.catch(function (error) {\r\n  console.log(error);\r\n});\r\n\r\n    }\r\n    //const[rid ,setrid]=useState('');\r\nlet records = requireData ||[];\r\nconsole.log(records,\"viewSingleRequirement records\");\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'c.R_Name',\r\n            text: 'Name',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'c.R_Cnt',\r\n            text: 'Number',\r\n        },\r\n        {\r\n            dataField: 'c.R_Email',\r\n            text: 'Email',\r\n        },\r\n        {\r\n            dataField: 'c.R_Tot_Exp',\r\n            text: 'Total Experince',\r\n        },\r\n        {\r\n            dataField: 'c.R_NP',\r\n            text: 'Notice Period',\r\n        },\r\n        {\r\n          dataField: 'c.R_Cur_CTC',\r\n          text: 'CTC',\r\n      },\r\n      {\r\n        dataField: 'd.E_Updated_By',\r\n        text: 'Upload By',\r\n    },\r\n    {\r\n      dataField: 'd.E_Updated_On',\r\n      text: 'Upload On',\r\n  },\r\n  {\r\n    dataField: 'c.R_Status',\r\n    text: 'Status',\r\n    formatter: (cellContent, row) => {\r\n        //const id = row.jid;\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    row.c.R_Status===\"Accept\" ?\r\n                    <button\r\n                    type=\"button\"\r\n                    id=\"actionButton\"\r\n                    title=\"Action\"\r\n                    onClick={() => changeResumeUploadStatus(row)}\r\n                    className=\"btn btn-link text-secondary p-0\">\r\n                    {row.c.R_Status}\r\n                    {/* <i className=\"uil uil-file-exclamation-alt\"></i> */}\r\n                </button>:      \r\n                <p> {row.c.R_Status}</p>\r\n                }\r\n           \r\n            </React.Fragment>\r\n        );\r\n    },\r\n},\r\n        {\r\n            dataField: 'accept',\r\n            text: 'Accept',\r\n            formatter: (cellContent, row) => {\r\n              console.log(row, '1resume action data');\r\n              //setrid(row.iid);\r\n                return (\r\n                    <button type=\"button\" \r\n                    id=\"actionButton\" title=\"Accept\"\r\n                onClick={() => {acceptresume(row)}} \r\n                className=\"btn btn-link text-secondary\">\r\n                 <FeatherIcon.CheckSquare />\r\n                 {/* <i className=\"uil uil-file-exclamation-alt\"></i> */}\r\n                </button>\r\n                );\r\n              },\r\n        },\r\n        {\r\n          dataField: 'reject',\r\n          text: 'Reject',\r\n          formatter: (cellContent, row) => {\r\n            console.log(row, '1resume action data');\r\n           // setrid(row.iid);\r\n              return (\r\n                  <button type=\"button\" \r\n                  id=\"actionButton\" title=\"Reject\"\r\n              onClick={() => {rejectresume(row)}} \r\n              className=\"btn btn-link text-secondary\">\r\n               <FeatherIcon.Delete />\r\n               {/* <i className=\"uil uil-file-exclamation-alt\"></i> */}\r\n              </button>\r\n              );\r\n            },\r\n      },\r\n    ];\r\n    function acceptresume(row , id) {    \r\n      var resid= row.c.R_Id;\r\n      console.log(row, 'acceptresume');\r\n      var config = {\r\n        method: 'PUT',\r\n        url: `${urlpattern}ResumeStatus?resid=${resid}&resumestatus=Accept`, \r\n      };\r\n      //console.log(data);\r\n      axios(config)\r\n      .then(function (response) {\r\n        console.log(JSON.stringify(response.data));\r\n        getAllRequirementMaster();\r\n        swal(\"Status Updated Successful\", \"success\");\r\n        //toggle2();\r\n      })\r\n      .catch(function (error) {\r\n        swal(error, \"error\");\r\n      });\r\n     }\r\n     function rejectresume(row , id) {    \r\n      var resid= row.c.R_Id;\r\n      var config = {\r\n        method: 'PUT',\r\n        url: `${urlpattern}ResumeStatus?resid=${resid}&resumestatus=Reject`, \r\n      };\r\n      //console.log(data);\r\n      axios(config)\r\n      .then(function (response) {\r\n        console.log(JSON.stringify(response.data));\r\n        getAllRequirementMaster();\r\n        swal(\"Status Updated Successful\", \"success\");\r\n      \r\n        //toggle2();\r\n      })\r\n      .catch(function (error) {\r\n        swal(error, \"error\");\r\n      });\r\n     }\r\n     const [modal, setModal] = useState(false);\r\n     const  [status, setstatus] = useState('');\r\n     const  [interviewid, setinterviewid]=useState('');\r\n     const  [interviewname, setinterviewname]=useState('');\r\n     const  [interviewdate, setinterviewdate] = useState('');\r\n     const  [interviewtime, setinterviewtime] = useState('');\r\n     const  [interviewby, setinterviewby] = useState('');\r\n     const  [interviewlocation, setinterviewlocation] = useState('');\r\n     const  [interviewnote, setinterviewnote] = useState('');\r\n\r\n     const toggle = () => setModal(!modal);\r\n     function changeResumeUploadStatus(row, id) {\r\n         var interviewid =row.c.R_Id;\r\n         var candidatename =row.c.R_Name;\r\n         setinterviewid(interviewid);\r\n         setinterviewname(candidatename);\r\n         toggle();\r\n     }\r\n     const {\r\n         // buttonLabel,\r\n          className\r\n        } = props;\r\n     const handleSubmitUpload = (e) => {\r\n         e.preventDefault();\r\n       //var getcfid=formtDetails.cfid;\r\n        var data = {\r\n         status: status,\r\n         resumeid:interviewid,\r\n         requirementid:setjid,\r\n         interviewdate:interviewdate,\r\n         interviewtime:interviewtime,\r\n         interviewby:interviewby,\r\n         interviewlocation:interviewlocation,\r\n         interviewnote:interviewnote,\r\n         username:getUsername\r\n\r\n       };\r\n         \r\n         var config = {\r\n           method: 'POST',\r\n           url: `${urlpattern}InterviewMaster`,          \r\n           data : data\r\n         };\r\n         console.log(data);\r\n         axios(config)\r\n         .then(function (response) {\r\n           console.log(JSON.stringify(response.data));\r\n           getAllRequirementMaster();\r\n           //swal(\"Status Updated Successful\", \"success\");\r\n           swal(\"Record Saved Successful\", \"success\");\r\n           toggle();\r\n         })\r\n         .catch(function (error) {\r\n          swal(error, \"error\");\r\n         });\r\n       };\r\n    const [file, setFile] = useState(null);\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    formData.append('File', file);\r\n\r\n    fetch(\r\n     `${urlpattern}ResumeMaster?jid=${setjid}&username=${getUsername}`,\r\n        {\r\n            method: 'POST',\r\n            body: formData,\r\n        }\r\n    )\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n            console.log('Success:', result);\r\n            alert(result.Message);\r\n            getAllRequirementMaster();\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error:', error);\r\n            alert(error);\r\n        });\r\n};\r\n  \r\n  \r\n\r\n  const handleOnChange = e => {\r\n    console.log(e.target.files[0]);\r\n    setFile(e.target.files[0]);\r\n  };\r\n    return (\r\n        <React.Fragment>\r\n          \r\n           <form onSubmit={handleSubmit}>\r\n           <Row>\r\n                    <Col lg={3}> <input type=\"file\" className=\"form-control\" onChange={handleOnChange} /></Col>\r\n                    <Col lg={3}><button className=\"btn btn-primary\" type=\"submit\">Upload File</button></Col>\r\n                    <Col className=\"text-right\" lg={6}><button className=\"btn btn-primary\" onClick={props.goBackToRequirement}>Go Back To Requirement</button></Col>\r\n                 </Row>\r\n    </form>\r\n           \r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n            <Modal isOpen={modal} toggle={toggle} className={className}>\r\n            <form onSubmit={handleSubmitUpload}>\r\n        <ModalHeader toggle={toggle}>Schedule Interview</ModalHeader>\r\n        <ModalBody>\r\n        <Row>\r\n        <Col lg={12}>\r\n                     <label>Interview Date</label>\r\n                           <input type=\"date\" className=\"form-control\"\r\n                            onChange={(e) => {\r\n                                setinterviewdate(e.target.value);\r\n                              }}\r\n                              name=\"interviewdate\"/>\r\n                       </Col>\r\n                       <Col lg={12}>\r\n                     <label>Interview Time</label>\r\n                           <input type=\"time\" className=\"form-control\"\r\n                            onChange={(e) => {\r\n                                setinterviewtime(e.target.value);\r\n                              }}\r\n                              name=\"interviewtime\"/>\r\n                       </Col>\r\n                       <Col lg={12}>\r\n                     <label>Candidate Name</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           value={interviewname}\r\n                              name=\"status\"/>\r\n                       </Col>\r\n                       <Col lg={12}>\r\n                     <label>Interview By</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                            onChange={(e) => {\r\n                                setinterviewby(e.target.value);\r\n                              }}\r\n                              name=\"interviewby\"/>\r\n                       </Col>\r\n                       <Col lg={12}>\r\n                     <label>Interview Location</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                            onChange={(e) => {\r\n                                setinterviewlocation(e.target.value);\r\n                              }}\r\n                              name=\"interviewlocation\"/>\r\n                       </Col>\r\n                       <Col lg={12}>\r\n                     <label>Note</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                            onChange={(e) => {\r\n                                setinterviewnote(e.target.value);\r\n                              }}\r\n                              name=\"interviewnote\"/>\r\n                       </Col>\r\n                       <Col lg={12}>\r\n                     <label>Status</label>\r\n                           <select className=\"form-control\"\r\n                            onChange={(e) => {\r\n                                setstatus(e.target.value);\r\n                              }}\r\n                              name=\"status\">\r\n                               <option value=\"\">Select</option>\r\n                               <option value=\"Set\">Set</option>\r\n                               <option value=\"Offer\">Offer</option>\r\n                           </select>\r\n                       </Col>\r\n                       \r\n                       </Row>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n          <Button color=\"primary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n        </form>\r\n      </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ResumeUpload;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\n//import { useSelector } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import PageTitle from '../../components/PageTitle';\r\n//import * as FeatherIcon from 'react-feather';\r\nimport config from '../../helpers/baseurl';\r\n//import axios from 'axios';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nvar urlpattern = config.baseUrl;\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n\r\n    const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n            setrowData((rowData) => [...rowData, row]);\r\n            console.log('rowdata', rowData);\r\n        },\r\n    };\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n            <div className=\"rect1\" />\r\n            <div className=\"rect2\" />\r\n            <div className=\"rect3\" />\r\n            <div className=\"rect4\" />\r\n            <div className=\"rect5\" />\r\n        </div>\r\n    );\r\n    return (\r\n        <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n            {(props) => (\r\n                <React.Fragment>\r\n                    <Row>\r\n                        <Col md={6} className=\"\">\r\n                            <SearchBar {...props.searchProps} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <BootstrapTable\r\n                        {...props.baseProps}\r\n                        bordered={false}\r\n                        defaultSorted={defaultSorted}\r\n                        rowEvents={rowEvent}\r\n                        noDataIndication={() => <NoDataIndication />}\r\n                        pagination={paginationFactory({\r\n                            sizePerPage: 10,\r\n                            sizePerPageRenderer: sizePerPageRenderer,\r\n                            sizePerPageList: [\r\n                                { text: '10', value: 10 },\r\n                                { text: '20', value: 20 },\r\n                                { text: '50', value: 50 },\r\n                                { text: 'Todos', value: props.records ? props.records.length : 0 },\r\n                            ],\r\n                        })}\r\n                    />\r\n                </React.Fragment>\r\n            )}\r\n        </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst SetInterview = (props) => {\r\n    //const dispatch = useDispatch();\r\n    //let records =  [];\r\n    //console.log(records, 'join list');\r\n    useEffect(() => {\r\n        getAllRequirementMaster();\r\n\r\n        // eslint-disable-next-line\r\n    }, []);\r\n    const [requireData, setrequireData] = useState([]);\r\n    //let loginDetails = useSelector((state) => state.Auth.user || []);\r\n    var showrdt = props.viewSingleRequirement;\r\n    //var getUsername = loginDetails.Username;\r\n    var setjid = showrdt.jid;\r\n    const getAllRequirementMaster = () => {\r\n        var axios = require('axios');\r\n\r\n        var data = '';\r\n\r\n        var config = {\r\n            method: 'get',\r\n            url: `${urlpattern}InterviewMaster?requirementid=${setjid}`,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config)\r\n            .then(function (response) {\r\n                console.log(JSON.stringify(response.data));\r\n                var newrequireData = response.data.Data;\r\n                setrequireData(newrequireData);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    };\r\n    let records = requireData || [];\r\n    console.log(records, 'viewSingleRequirement records');\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'name',\r\n            text: 'Name',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'idate',\r\n            text: 'Date',\r\n        },\r\n        {\r\n            dataField: 'itime',\r\n            text: 'Time',\r\n        },\r\n        {\r\n            dataField: 'by',\r\n            text: 'By',\r\n        },\r\n        {\r\n            dataField: 'location',\r\n            text: 'Location',\r\n        },\r\n        {\r\n            dataField: 'status',\r\n            text: 'Status',\r\n        },\r\n        {\r\n            dataField: '',\r\n            text: 'Change Status',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                    <button\r\n                        type=\"button\"\r\n                        id=\"actionButton\"\r\n                        title=\"Action\"\r\n                        onClick={() => changeInterViewStatus(row)}\r\n                        className=\"btn btn-link text-secondary p-0\">\r\n                        Change\r\n                        {/* <i className=\"uil uil-file-exclamation-alt\"></i> */}\r\n                    </button>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n   \r\n    const [modal, setModal] = useState(false);\r\n    const  [status, setstatus] = useState('');\r\n    const[interviewid, setinterviewid]=useState('');\r\n    const toggle = () => setModal(!modal);\r\n    function changeInterViewStatus(row, id) {\r\n        var interviewid =row.iid;\r\n        setinterviewid(interviewid);\r\n        toggle();\r\n    }\r\n    const {\r\n        // buttonLabel,\r\n         className\r\n       } = props;\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n      //var getcfid=formtDetails.cfid;\r\n       var data = {\r\n        status: status,\r\n        cfid:interviewid\r\n      };\r\n        \r\n        var config = {\r\n          method: 'PUT',\r\n          url: `${urlpattern}InterviewMaster?interviewid=${interviewid}&status=${status}`,          \r\n          data : data\r\n        };\r\n        console.log(data);\r\n        axios(config)\r\n        .then(function (response) {\r\n          console.log(JSON.stringify(response.data));\r\n          getAllRequirementMaster();\r\n          //swal(\"Status Updated Successful\", \"success\");\r\n          swal(\"Status Updated Successful\", \"success\");\r\n          toggle();\r\n        })\r\n        .catch(function (error) {\r\n            swal(error, \"error\");\r\n        });\r\n      };\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n             <Col className=\"text-right\" lg={12}><button className=\"btn btn-primary\" onClick={props.goBackToRequirement}>Go Back To Requirement</button></Col>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n            <Modal isOpen={modal} toggle={toggle} className={className}>\r\n            <form onSubmit={handleSubmit}>\r\n        <ModalHeader toggle={toggle}>Change Status</ModalHeader>\r\n        <ModalBody>\r\n        <Row>\r\n                       <Col lg={12}>\r\n                     <label>Status</label>\r\n                           <select className=\"form-control\"\r\n                            onChange={(e) => {\r\n                                setstatus(e.target.value);\r\n                              }}\r\n                              name=\"status\">\r\n                               <option value=\"\">Select</option>\r\n                               <option value=\"Set\">Set</option>\r\n                               <option value=\"Offer\">Offer</option>\r\n                           </select>\r\n                       </Col>\r\n                       </Row>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n          <Button color=\"primary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n        </form>\r\n      </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SetInterview;\r\n","import React, { useEffect, useState } from 'react';\r\n//import { useSelector } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport config from '../../helpers/baseurl';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n//import axios from 'axios';\r\n\r\nvar urlpattern = config.baseUrl;\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n\r\n    const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n            setrowData((rowData) => [...rowData, row]);\r\n            console.log('rowdata', rowData);\r\n        },\r\n    };\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n            <div className=\"rect1\" />\r\n            <div className=\"rect2\" />\r\n            <div className=\"rect3\" />\r\n            <div className=\"rect4\" />\r\n            <div className=\"rect5\" />\r\n        </div>\r\n    );\r\n    return (\r\n        <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n            {(props) => (\r\n                <React.Fragment>\r\n                    <Row>\r\n                        <Col md={6} className=\"\">\r\n                            <SearchBar {...props.searchProps} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <BootstrapTable\r\n                        {...props.baseProps}\r\n                        bordered={false}\r\n                        defaultSorted={defaultSorted}\r\n                        rowEvents={rowEvent}\r\n                        noDataIndication={() => <NoDataIndication />}\r\n                        pagination={paginationFactory({\r\n                            sizePerPage: 10,\r\n                            sizePerPageRenderer: sizePerPageRenderer,\r\n                            sizePerPageList: [\r\n                                { text: '10', value: 10 },\r\n                                { text: '20', value: 20 },\r\n                                { text: '50', value: 50 },\r\n                                { text: 'Todos', value: props.records ? props.records.length : 0 },\r\n                            ],\r\n                        })}\r\n                    />\r\n                </React.Fragment>\r\n            )}\r\n        </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst SetOffer = (props) => {\r\n    //const dispatch = useDispatch();\r\n    //let records =  [];\r\n    //console.log(records, 'join list');\r\n    useEffect(() => {\r\n        getAllRequirementMaster();\r\n\r\n        // eslint-disable-next-line\r\n    }, []);\r\n    const [requireData, setrequireData] = useState([]);\r\n    //let loginDetails = useSelector((state) => state.Auth.user || []);\r\n    var showrdt = props.viewSingleRequirement;\r\n    //var getUsername = loginDetails.Username;\r\n    var setjid = showrdt.jid;\r\n    const getAllRequirementMaster = () => {\r\n        var axios = require('axios');\r\n\r\n        var data = '';\r\n\r\n        var config = {\r\n            method: 'get',\r\n            url: `${urlpattern}OfferMaster?requirementid=${setjid}`,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config)\r\n            .then(function (response) {\r\n                console.log(JSON.stringify(response.data));\r\n                var newrequireData = response.data.Data;\r\n                setrequireData(newrequireData);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    };\r\n    let records = requireData || [];\r\n    console.log(records, 'viewSingleRequirement records');\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'name',\r\n            text: 'Name',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'clientname',\r\n            text: 'Client',\r\n        },\r\n        {\r\n            dataField: 'skill',\r\n            text: 'Skill',\r\n        },\r\n        {\r\n            dataField: 'location',\r\n            text: 'Location',\r\n        },\r\n        {\r\n            dataField: 'type',\r\n            text: 'Type',\r\n        },\r\n        {\r\n            dataField: 'status',\r\n            text: 'Status',\r\n        },\r\n        {\r\n            dataField: '',\r\n            text: 'Change Status',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                    <button\r\n                        type=\"button\"\r\n                        id=\"actionButton\"\r\n                        title=\"Action\"\r\n                        onClick={() => changeOfferViewStatus(row)}\r\n                        className=\"btn btn-link text-secondary p-0\">\r\n                        Change\r\n                        {/* <i className=\"uil uil-file-exclamation-alt\"></i> */}\r\n                    </button>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n    const [modal, setModal] = useState(false);\r\n    const  [status, setstatus] = useState('');\r\n    const[offerId, setofferId]=useState('');\r\n    const toggle = () => setModal(!modal);\r\n    function changeOfferViewStatus(row, id) {\r\n        var offerId =row.offerid;\r\n        setofferId(offerId);\r\n        toggle();\r\n    }\r\n    const {\r\n        // buttonLabel,\r\n         className\r\n       } = props;\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n      //var getcfid=formtDetails.cfid;\r\n       var data = {\r\n        status: status,\r\n        cfid:offerId\r\n      };\r\n        \r\n        var config = {\r\n          method: 'PUT',\r\n          url: `${urlpattern}OfferMaster?offerid=${offerId}&status=${status}`,          \r\n          data : data\r\n        };\r\n        console.log(data);\r\n        axios(config)\r\n        .then(function (response) {\r\n          console.log(JSON.stringify(response.data));\r\n          getAllRequirementMaster();\r\n          swal(\"Status Updated Successful\", \"success\");\r\n          //swal(\"Status Updated Successful\", \"success\");\r\n          toggle();\r\n        })\r\n        .catch(function (error) {\r\n            swal(error, \"error\");\r\n        });\r\n      };\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n            <Col className=\"text-right\" lg={12}><button className=\"btn btn-primary\" onClick={props.goBackToRequirement}>Go Back To Requirement</button></Col>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n            <Modal isOpen={modal} toggle={toggle} className={className}>\r\n            <form onSubmit={handleSubmit}>\r\n        <ModalHeader toggle={toggle}>Change Status</ModalHeader>\r\n        <ModalBody>\r\n        <Row>\r\n                       <Col lg={12}>\r\n                     <label>Status</label>\r\n                           <select className=\"form-control\"\r\n                            onChange={(e) => {\r\n                                setstatus(e.target.value);\r\n                              }}\r\n                              name=\"status\">\r\n                               <option value=\"\">Select</option>\r\n                               <option value=\"To Be Join\">To Be Join</option>\r\n                               <option value=\"Hold\">Hold</option>\r\n                               <option value=\"BD\">BD</option>\r\n                               <option value=\"Join\">Join</option>\r\n                               <option value=\"Reject\">Reject</option>\r\n                           </select>\r\n                       </Col>\r\n                       </Row>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n          <Button color=\"primary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n        </form>\r\n      </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SetOffer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search,CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getRequirementList, getRequirementModal, setSaveRequirement } from '../../redux/requirement/actions';\r\nimport EditRequirementmodal from './EditRequirementmodal';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport ShowRequirement from './ShowRequirement';\r\nimport ResumeUpload from './ResumeUpload';\r\nimport SetInterview from './SetInterview';\r\nimport SetOffer from './SetOffer';\r\nimport config from '../../helpers/baseurl';\r\n//import axios from 'axios';\r\n\r\nvar urlpattern = config.baseUrl;\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n\r\nconst { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onClick: (e, row, rowIndex) => {\r\n    //       console.log(`clicked on row with index: ${rowIndex} ${row.jobcode}`);\r\n    //     }\r\n    //   };\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    \r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                \r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                <UncontrolledDropdown className=\" profile-dropdown-menu\">\r\n                <DropdownToggle\r\n                    data-toggle=\"dropdown\"\r\n                    tag=\"button\"\r\n                    className=\"btn btn-secondary dropdown-toggle bg-secondary  mr-0\">\r\n                    Download <FeatherIcon.ChevronDown />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"topbar-dropdown-menu profile-dropdown-items\">\r\n                    <div className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                    </div>\r\n                    {/* <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export PDF</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export EXCEL</ExportCSVButton>\r\n                    </div> */}\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n                                {/* <ExportCSVButton className=\"btn-primary\" { ...props.csvProps }>Export CSV!!</ExportCSVButton> */}\r\n                                </Col>                            \r\n                            </Row>\r\n                            {/* <EditRequirementmodal modalToggle={toggle}/> */}\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                wrapperClasses=\"table-responsive\"\r\n                                //rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewRequirement = (props) => {\r\n    const [file, setFile] = useState(null);\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Requirements.requirements);\r\n   //console.log(records, 'requirement')\r\n    useEffect(() => {\r\n        dispatch(getRequirementList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n    const UPLOAD_ENDPOINT =\r\n    \"http://144.48.250.235:98/api/UploadFile\";\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    //if await is removed, console log will be called before the uploadFile() is executed completely.\r\n    //since the await is added, this will pause here then console log will be called\r\n    let res = await uploadFile(file);\r\n    console.log(res.data);\r\n  };\r\n\r\n  const uploadFile = async file => {\r\n    const formData = new FormData();\r\n    formData.append(\"avatar\", file);\r\n\r\n    return await axios.post(UPLOAD_ENDPOINT, formData, {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\"\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleOnChange = e => {\r\n    console.log(e.target.files[0]);\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n \r\n  const[showrequrement, setshowrequrement]=useState(true);\r\n    const columns = [\r\n        {\r\n            dataField: 'jobcode',\r\n            text: 'Job Code.',\r\n        },\r\n        {\r\n            dataField:'jclientname',\r\n            text:\"Client Name\"\r\n        },\r\n        {\r\n            dataField: 'jskill',\r\n            text: 'Skill',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary p-0\"\r\n                    onClick={() => showRequrementDetails(row)}\r\n                    title=\"Edit\"\r\n                  >\r\n                   {row.jskill}\r\n                  </button>\r\n                );\r\n              },\r\n        },\r\n        {\r\n            dataField: 'jposition',\r\n            text: 'Position',\r\n        },\r\n        {\r\n            dataField: 'jlocation',\r\n            text: 'Location',\r\n        },\r\n        {\r\n            dataField: 'jendclient',\r\n            text: 'End Client',\r\n        },\r\n        {\r\n            dataField: 'jstatus',\r\n            text: 'Status',\r\n        },\r\n        {\r\n            dataField: 'jcreatedon',\r\n            text: 'Created On',\r\n        },\r\n        {\r\n            dataField: 'jassignuser',\r\n            text: 'Assign To',\r\n            headerStyle: (colum, colIndex) => {\r\n                return { width: '200px'};\r\n              }\r\n        },  \r\n        {\r\n            dataField: 'actions',\r\n            text: 'Action',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary p-0\"\r\n                    onClick={() => showActionStatus(row)}\r\n                    title=\"Edit\"\r\n                  >\r\n                   Action\r\n                  </button>\r\n                );\r\n              },\r\n        },\r\n        {\r\n            dataField: 'summary',\r\n            text: 'Summary',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary p-0\"\r\n                    onClick={() => setsummarydeatailsmodal(row)}\r\n                    title=\"Edit\"\r\n                  >\r\n                   Summary\r\n                  </button>\r\n                );\r\n              },\r\n        },\r\n        \r\n        {\r\n            dataField: 'resume',\r\n            text: 'Resume',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary p-0\"\r\n                    onClick={() => showResumeUploadtDetails(row)}\r\n                    title=\"Edit\"\r\n                  >\r\n                   Resume\r\n                  </button>\r\n                );\r\n              },\r\n        },\r\n        {\r\n            dataField: 'interview',\r\n            text: 'Interview',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary p-0\"\r\n                    onClick={() => showSetInterviewDetails(row)}\r\n                    title=\"Edit\"\r\n                  >\r\n                   Interview\r\n                  </button>\r\n                );\r\n              },\r\n        },\r\n        {\r\n            dataField: 'offer',\r\n            text: 'Offer',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary p-0\"\r\n                    onClick={() => showSetOfferDetails(row)}\r\n                    title=\"Edit\"\r\n                  >\r\n                   Offer\r\n                  </button>\r\n                );\r\n              },\r\n              \r\n        },\r\n        {\r\n          dataField: 'edit',\r\n          text: 'Edit',\r\n          formatter: (cellContent, row) => {\r\n              //const id = row.jid;\r\n              return (\r\n                <button\r\n                className=\"btn btn-link text-secondary\"\r\n                  onClick={() => _validateFunction(row)}\r\n                  title=\"Edit\"\r\n                >\r\n                 <FeatherIcon.Edit />\r\n                </button>\r\n              );\r\n            },\r\n          //formatter:editRequirement\r\n      },\r\n\r\n    ];\r\n     //Action modal start///\r\n    const [modal2, setModal2] = useState(false);\r\n    const  [status, setstatus] = useState('');\r\n    const [jid, setjid]=useState('');\r\n    const toggle2 = () => setModal2(!modal2);\r\n    function showActionStatus(row, id) {\r\n        var newjid =row.jid;\r\n        setjid(newjid);\r\n        toggle2();\r\n    }\r\n    const {\r\n        // buttonLabel,\r\n         className\r\n       } = props;\r\n    const handleSubmitAction = (e) => {\r\n        e.preventDefault();\r\n      //var getcfid=formtDetails.cfid;\r\n       var data = {\r\n        status: status,\r\n        jid:jid\r\n      };\r\n        \r\n        var config = {\r\n          method: 'PUT',\r\n          url: `${urlpattern}UpdateRequirementStatus?jid=${jid}&status=${status}`,          \r\n          data : data\r\n        };\r\n        console.log(data);\r\n        axios(config)\r\n        .then(function (response) {\r\n          console.log(JSON.stringify(response.data));\r\n          getRequirementList();\r\n          //swal(\"Status Updated Successful\", \"success\");\r\n          toggle2();\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      };\r\n\r\n    //Action modal end///\r\n    //Summary modal start///  \r\n    const [modal3, setModal3] = useState(false);\r\n    //const [summaryjid, setsummaryjid]=useState();\r\n    const toggle3 = () => setModal3(!modal3);\r\n    const [summarydetails, setsummarydetails]=useState([]);\r\n    function setsummarydeatailsmodal(row, id) {\r\n       // var newjid =row.jid;\r\n        \r\n       // setsummaryjid(row.jid);\r\n              \r\n        toggle3();\r\n        var config = {\r\n            method: 'GET',\r\n            url: `${urlpattern}ViewRequirementSummary?jid=${row.jid}`,   \r\n          };\r\n          axios(config)\r\n          .then(function (response) {\r\n            console.log(JSON.stringify(response.data.Data));\r\n           var newsumdeta= response.data.Data;\r\n           setsummarydetails(newsumdeta);\r\n            //swal(\"Status Updated Successful\", \"success\");\r\n            //toggle2();\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n    }\r\n\r\n    // const handleSubmitSummry = (e) => {   \r\n    //     console.log(summaryjid, \"findal summary\");  \r\n       \r\n    //   };\r\n      //Summary modal end\r\n    function _validateFunction(row , id) {    \r\n       // console.log(\"activity id :\",(id));\r\n        // dispatch(getRequirementModal((row)));\r\n\r\n        dispatch( setSaveRequirement( row) );\r\n\r\n            dispatch( getRequirementModal() );\r\n    }\r\n    const[viewSingleRequirement, setviewSingleRequirement]=useState([]);\r\n    function showRequrementDetails(row , id) {  \r\n        setshowrequrement(!showrequrement);\r\n        var viewrequrementdetails =row;\r\n       // console.log(row, \"showRequrementDetails\");\r\n        setviewSingleRequirement(viewrequrementdetails);\r\n        setActiveTab('1');\r\n     }\r\n     function showResumeUploadtDetails(row , id) {  \r\n        setshowrequrement(!showrequrement);\r\n        var viewrequrementdetails =row;\r\n       // console.log(row, \"showRequrementDetails\");\r\n        setviewSingleRequirement(viewrequrementdetails);\r\n        setActiveTab('2');\r\n     }\r\n     function showSetInterviewDetails(row , id) {  \r\n        setshowrequrement(!showrequrement);\r\n        var viewrequrementdetails =row;\r\n       // console.log(row, \"showRequrementDetails\");\r\n        setviewSingleRequirement(viewrequrementdetails);\r\n        setActiveTab('3');\r\n     }\r\n     function showSetOfferDetails(row , id) {  \r\n        setshowrequrement(!showrequrement);\r\n        var viewrequrementdetails =row;\r\n       // console.log(row, \"showRequrementDetails\");\r\n        setviewSingleRequirement(viewrequrementdetails);\r\n        setActiveTab('4');\r\n     }\r\n   \r\n//    Requirement details section\r\nconst goBackToRequirement=()=>{\r\n    setshowrequrement(!showrequrement);\r\n    \r\n}\r\nvar setsumrymodal =summarydetails || [];\r\nconsole.log(setsumrymodal, \"modal summary data\");\r\n   return (\r\n        <React.Fragment>\r\n            {showrequrement ?\r\n            <Row>\r\n                <Col>\r\n                <EditRequirementmodal/>\r\n                <form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col lg={3}> <input type=\"file\" className=\"form-control\" onChange={handleOnChange} /></Col>\r\n                    <Col lg={3}><button className=\"btn btn-primary\" type=\"submit\">Upload File</button></Col>\r\n                 </Row>\r\n                </form>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n            :\r\n            <Row>\r\n            <div className=\"col-sm-12\">\r\n            <Nav tabs className=\"second-level-tab nav nav-tabs justify-content-start\">\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            \r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"upload-li\">\r\n          <NavLink\r\n            className={ classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Upload Resume\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Set Interview\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '4' })}\r\n            onClick={() => { toggle('4'); }}\r\n          >\r\n            Offer\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n          \r\n        <TabPane tabId=\"1\">\r\n            <Row>\r\n                <div className=\"header-info\">Requirement Details</div>\r\n            </Row>\r\n            <Col sm=\"12\">\r\n              <ShowRequirement viewSingleRequirement={viewSingleRequirement} goBackToRequirement={goBackToRequirement}/>\r\n            </Col>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n            <Col sm=\"12\">\r\n             <ResumeUpload viewSingleRequirement={viewSingleRequirement} goBackToRequirement={goBackToRequirement}/>\r\n            </Col>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n            <Col sm=\"12\">\r\n             <SetInterview viewSingleRequirement={viewSingleRequirement} goBackToRequirement={goBackToRequirement}/>\r\n            </Col>\r\n        </TabPane>\r\n        <TabPane tabId=\"4\">\r\n            <Col sm=\"12\">\r\n              <SetOffer viewSingleRequirement={viewSingleRequirement} goBackToRequirement={goBackToRequirement}/>\r\n            </Col>\r\n        </TabPane>\r\n      </TabContent>\r\n    </div>\r\n            </Row>\r\n}\r\n<Modal isOpen={modal2} toggle={toggle2} className={className}>\r\n            <form onSubmit={handleSubmitAction}>\r\n        <ModalHeader toggle={toggle2}>Change Status</ModalHeader>\r\n        <ModalBody>\r\n        <Row>\r\n                       <Col lg={12}>\r\n                     <label>Status</label>\r\n                           <select className=\"form-control\"\r\n                            onChange={(e) => {\r\n                                setstatus(e.target.value);\r\n                              }}\r\n                              name=\"status\">\r\n                               <option value=\"\">Select</option>\r\n                               <option value=\"Active\">Active</option>\r\n                               <option value=\"Deactive\">Deactive</option>\r\n                               <option value=\"Hold\">Hold</option>\r\n                               <option value=\"Delete\">Delete</option>\r\n                               <option value=\"Close\">Close</option>\r\n                           </select>\r\n                       </Col>\r\n                       </Row>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n          <Button color=\"primary\" onClick={toggle2}>Cancel</Button>\r\n        </ModalFooter>\r\n        </form>\r\n      </Modal>\r\n      <Modal isOpen={modal3} toggle={toggle3} className={className}>\r\n            <form onSubmit={handleSubmitAction}>\r\n        {/* <ModalHeader toggle={toggle3}>Change Status</ModalHeader> */}\r\n        <ModalBody>\r\n        <Row>\r\n            <Col lg={12}>\r\n                     <label>Submission : {summarydetails.submission}</label><br/>\r\n                     <label>Interview : {summarydetails.interview}</label><br/>\r\n                     <label>Offer : {summarydetails.offer}</label><br/>\r\n                     <label>Start : {summarydetails.start}</label><br/>\r\n                     <label>BD : {summarydetails.bd}</label><br/>\r\n             </Col>\r\n        </Row>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={toggle3}>Close</Button>\r\n        </ModalFooter>\r\n        </form>\r\n      </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewRequirement;\r\n\r\n\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import PageTitle from '../../components/PageTitle';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport config from '../../helpers/baseurl';\r\n\r\n\r\nvar urlpattern =config.baseUrl;\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                    \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ShowRequirement = (props) => {\r\n\r\n    //const dispatch = useDispatch(); \r\n    //let records =  [];\r\n  //console.log(records, 'join list');\r\n    useEffect(() => {\r\n      getAllRequirementMaster();\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n    const [requireData, setrequireData]=useState([]);\r\n    let loginDetails = useSelector((state)=> state.Auth.user || []);\r\n    var showrdt =props.viewSingleRequirement;\r\n    const getAllRequirementMaster=()=>{\r\n      var axios = require('axios');\r\n      var getUsername = loginDetails.Username;\r\n      var setjid = showrdt.jid;\r\nvar data = '';\r\n\r\nvar config = {\r\n  method: 'get',\r\n  url: `${urlpattern}ResumeMaster?jid=${setjid}&username=${getUsername}`,\r\n  headers: { \r\n    'Content-Type': 'application/json'\r\n  },\r\n  data : data\r\n};\r\n\r\naxios(config)\r\n.then(function (response) {\r\n  console.log(JSON.stringify(response.data));\r\n  var newrequireData =response.data.Data;\r\n  setrequireData(newrequireData);\r\n})\r\n.catch(function (error) {\r\n  console.log(error);\r\n});\r\n\r\n    }\r\nlet records = requireData ||[];\r\nconsole.log(records,\"viewSingleRequirement records\");\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'c.R_Name',\r\n            text: 'Name',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'c.R_Cnt',\r\n            text: 'Number',\r\n        },\r\n        {\r\n            dataField: 'c.R_Email',\r\n            text: 'Email',\r\n        },\r\n        {\r\n            dataField: 'c.R_Tot_Exp',\r\n            text: 'Total Experince',\r\n        },\r\n        {\r\n            dataField: 'c.R_NP',\r\n            text: 'Notice Period',\r\n        },\r\n        {\r\n          dataField: 'c.R_Cur_CTC',\r\n          text: 'CTC',\r\n      },\r\n      {\r\n        dataField: 'c.R_updateby',\r\n        text: 'Upload By',\r\n    },\r\n    {\r\n      dataField: 'c.R_updateon',\r\n      text: 'Upload On',\r\n  },\r\n  {\r\n    dataField: 'c.R_Status',\r\n    text: 'Status',\r\n},\r\n        {\r\n            dataField: 'Action',\r\n            text: 'Action',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                    <button type=\"button\" \r\n                    id=\"actionButton\" title=\"Action\"\r\n                onClick={() => {_validateFunction(row=[])}} \r\n                className=\"btn btn-link text-secondary\">\r\n                 <FeatherIcon.Target />\r\n                 {/* <i className=\"uil uil-file-exclamation-alt\"></i> */}\r\n                </button>\r\n                );\r\n              },\r\n        },\r\n    ];\r\n    function _validateFunction(row , id) {    \r\n        // console.log(\"activity id :\",(id));\r\n         // dispatch(getRequirementModal((row)));\r\n \r\n         //dispatch( setSaveRequirement( row) );\r\n \r\n          //   dispatch( getRequirementModal() );\r\n     }\r\n    return (\r\n        <React.Fragment>\r\n           <Row>\r\n           <Col className=\"text-right\" lg={12}><button className=\"btn btn-primary\" onClick={props.goBackToRequirement}>Go Back To Requirement</button></Col>\r\n                <Col lg={6} className=\"mt-2\">\r\n                  <label className=\"col-sm-12\"><b>Job Code :</b> {showrdt.c.J_Code} </label>\r\n                  <label className=\"col-sm-12\"><b>Client Name :</b> {showrdt.d.C_Name}</label>\r\n                  <label className=\"col-sm-12\"><b>Skill :</b> {showrdt.c.J_Skill}</label>\r\n                  <label className=\"col-sm-12\"><b>Position :</b> {showrdt.c.J_Position}</label>\r\n                  <label className=\"col-sm-12\"><b>Location :</b> {showrdt.c.J_Location}</label>\r\n                  <label className=\"col-sm-12\"><b>End Client :</b> {showrdt.c.J_EndClient}</label>\r\n                  <label className=\"col-sm-12\"><b>Total Experience :</b> {showrdt.c.J_Tot_Max_Exp} Years &nbsp;To &nbsp;{showrdt.c.J_Tot_Min_Exp} Years</label>\r\n                  <label className=\"col-sm-12\"><b>Relevent Experience :</b> {showrdt.c.J_Rel_Max_Exp} Years&nbsp; To &nbsp;{showrdt.c.J_Rel_Min_Exp} Years</label>\r\n                </Col>\r\n                <Col lg={6}>\r\n                  <label className=\"col-sm-12\"><b>Category :</b> {showrdt.d.C_Category}</label>\r\n                  <label className=\"col-sm-12\"><b>Type :</b> {showrdt.c.C_Type}</label>\r\n                  <label className=\"col-sm-12\"><b>Employement Type :</b> {showrdt.c.J_Employment_Type}</label>\r\n                  <label className=\"col-sm-12\"><b>POC Name :</b> {showrdt.c.J_POC}</label>\r\n                  <label className=\"col-sm-12\"><b>Assign User : </b>{showrdt.c.J_AssignUser}</label>\r\n                  <label className=\"col-sm-12\"><b>Mandatory Skill :</b> {showrdt.c.J_MandatorySkill}</label>\r\n                  <label className=\"col-sm-12\"><b>Job Description : </b>{showrdt.c.J_JD}</label>\r\n                  <label className=\"col-sm-12\"><b>Test Requirement :</b> {showrdt.c.J_Skill}</label>\r\n                </Col>\r\n           </Row>     \r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ShowRequirement;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search,CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getCriticalRequirementList } from '../../redux/requirement/actions';\r\nimport classnames from 'classnames';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\r\nimport ShowRequirementCritical from './ShowRequirementCritical';\r\nimport ResumeUpload from './ResumeUpload';\r\nimport SetInterview from './SetInterview';\r\nimport SetOffer from './SetOffer';\r\nimport config from '../../helpers/baseurl';\r\nimport axios from 'axios';\r\nvar urlpattern = config.baseUrl;\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\nconst { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n//    const dispatch = useDispatch();\r\n\r\n    const rowEvent = {\r\n        onDoubleClick: ( e, row, index ) => {\r\n\r\n            //dispatch( setRequirement( row ) );\r\n\r\n           // dispatch( getCriticalRequirementModal() );\r\n            //console.log(props.result)\r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                <UncontrolledDropdown className=\" profile-dropdown-menu\">\r\n                <DropdownToggle\r\n                    data-toggle=\"dropdown\"\r\n                    tag=\"button\"\r\n                    className=\"btn btn-secondary dropdown-toggle bg-secondary  mr-0\">\r\n                    Dropdown <FeatherIcon.ChevronDown />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"topbar-dropdown-menu profile-dropdown-items\">\r\n                    <div className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                    </div>\r\n                    {/* <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export PDF</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export EXCEL</ExportCSVButton>\r\n                    </div> */}\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n                                {/* <ExportCSVButton className=\"btn-primary\" { ...props.csvProps }>Export CSV!!</ExportCSVButton> */}\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst CriticalRequirement = (props) => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Requirements.criticalreq);\r\n   //console.log(\"critical \", records);\r\n   const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n \r\n  const[showrequrement, setshowrequrement]=useState(true);\r\n    useEffect(() => {\r\n        dispatch(getCriticalRequirementList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'c.J_Code',\r\n            text: 'Job Code.',\r\n        },\r\n        {\r\n            dataField:'d.C_Name',\r\n            text:\"Client Name\"\r\n        },\r\n        {\r\n            dataField: 'c.J_Skill',\r\n            text: 'Skill',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary p-0\"\r\n                    onClick={() => showRequrementDetails(row)}\r\n                    title=\"Edit\"\r\n                  >\r\n                   {row.c.J_Skill}\r\n                  </button>\r\n                );\r\n              },\r\n        },\r\n        {\r\n            dataField: 'c.J_Position',\r\n            text: 'Position',\r\n        },\r\n        {\r\n            dataField: 'c.J_Location',\r\n            text: 'Location',\r\n        },\r\n        {\r\n            dataField: 'c.J_EndClient',\r\n            text: 'End Client',\r\n        },\r\n        {\r\n            dataField: 'c.J_Status',\r\n            text: 'Status',\r\n        },\r\n        {\r\n            dataField: 'c.J_CreatedOn',\r\n            text: 'Created On',\r\n        },\r\n        {\r\n            dataField: 'c.J_AssignUser',\r\n            text: 'Assign To',\r\n            headerStyle: (colum, colIndex) => {\r\n                return { width: '200px'};\r\n              }\r\n        },  \r\n        {\r\n            dataField: 'actions',\r\n            text: 'Action',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary p-0\"\r\n                    onClick={() => showActionStatus(row)}\r\n                    title=\"Edit\"\r\n                  >\r\n                   Action\r\n                  </button>\r\n                );\r\n              },\r\n        },\r\n        {\r\n            dataField: 'summary',\r\n            text: 'Summary',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary p-0\"\r\n                    onClick={() => setsummarydeatailsmodal(row)}\r\n                    title=\"Edit\"\r\n                  >\r\n                   Summary\r\n                  </button>\r\n                );\r\n              },\r\n        },\r\n    ];\r\n  //Action modal start///\r\n  const [modal2, setModal2] = useState(false);\r\n  const  [status, setstatus] = useState('');\r\n  const [jid, setjid]=useState('');\r\n  const toggle2 = () => setModal2(!modal2);\r\n  function showActionStatus(row, id) {\r\n      var newjid =row.c.J_Id;\r\n      setjid(newjid);\r\n      toggle2();\r\n  }\r\n  \r\n  const handleSubmitAction = (e) => {\r\n      e.preventDefault();\r\n    //var getcfid=formtDetails.cfid;\r\n     var data = {\r\n      status: status,\r\n      jid:jid\r\n    };\r\n      \r\n      var config = {\r\n        method: 'PUT',\r\n        url: `${urlpattern}UpdateRequirementStatus?jid=${jid}&status=${status}`,          \r\n        data : data\r\n      };\r\n      console.log(data);\r\n      axios(config)\r\n      .then(function (response) {\r\n        console.log(JSON.stringify(response.data));\r\n        getCriticalRequirementList();\r\n        //swal(\"Status Updated Successful\", \"success\");\r\n        toggle2();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    };\r\n\r\n  //Action modal end///\r\n  //Summary modal start///  \r\n  const {\r\n    // buttonLabel,\r\n     className\r\n   } = props;\r\n  const [modal3, setModal3] = useState(false);\r\n  //const [summaryjid, setsummaryjid]=useState();\r\n  const toggle3 = () => setModal3(!modal3);\r\n  const [summarydetails, setsummarydetails]=useState([]);\r\n  function setsummarydeatailsmodal(row, id) {\r\n     // var newjid =row.jid;\r\n      \r\n     // setsummaryjid(row.jid);\r\n            \r\n      toggle3();\r\n      var config = {\r\n          method: 'GET',\r\n          url: `${urlpattern}ViewRequirementSummary?jid=${row.c.J_Id}`,   \r\n        };\r\n        axios(config)\r\n        .then(function (response) {\r\n          console.log(JSON.stringify(response.data.Data));\r\n         var newsumdeta= response.data.Data;\r\n         setsummarydetails(newsumdeta);\r\n          //swal(\"Status Updated Successful\", \"success\");\r\n          //toggle2();\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  // const handleSubmitSummry = (e) => {   \r\n  //     console.log(summaryjid, \"findal summary\");  \r\n     \r\n  //   };\r\n    //Summary modal end\r\n\r\n  const[viewSingleRequirement, setviewSingleRequirement]=useState([]);\r\n  function showRequrementDetails(row , id) {  \r\n      setshowrequrement(!showrequrement);\r\n      var viewrequrementdetails =row;\r\n     // console.log(row, \"showRequrementDetails\");\r\n      setviewSingleRequirement(viewrequrementdetails);\r\n      setActiveTab('1');\r\n   }\r\n//    function showResumeUploadtDetails(row , id) {  \r\n//       setshowrequrement(!showrequrement);\r\n//       var viewrequrementdetails =row;\r\n//      // console.log(row, \"showRequrementDetails\");\r\n//       setviewSingleRequirement(viewrequrementdetails);\r\n//       setActiveTab('2');\r\n//    }\r\n//    function showSetInterviewDetails(row , id) {  \r\n//       setshowrequrement(!showrequrement);\r\n//       var viewrequrementdetails =row;\r\n//      // console.log(row, \"showRequrementDetails\");\r\n//       setviewSingleRequirement(viewrequrementdetails);\r\n//       setActiveTab('3');\r\n//    }\r\n//    function showSetOfferDetails(row , id) {  \r\n//       setshowrequrement(!showrequrement);\r\n//       var viewrequrementdetails =row;\r\n//      // console.log(row, \"showRequrementDetails\");\r\n//       setviewSingleRequirement(viewrequrementdetails);\r\n//       setActiveTab('4');\r\n//    }\r\n \r\n//    Requirement details section\r\nconst goBackToRequirement=()=>{\r\n  setshowrequrement(!showrequrement);\r\n  \r\n}\r\nvar setsumrymodal =summarydetails || [];\r\nconsole.log(setsumrymodal, \"modal summary data\");\r\n    return (\r\n        <React.Fragment>\r\n            {showrequrement ?<Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>:\r\n            <Row>\r\n            <div className=\"col-sm-12\">\r\n            <Nav tabs className=\"second-level-tab nav nav-tabs justify-content-start\">\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            \r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"upload-li\">\r\n          <NavLink\r\n            className={ classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Upload Resume\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Set Interview\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '4' })}\r\n            onClick={() => { toggle('4'); }}\r\n          >\r\n            Offer\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n          \r\n        <TabPane tabId=\"1\">\r\n            <Row>\r\n                <div className=\"header-info\">Requirement Details</div>\r\n            </Row>\r\n            <Col sm=\"12\">\r\n              <ShowRequirementCritical viewSingleRequirement={viewSingleRequirement} goBackToRequirement={goBackToRequirement}/>\r\n            </Col>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n            <Col sm=\"12\">\r\n             <ResumeUpload viewSingleRequirement={viewSingleRequirement} goBackToRequirement={goBackToRequirement}/>\r\n            </Col>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n            <Col sm=\"12\">\r\n             <SetInterview viewSingleRequirement={viewSingleRequirement} goBackToRequirement={goBackToRequirement}/>\r\n            </Col>\r\n        </TabPane>\r\n        <TabPane tabId=\"4\">\r\n            <Col sm=\"12\">\r\n              <SetOffer viewSingleRequirement={viewSingleRequirement} goBackToRequirement={goBackToRequirement}/>\r\n            </Col>\r\n        </TabPane>\r\n      </TabContent>\r\n    </div>\r\n            </Row>\r\n}\r\n<Modal isOpen={modal2} toggle={toggle2} className={className}>\r\n            <form onSubmit={handleSubmitAction}>\r\n        <ModalHeader toggle={toggle2}>Change Status</ModalHeader>\r\n        <ModalBody>\r\n        <Row>\r\n                       <Col lg={12}>\r\n                     <label>Status</label>\r\n                           <select className=\"form-control\"\r\n                            onChange={(e) => {\r\n                                setstatus(e.target.value);\r\n                              }}\r\n                              name=\"status\">\r\n                               <option value=\"\">Select</option>\r\n                               <option value=\"Active\">Active</option>\r\n                               <option value=\"Deactive\">Deactive</option>\r\n                               <option value=\"Hold\">Hold</option>\r\n                               <option value=\"Delete\">Delete</option>\r\n                               <option value=\"Close\">Close</option>\r\n                           </select>\r\n                       </Col>\r\n                       </Row>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n          <Button color=\"primary\" onClick={toggle2}>Cancel</Button>\r\n        </ModalFooter>\r\n        </form>\r\n      </Modal>\r\n      <Modal isOpen={modal3} toggle={toggle3} className={className}>\r\n            <form onSubmit={handleSubmitAction}>\r\n        {/* <ModalHeader toggle={toggle3}>Change Status</ModalHeader> */}\r\n        <ModalBody>\r\n        <Row>\r\n            <Col lg={12}>\r\n                     <label>Submission : {summarydetails.submission}</label><br/>\r\n                     <label>Interview : {summarydetails.interview}</label><br/>\r\n                     <label>Offer : {summarydetails.offer}</label><br/>\r\n                     <label>Start : {summarydetails.start}</label><br/>\r\n                     <label>BD : {summarydetails.bd}</label><br/>\r\n             </Col>\r\n        </Row>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={toggle3}>Close</Button>\r\n        </ModalFooter>\r\n        </form>\r\n      </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default CriticalRequirement;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button,  Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport AddRequirement from './AddRequirement';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport ViewRequirement from './ViewRequirement';\r\nimport CriticalRequirement from './CriticalRequirement';\r\nconst Requirement = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"page-title\">\r\n                <Col md={6}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Requirement', path: '/requirement', active: true },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"text-right\">\r\n                <Button color=\"primary\"><i className=\"uil uil-plus\"></i>ADD ITEM</Button>\r\n                </Col>\r\n            </Row>\r\n      <Nav tabs className=\"requirement-tab pt-3 pb-3 nav nav-tabs row bg-white\">\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Add Requirement\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            View Requirement\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Critical Requirement\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <AddRequirement/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <ViewRequirement/>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n          <CriticalRequirement/>\r\n        </TabPane >\r\n      </TabContent>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Requirement;"],"sourceRoot":""}