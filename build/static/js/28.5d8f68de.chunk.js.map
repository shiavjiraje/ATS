{"version":3,"sources":["pages/salaryslip/uploadsalaryarche/UploadSalryArche.js","pages/salaryslip/uploadsalaryreyna/UploadSalryReyna.js","pages/salaryslip/viewsalaryslip/ViewSalrySlip.js","pages/salaryslip/SalrySlip.js"],"names":["UploadSalryArche","dispatch","useDispatch","useState","srmonth","setsrmonth","srattrition","setsrattrition","srbd","setsrbd","srclient","setsrclient","srtotgp","setsrtotgp","sractualstart","setsractualstart","sravggpadded","setsravggpadded","srnettotgp","setsrnettotgp","srstart","setsrstart","srnettotgpadded","setsrnettotgpadded","srtypeofemployement","setsrtypeofemployement","React","label","value","selectMonth","clientList","useSelector","state","Client","clients","useEffect","getClientList","Fragment","Form","onSubmit","e","preventDefault","reqBody","setRevenue","Row","Col","lg","FormGroup","Label","for","className","required","name","id","onChange","target","disabled","selected","map","selmonth","key","Input","type","client","cid","cname","UploadSalryReyna","months","setmonths","years","setyears","bd","setbd","join","setjoin","setclient","position","setposition","passthrough","setpassthrough","business","setbusiness","bulkdeal","setbulkdeal","submission","setsubmission","poextend","setpoextend","intreceived","setintreceived","totrevenue","settotrevenue","attrition","setattrition","feedbackpending","setfeedbackpending","noshow","setnoshow","remark","setremark","offer","setoffer","setMonth","setmonth","year","Date","getFullYear","Array","from","v","i","getDropList","ViewSalrySlip","getUsername","Auth","user","Username","dt","setdt","poc","setpoc","agenda","setagenda","username","setCall","style","height","desabled","SalrySlip","props","activeTab","setActiveTab","toggle","tab","md","PageTitle","breadCrumbItems","path","active","Button","color","Nav","tabs","NavItem","NavLink","classnames","onClick","TabContent","TabPane","tabId"],"mappings":"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","file":"static/js/28.5d8f68de.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, FormGroup, Form, Label, Input} from 'reactstrap';\r\nimport { getClientList } from '../../../redux/client/actions';\r\nimport { setRevenue } from '../../../redux/salesrevenue/actions';\r\n//import axios from 'axios';\r\n// import Select from 'react-select';\r\nconst UploadSalryArche = () => { \r\n    const dispatch = useDispatch();\r\n    const [srmonth, setsrmonth]=useState([]);\r\n    const [srattrition, setsrattrition]=useState('');\r\n    const [srbd, setsrbd]=useState('');\r\n    const [srclient, setsrclient]=useState('');\r\n    const [srtotgp, setsrtotgp]=useState('');\r\n    const [sractualstart, setsractualstart]=useState('');\r\n    const [sravggpadded, setsravggpadded]=useState('');\r\n    const [srnettotgp, setsrnettotgp]=useState('');\r\n    const [srstart, setsrstart]=useState('');\r\n    const [srnettotgpadded, setsrnettotgpadded]=useState('');\r\n   // const [srmargintype,setsrmargintype]=useState('');\r\n    const [srtypeofemployement, setsrtypeofemployement]=useState('');\r\n    \r\n\r\n    \r\n  \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const reqBody ={\r\n            srmonth:srmonth,\r\n            srattrition:srattrition,\r\n            srbd:srbd,\r\n            srclient:srclient,\r\n            srtotgp:srtotgp,\r\n            sractualstart:sractualstart,\r\n            sravggpadded:sravggpadded,\r\n            srnettotgp:srnettotgp,\r\n            srstart:srstart,\r\n            srnettotgpadded:srnettotgpadded,\r\n           // srmargintype:srmargintype,\r\n            srtypeofemployement:srtypeofemployement\r\n        };\r\n        dispatch(setRevenue(reqBody));\r\n    }\r\n    const [selectMonth] = React.useState([\r\n        { label: 'January', value: 'January'},\r\n        { label: 'February', value: 'February' },\r\n        { label: 'March', value: 'March' },\r\n        { label: 'April', value: 'April' },\r\n        { label: 'May', value: 'May' },\r\n        { label: 'June', value: 'June' },\r\n        { label: 'July', value: 'July' },\r\n        { label: 'August', value: 'August' },\r\n        { label: 'September', value: 'September' },\r\n        { label: 'October', value: 'October' },\r\n        { label: 'November', value: 'November' },\r\n        { label: 'December', value: 'December' },\r\n\r\n    ]);\r\n   \r\n    let clientList = useSelector((state) => state.Client.clients || []);\r\n    useEffect( () => {\r\n        dispatch(getClientList());\r\n    \r\n        // eslint-disable-next-line\r\n      }, [] );\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Form onSubmit={handleSubmit}>\r\n                                <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Select Month <span className=\"redspan\">*</span></Label>\r\n                                    <select className=\"form-control style-input\" required\r\n                                   name=\"srmonth\" id=\"srmonth\" onChange={(e) => {\r\n                                    setsrmonth (e.target.value);\r\n                                }}>\r\n                                     <option disabled selected value=\"\">Select</option>\r\n                                {selectMonth.map((selmonth) => (\r\n                                    <option key={selmonth.value} value={selmonth.value}>\r\n                                        {selmonth.label}\r\n                                    </option>\r\n                                ))}\r\n                                   </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Attrition</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"srattrition\"\r\n                                        name=\"srattrition\" onChange={(e) => {\r\n                                            setsrattrition (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                       \r\n                        <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Select Client <span className=\"redspan\">*</span></Label>\r\n                                    <select className=\"form-control style-input\" required\r\n                                   name=\"srclient\" id=\"srclient\" onChange={(e) => {\r\n                                    setsrclient (e.target.value);\r\n                                }}>\r\n                                     <option disabled selected value=\"\">Select</option>\r\n                                     {clientList.map((client) => (\r\n                                    <option key={client.cid} value={client.cid}>\r\n                                        {client.cname}\r\n                                    </option>\r\n                                ))}\r\n                                   </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            </Row>\r\n                        <Row className=\"mt-3\">\r\n                        <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">BD </Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"srbd\"\r\n                                        name=\"srbd\" onChange={(e) => {\r\n                                            setsrbd (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Total GP </Label>\r\n                                    <Input\r\n                                        type=\"text\"  required\r\n                                        className=\"style-input\"\r\n                                        id=\"srtotgp\"\r\n                                        name=\"srtotgp\" onChange={(e) => {\r\n                                            setsrtotgp (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Actual Start</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"sractualstart\"\r\n                                        name=\"sractualstart\" onChange={(e) => {\r\n                                            setsractualstart (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"mt-3\">\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Avg GP Added <span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"sravggpadded\"\r\n                                        name=\"sravggpadded\" onChange={(e) => {\r\n                                            setsravggpadded (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Net Total GP </Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"srnettotgp\"\r\n                                        name=\"srnettotgp\" onChange={(e) => {\r\n                                            setsrnettotgp (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Start </Label>\r\n                                    <Input\r\n                                        type=\"date\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"srstart\"\r\n                                        name=\"srstart\" onChange={(e) => {\r\n                                            setsrstart (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-3\">\r\n                            {/* <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Total GP Added</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"srmargintype\"\r\n                                        className=\"style-input\"\r\n                                        name=\"srmargintype\" onChange={(e) => {\r\n                                            setsrmargintype (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col> */}\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Net Total GP Added </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"srnettotgpadded\"\r\n                                        name=\"srnettotgpadded\" onChange={(e) => {\r\n                                            setsrnettotgpadded (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                       \r\n                           \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Type Of Employement</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"srtypeofemployement\"\r\n                                        name=\"srtypeofemployement\" onChange={(e) => {\r\n                                            setsrtypeofemployement (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"mt-3\">\r\n                        <Col lg={12}>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                            <button className=\"btn btn-secondary ml-3\">Cancel</button>\r\n                            </Col>\r\n                        </Row>\r\n                        </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default UploadSalryArche;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, FormGroup, Form, Label, Input} from 'reactstrap';\r\nimport { getClientList } from '../../../redux/client/actions';\r\nimport { setMonth } from '../../../redux/salesmonthreport/actions';\r\n//import axios from 'axios';\r\n// import Select from 'react-select';\r\nconst UploadSalryReyna = () => { \r\n    const dispatch = useDispatch();\r\n    const [months, setmonths]=useState('');\r\n    const [years, setyears]=useState('');\r\n    const [bd, setbd]=useState('');\r\n    const [join, setjoin]=useState('');\r\n    const [client, setclient]=useState('');\r\n    const [position, setposition]=useState('');\r\n    const [passthrough, setpassthrough]=useState('');\r\n    const [business, setbusiness]=useState('');\r\n    const [bulkdeal, setbulkdeal]=useState('');\r\n    const [submission, setsubmission]=useState('');\r\n    const [poextend, setpoextend]=useState('');\r\n    const [intreceived, setintreceived]=useState('');\r\n    const [totrevenue, settotrevenue]=useState('');\r\n    const [attrition, setattrition]=useState('');\r\n    const [feedbackpending, setfeedbackpending]=useState('');\r\n    const [noshow, setnoshow]=useState([]);\r\n    const [remark, setremark]=useState('');\r\n    const [offer, setoffer]=useState('');\r\n\r\n    \r\n\r\n    \r\n  \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const reqBody ={\r\n            months:months,\r\n            years:years,\r\n            bd:bd,\r\n            join:join,\r\n            client:client,\r\n            position:position,\r\n            passthrough:passthrough,\r\n            business:business,\r\n            bulkdeal:bulkdeal,\r\n            submission:submission,\r\n            poextend:poextend,\r\n            intreceived:intreceived,\r\n            totrevenue:totrevenue,\r\n            attrition:attrition,\r\n            feedbackpending:feedbackpending,\r\n            noshow:noshow,\r\n            remark:remark,\r\n            offer:offer,\r\n        };\r\n        dispatch(setMonth(reqBody));\r\n    }\r\n   const  getDropList = () => {\r\n        const year = new Date().getFullYear();\r\n      return (\r\n          Array.from( new Array(50), (v,i) =>\r\n            <option key={i} value={year+i}>{year+i}</option>\r\n        )\r\n      );\r\n    };\r\n    let clientList = useSelector((state) => state.Client.clients || []);\r\n    useEffect( () => {\r\n        dispatch(getClientList());\r\n    \r\n        // eslint-disable-next-line\r\n      }, [] );\r\n      const [selectMonth] = React.useState([\r\n        { label: 'January', value: 'January'},\r\n        { label: 'February', value: 'February' },\r\n        { label: 'March', value: 'March' },\r\n        { label: 'April', value: 'April' },\r\n        { label: 'May', value: 'May' },\r\n        { label: 'June', value: 'June' },\r\n        { label: 'July', value: 'July' },\r\n        { label: 'August', value: 'August' },\r\n        { label: 'September', value: 'September' },\r\n        { label: 'October', value: 'October' },\r\n        { label: 'November', value: 'November' },\r\n        { label: 'December', value: 'December' },\r\n\r\n    ]);\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Form onSubmit={handleSubmit}>\r\n                                <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Select Month <span className=\"redspan\">*</span></Label>\r\n                                    <select className=\"form-control style-input\" required\r\n                                   name=\"months\" id=\"months\" onChange={(e) => {\r\n                                    setmonths (e.target.value);\r\n                                }}>\r\n                                     <option disabled selected value=\"\">Select</option>\r\n                                {selectMonth.map((setmonth) => (\r\n                                    <option key={setmonth.value} value={setmonth.value}>\r\n                                        {setmonth.label}\r\n                                    </option>\r\n                                ))}\r\n                                   </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Select Year <span className=\"redspan\">*</span></Label>\r\n                                    <select className=\"form-control style-input\" required\r\n                                   name=\"years\" id=\"years\" onChange={(e) => {\r\n                                    setyears (e.target.value);\r\n                                }}>\r\n                                     <option disabled selected value=\"\">Select</option>\r\n                                     {getDropList()}\r\n                                   </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">BD</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"bd\"\r\n                                        name=\"bd\" onChange={(e) => {\r\n                                            setbd (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-3\">\r\n                        <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Select Client <span className=\"redspan\">*</span></Label>\r\n                                    <select className=\"form-control style-input\" required\r\n                                   name=\"client\" id=\"client\" onChange={(e) => {\r\n                                    setclient (e.target.value);\r\n                                }}>\r\n                                     <option disabled selected value=\"\">Select</option>\r\n                                     {clientList.map((client) => (\r\n                                    <option key={client.cid} value={client.cid}>\r\n                                        {client.cname}\r\n                                    </option>\r\n                                ))}\r\n                                   </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                           \r\n                        <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Join</Label>\r\n                                    <Input\r\n                                        type=\"text\" \r\n                                        className=\"style-input\"\r\n                                        id=\"join\"\r\n                                        name=\"join\" onChange={(e) => {\r\n                                            setjoin (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                       \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Open Position </Label>\r\n                                    <Input\r\n                                        type=\"text\"  \r\n                                        className=\"style-input\"\r\n                                        id=\"position\"\r\n                                        name=\"position\" onChange={(e) => {\r\n                                            setposition (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col> \r\n                            </Row>\r\n                        <Row className=\"mt-3\">\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Passthrough</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"passthrough\"\r\n                                        name=\"passthrough\" onChange={(e) => {\r\n                                            setpassthrough (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                       \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Business Recieved</Label>\r\n                                    <Input\r\n                                        type=\"text\" \r\n                                        className=\"style-input\"\r\n                                        id=\"business\"\r\n                                        name=\"business\" onChange={(e) => {\r\n                                            setbusiness (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Bulkdeal</Label>\r\n                                    <Input\r\n                                        type=\"text\" \r\n                                        className=\"style-input\"\r\n                                        id=\"bulkdeal\"\r\n                                        name=\"bulkdeal\" onChange={(e) => {\r\n                                            setbulkdeal (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-3\">\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">No. Of Submission </Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"submission\"\r\n                                        name=\"submission\" onChange={(e) => {\r\n                                            setsubmission (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                           \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">PO Extend </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"poextend\"\r\n                                        name=\"poextend\" onChange={(e) => {\r\n                                            setpoextend (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                       \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Interview Recieved</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"intreceived\"\r\n                                        className=\"style-input\"\r\n                                        name=\"intreceived\" onChange={(e) => {\r\n                                            setintreceived (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            </Row>\r\n                        <Row className=\"mt-3\">\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Attrition Saved</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"attrition\"\r\n                                        name=\"attrition\" onChange={(e) => {\r\n                                            setattrition (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                       \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Feedback Pending</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"feedbackpending\"\r\n                                        className=\"style-input\"\r\n                                        name=\"feedbackpending\" onChange={(e) => {\r\n                                            setfeedbackpending (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Total Revenue</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"totrevenue\"\r\n                                        name=\"totrevenue\" onChange={(e) => {\r\n                                            settotrevenue (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            </Row>\r\n                        <Row className=\"mt-3\">\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">No Show</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"noshow\"\r\n                                        className=\"style-input\"\r\n                                        name=\"noshow\" onChange={(e) => {\r\n                                            setnoshow (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                          \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Remark</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"remark\"\r\n                                        name=\"remark\" onChange={(e) => {\r\n                                            setremark (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                       \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Offer</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"offer\"\r\n                                        className=\"style-input\"\r\n                                        name=\"offer\" onChange={(e) => {\r\n                                            setoffer (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={12}>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                            <button className=\"btn btn-secondary ml-3\">Cancel</button>\r\n                            </Col>\r\n                        </Row>\r\n                        </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default UploadSalryReyna;\r\n\r\n\r\n","import React, { useEffect, useState} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, FormGroup, Form, Label} from 'reactstrap';\r\nimport { getClientList } from '../../../redux/client/actions';\r\nimport { setCall } from '../../../redux/salescallreport/actions';\r\n\r\nconst ViewSalrySlip = () => {\r\n    let clientList = useSelector((state) => state.Client.clients || []);\r\n    let loginDetails = useSelector((state)=> state.Auth.user || []);\r\n    //console.log(loginDetails.Username);\r\n    var getUsername = loginDetails.Username;\r\n    const [dt, setdt]=useState('');\r\n    const [client, setclient]=useState('');\r\n    const [poc, setpoc]=useState('');\r\n    const [agenda, setagenda]=useState('');\r\n    const dispatch = useDispatch();\r\n     useEffect(() => {\r\n        dispatch(getClientList());\r\n         // eslint-disable-next-line \r\n     }, []);\r\n     const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n       const reqBody ={\r\n        dt:dt,\r\n        client:client,\r\n        poc:poc,\r\n        agenda:agenda,\r\n        username:getUsername\r\n       // teammember\r\n       }\r\n       dispatch(setCall(reqBody));\r\n     }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col className=\"col-md-6 offset-md-3\">\r\n                        <div className=\"card p-5\" style={{height:'600px'}}>\r\n                        <h5 className=\"text-uppercase  text-center\">Create Team</h5>\r\n                    <Row>\r\n                    <Col lg={12}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoApellidos\">Call Date</Label>\r\n                                    <input type=\"date\" name=\"dt\" className=\"form-control\" id=\"dt\" \r\n                                        onChange={(e) => {\r\n                                            setdt (e.target.value);\r\n                                        }} />\r\n                                    \r\n                                   \r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={12}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Select Client</Label>\r\n                                   \r\n                                    <select className=\"form-control\" name=\"client\"\r\n                                    id=\"client\"  onChange={(e) => {\r\n                                        setclient (e.target.value);\r\n                                    }}>\r\n                                         <option selected desabled>Select</option>\r\n                                         {clientList.map((client) => (\r\n                                    <option key={client.cid} value={client.cid}>\r\n                                        {client.cname}\r\n                                    </option>\r\n                                ))}\r\n                                    </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={12}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoApellidos\">POC</Label>\r\n                                    <input type=\"text\" name=\"poc\" className=\"form-control\" id=\"poc\" \r\n                                        onChange={(e) => {\r\n                                            setpoc (e.target.value);\r\n                                        }} />\r\n                                    \r\n                                   \r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={12}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoApellidos\">Agenda</Label>\r\n                                    <input type=\"text\" name=\"agenda\" className=\"form-control\" id=\"agenda\" \r\n                                        onChange={(e) => {\r\n                                            setagenda (e.target.value);\r\n                                        }} />\r\n                                    \r\n                                   \r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={12}>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            <button className=\"btn btn-secondary ml-3\">Cancel</button>\r\n                            </Col>\r\n                        </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            \r\n                       \r\n                        </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewSalrySlip;\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button,  Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport UploadSalryArche from './uploadsalaryarche/UploadSalryArche';\r\nimport UploadSalryReyna from './uploadsalaryreyna/UploadSalryReyna';\r\nimport ViewSalrySlip from './viewsalaryslip/ViewSalrySlip';\r\nconst SalrySlip = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"page-title\">\r\n                <Col md={6}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Salry Slip', path: '/salryslip', active: true },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"text-right\">\r\n                <Button color=\"primary\"><i className=\"uil uil-plus\"></i>ADD ITEM</Button>\r\n                </Col>\r\n            </Row>\r\n      <Nav tabs className=\"requirement-tab pt-3 pb-3 nav nav-tabs row bg-white\">\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Upload Salary Sheet Arche Softronix\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Upload Salary Sheet Reyna\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            View Salary Slip\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <UploadSalryArche/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <UploadSalryReyna/>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n         <ViewSalrySlip/>\r\n        </TabPane >\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default SalrySlip;"],"sourceRoot":""}