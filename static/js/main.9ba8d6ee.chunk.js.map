{"version":3,"sources":["redux/recruiter/actions.js","redux/requirement/actions.js","redux/teamLead/actions.js","redux/holiday/actions.js","redux/leave/actions.js","redux/salesuser/actions.js","redux/layout/actions.js","redux/appMenu/actions.js","redux/activity/constants.js","redux/list/constants.js","redux/allreport/constants.js","redux/auth/constants.js","redux/layout/constants.js","pages/master/usermaster/ViewUser.js","redux/requirement/constants.js","redux/activity/actions.js","redux/user/constants.js","redux/appMenu/constants.js","redux/user/actions.js","redux/role/constants.js","redux/client/constants.js","redux/teammaster/constants.js","redux/clientwisesales/constants.js","redux/allreport/actions.js","redux/list/actions.js","components/PageTitle.js","pages/hr/AttendanceReport.js","pages/hr/Holidays.js","pages/hr/ApplyForLeave.js","pages/hr/LeaveBalance.js","pages/hr/ViewLeave.js","pages/hr/Hr.js","pages/attendance/Attedance.js","pages/acyivity/TargetSubmission.js","pages/acyivity/OfferAndHire/LastMonthJoining.js","pages/acyivity/OfferAndHire/MonthOffer.js","pages/acyivity/OfferAndHire/TodaysInterView.js","pages/acyivity/OfferAndHire.js","pages/acyivity/Graph.js","pages/acyivity/AtsActivity.js","pages/acyivity/SearchResume.js","pages/acyivity/Activity.js","pages/sales/revenue/AddRevenue.js","pages/sales/revenue/ViewRevenue.js","pages/sales/revenue/RevenueNav.js","pages/sales/monthreport/AddMonthReport.js","pages/sales/monthreport/ViewMonthReport.js","pages/sales/monthreport/MonthNav.js","pages/sales/teammaster/AddTeam.js","pages/sales/teammaster/ViewTeam.js","pages/sales/teammaster/TeamNav.js","pages/sales/Sales.js","pages/clientwisesales/AssignClient.js","pages/clientwisesales/ViewSalesClient.js","pages/clientwisesales/ClientWiseSales.js","routes/index.js","routes/Routes.js","helpers/fake-backend.js","App.js","serviceWorker.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/user/reducers.js","redux/requirement/reducers.js","redux/client/reducers.js","redux/recruiter/reducers.js","redux/attendance/reducers.js","redux/list/reducers.js","redux/activity/reducers.js","redux/teammaster/reducers.js","redux/role/reducers.js","redux/leave/reducers.js","redux/holiday/reducers.js","redux/clientwisesales/reducers.js","redux/salesuser/reducers.js","redux/allreport/reducers.js","redux/teamLead/reducers.js","redux/reducers.js","helpers/api.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","helpers/axios.js","helpers/restApi.js","redux/user/sagas.js","redux/requirement/sagas.js","redux/client/sagas.js","redux/recruiter/sagas.js","redux/attendance/sagas.js","redux/list/sagas.js","redux/activity/sagas.js","redux/teammaster/sagas.js","redux/role/sagas.js","redux/leave/sagas.js","redux/holiday/sagas.js","redux/clientwisesales/sagas.js","redux/salesuser/sagas.js","redux/allreport/sagas.js","redux/teamLead/sagas.js","redux/sagas.js","redux/store.js","index.js","redux/attendance/actions.js","constants/layout.js","redux/role/actions.js","redux/client/actions.js","redux/teammaster/actions.js","redux/attendance/constants.js","redux/holiday/constants.js","redux/leave/constants.js","redux/recruiter/constants.js","redux/teamLead/constants.js","redux/salesuser/constants.js","redux/auth/actions.js","helpers/authUtils.js","redux/clientwisesales/actions.js"],"names":["getRecruiterList","type","GET_RECRUITER_LIST_REQUEST","setRecruiter","recruiters","SET_RECRUITER_LIST_REQUEST","payload","getRequirementList","GET_REQUIREMENTS_LIST_REQUEST","setRequirement","requirements","SET_REQUIREMENTS_LIST_REQUEST","getCriticalRequirementList","GET_CRITICAL_REQUIREMENTS_LIST","setCriticalRequirement","criticalreq","SET_CRITICAL_REQUIREMENTS_LIST","setSaveRequirement","requirement","jid","SET_SAVE_REQUIREMENTS","id","getRequirementModal","GET_REQUIREMENTS_MODAL","hideRequirementModal","HIDE_REQUIREMENTS_MODAL","getTeamLeadList","GET_TEAMLEAD_LIST_REQUEST","setTeamLead","teamlead","SET_TEAMLEAD_LIST_REQUEST","getHolidayList","GET_HOLIDAY_LIST_REQUEST","setHoliday","holiday","SET_HOLIDAY_LIST_REQUEST","getLeaveList","GET_LEAVE_LIST_REQUEST","setLeave","leave","SET_LEAVE_LIST_REQUEST","getSalesUserList","GET_SALESUSER_LIST_REQUEST","setSalesUser","salesuser","SET_SALESUSER_LIST_REQUEST","changeLayout","layout","CHANGE_LAYOUT","changeLayoutWidth","width","CHANGE_LAYOUT_WIDTH","changeSidebarTheme","theme","CHANGE_SIDEBAR_THEME","changeSidebarType","sidebarType","CHANGE_SIDEBAR_TYPE","showRightSidebar","SHOW_RIGHT_SIDEBAR","hideRightSidebar","HIDE_RIGHT_SIDEBAR","initMenu","INIT_MENU","initMenuSuccess","menuItems","INIT_MENU_SUCCESS","changeActiveMenuFromLocation","CHANGE_ACTIVE_MENU_FROM_LOCATION","changeActiveMenuFromLocationSuccess","activatedMenuItemIds","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","GET_DT_LIST_REQUEST","SET_DT_LIST_REQUEST","GET_TOIN_LIST_REQUEST","SET_TOIN_LIST_REQUEST","GET_MONOF_LIST_REQUEST","SET_MONOF_LIST_REQUEST","GET_MONTHJOIN_LIST_REQUEST","SET_MONTHJOIN_LIST_REQUEST","GET_ATSACTI_LIST_REQUEST","SET_ATSACTI_LIST_REQUEST","GET_LIST_LIST_REQUEST","SET_LIST_LIST_REQUEST","GET_OFFER_LIST_REQUEST","SET_OFFER_LIST_REQUEST","GET_VTBJ_LIST_REQUEST","SET_VTBJ_LIST_REQUEST","GET_JOIN_LIST_REQUEST","SET_JOIN_LIST_REQUEST","GET_BD_LIST_REQUEST","SET_BD_LIST_REQUEST","GET_DATEWISE_LIST_REQUEST","SET_DATEWISE_LIST_REQUEST","GET_MONTHCOUNT_LIST_REQUEST","SET_MONTHCOUNT_LIST_REQUEST","GET_TODAY_LIST_REQUEST","SET_TODAY_LIST_REQUEST","GET_REVENU_LIST_REQUEST","SET_REVENU_LIST_REQUEST","GET_RPR_LIST_REQUEST","SET_RPR_LIST_REQUEST","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGOUT_USER","FORGET_PASSWORD","FORGET_PASSWORD_SUCCESS","FORGET_PASSWORD_FAILED","TOGGLE_RIGHT_SIDEBAR","defaultSorted","dataField","order","sizePerPageRenderer","options","currSizePerPage","onSizePerPageChange","Fragment","className","name","defaultValue","onChange","e","target","value","map","option","idx","key","text","TableWithSearch","props","SearchBar","Search","useState","rowData","setrowData","rowEvent","onDoubleClick","row","alert","console","log","NoDataIndication","bootstrap4","keyField","data","records","columns","search","md","searchProps","baseProps","bordered","rowEvents","noDataIndication","pagination","paginationFactory","sizePerPage","sizePerPageList","length","ViewUser","dispatch","useDispatch","useSelector","state","Users","users","useEffect","getUserList","hidden","sort","formatter","cellContent","onClick","title","SAVE_REQUIREMENTS","getDailyTargetList","setDailyTargetList","dailytarget","getTodaysInterviewList","setTodaysInterviewList","todaysinterview","getMonthOfferList","setMonthOfferList","monthoffer","getMonthToBeJoinList","setMonthToBeJoinList","monthtobejoin","getAtsActivityList","setAtsActivityList","atsactivity","GET_USER_LIST_REQUEST","SET_USER_LIST_REQUEST","ADD_USER","ADD_USER_REQUEST","GET_ERROR","getUser","setUser","user","setUserRquest","GET_ROLE_LIST_REQUEST","SET_ROLE_LIST_REQUEST","CREATE_ROLE","CREATE_ROLE_SUCCESS","GET_CLIENT_LIST_REQUEST","SET_CLIENT_LIST_REQUEST","CREATE_CLIENT","CREATE_CLIENT_SUCCESS","GET_TEAM_LIST_REQUEST","SET_TEAM_LIST_REQUEST","CREATE_TEAM","CREATE_TEAM_SUCCESS","GET_CWS_LIST_REQUEST","SET_CWS_LIST_REQUEST","CREATE_CWS","CREATE_CWS_SUCCESS","getDatewiseReportList","setDatewiseReport","datewsiereport","getMonthCountReportList","setMonthCountReport","monthcountreport","getTodayReportList","setTodayReport","todayrepoert","getRevenuReportList","setRevenuReport","revenureport","getReqReportList","setReqReport","reqreport","setList","list","getOfferList","setOfferList","offer","getViewToBeJoinList","setViewToBeJoinList","viewtobejoin","getJoinList","setJoinList","joinlist","getBDList","setBDList","bdlist","PageTitle","items","breadCrumbItems","to","item","index","active","label","path","Input","Row","Col","AttendanceReport","Attendance","attendance","getAttendanceList","placeholder","Holidays","Holiday","ApplyForLeave","Component","render","onValidSubmit","this","handleValidSubmit","Label","for","InputGroup","InputGroupAddon","addonType","required","FormGroup","Button","ExportCSVButton","CSVExport","UncontrolledDropdown","DropdownToggle","data-toggle","tag","DropdownMenu","right","csvProps","wrapperClasses","LeaveBalance","ViewLeave","Leave","Hr","activeTab","setActiveTab","toggle","tab","color","Nav","tabs","NavItem","NavLink","classnames","TabContent","TabPane","tabId","TargetSubmission","Activity","prevMonthName","moment","format","TodaysInterView","MonthOffer","OfferAndHire","LastMonthJoining","Graph","lg","chart","height","zoom","enabled","toolbar","show","colors","tooltip","x","dataLabels","stroke","curve","align","style","fontSize","grid","opacity","borderColor","markers","size","xaxis","categories","yaxis","min","max","legend","position","horizontalAlign","floating","offsetY","offsetX","responsive","breakpoint","series","AtsActivity","SearchResume","List","AddRevenue","ECode","EEtype","setEEtype","EBankName","setEBankName","EFullname","setEFullname","ECompany_Name","EAccountNo","EGender","EDepartment","setEDepartment","EBranch","setEBranch","EEmail","setEEmail","EDesignation","setEDesignation","EIFC_Code","EDOB","setEDOB","ELocation","setELocation","EPFAccount","EAddress","ECAddress","EOfferDate","setEOfferDate","EPAN_No","setEPAN_No","EJoinDate","EAadhar_no","ERole","ESalary","EPostal","EUserName","EPF","EContNo","EPassword","EPT","EEmergencyContNo","EBloodGroup","EESI","EPFApply","EPTApply","EESIApply","Ephoto","React","selectEmpType","Role","role","getRoleList","Form","onSubmit","preventDefault","reqBody","disabled","selected","emptype","class","ViewRevenue","RevenueNav","AddMonthReport","ViewMonthReport","Client","clients","getClientList","MonthNav","AddTeam","currentTime","recruterList","Recruiter","teamLeadList","TeamLead","createdby","setCreatedby","setTeamlead","teammember","setSelectedValue","createTeam","desabled","teamLead","i","EId","onSelect","selectedList","selectedItem","onRemove","removedItem","displayValue","showCheckbox","ViewTeam","Teams","teams","getTeamList","TeamTabs","Sales","AssignClient","setCid","setUid","clientList","salesUserList","SalesUser","salesusers","client","cid","cname","ViewSalesClient","CWS","cws","getCwsList","ClientWiseSales","Login","lazy","Logout","Register","ForgetPassword","Confirm","Dashboard","dashboardOld","Requirement","Masters","Report","PrivateRoute","component","roles","rest","isUserAuthenticated","pathname","from","location","loggedInUser","getLoggedInUser","indexOf","rootRoute","exact","route","dashboardRoutes","icon","FeatherIcon","requirementRoutes","listRoutes","attendanceRoutes","activityRoutes","hrRoutes","masterRoutes","viewUserRoutes","clientWiseSalesRoutes","clientwisesales","reportRoutes","revenueRoutes","asplRoutes","authRoutes","children","Route","flattenRoutes","routes","flatRoutes","forEach","push","authProtectedRoutes","allFlattenRoutes","loading","AuthLayout","Loadable","loader","loaded","default","VerticalLayout","HorizontalLayout","Routes","getLayout","layoutCls","layoutType","layoutConstants","Layout","connect","Auth","username","password","firstName","lastName","realFetch","window","fetch","url","opts","Promise","resolve","reject","setTimeout","endsWith","method","params","JSON","parse","body","filteredUsers","filter","responseJson","token","ok","json","fullname","split","newUser","message","headers","Authorization","then","response","configureFakeBackend","App","Boolean","hostname","match","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","action","error","passwordResetStatus","AppMenu","createclients","createteam","createrole","createcws","combineReducers","Requirements","modal","GET_ATTENDANCE_LIST_REQUEST","SET_ATTENDANCE_LIST_REQUEST","fetchJSON","status","catch","login","logout","register","forgetPassword","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","Cookies","set","stringify","remove","call","Data","Message","put","loginUserSuccess","loginUserFailed","history","email","registerUserSuccess","registerUserFailed","forgetPasswordSuccess","forgetPasswordFailed","takeEvery","all","fork","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","document","setAttribute","manageBodyClass","cssClass","classList","add","changeLeftSidebarThemeAction","changeSidebarTypeAction","uuid","assignIdAndParent","parentId","initMenuAndItems","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","menuItem","assignIds","api","axios","create","baseURL","process","REACT_APP_BACKEND_URL","interceptors","use","originalRequest","config","guid","localStorage","getItem","defaults","common","_retry","post","GUID","res","get","getCriticleRequirementList","setClient","getAttendance","getListList","getTodaysInterviewtList","setTeam","getTeamLead","createRole","getLeave","getHoliday","setCws","getReqReport","getDatewiseReport","getMonthCountReport","getTodayReport","getRevenuReport","watchGetUserRequest","watchSetUser","userSagas","actions","result","watchGetRequirementRequest","watchSetSaveRequirement","watchCriticalRequirement","requirementSagas","watchGetClientRequest","watchSetClientRequest","clientSagas","watchGetRecruiterRequest","recruiterSagas","watchGetAttendanceRequest","attendanceSagas","watchGetListRequest","watchGetOfferRequest","watchGetViewToBeJoinRequest","watchGetJoinRequest","watchGetBDRequest","listSagas","watchGetDailyTargetRequest","watchGetTodaysInterviewRequest","watchGetMonthOfferRequest","watchGetMonthToBeJoinRequest","watchGetAtsActivityRequest","activitySagas","watchGetTeamRequest","watchSetTeamRequest","teamSagas","watchGetRoleRequest","watchSetRoleRequest","roleSagas","watchGetLeaveRequest","leaveSagas","watchGetHolidayRequest","holidaySagas","watchGetCwsRequest","watchSetCwsRequest","cwsSagas","watchGetSalesUserRequest","salesUserSagas","watchGetReqReportRequest","watchGetDatewiseReportRequest","watchGetMonthCountReportRequest","watchGetTodayReportRequest","watchGetRevenuReportRequest","reqReportSagas","watchGetTeamLeadRequest","teamLeadSagas","rootSaga","getState","layoutSaga","userSaga","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","getElementById","navigator","serviceWorker","ready","registration","unregister","setAttendance","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","getRolelistRequest","createRoleSuccess","setClientList","createClient","createClientSuccess","createTeamSuccess","loginUser","rememberme","registerUser","logoutUser","decoded","jwtDecode","Date","now","exp","warn","setCwsList","createCwsSuccess"],"mappings":"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","file":"static/js/main.9ba8d6ee.chunk.js","sourcesContent":["import {GET_RECRUITER_LIST_REQUEST, \r\n   SET_RECRUITER_LIST_REQUEST,} from './constants';\r\n\r\n   \r\nexport const getRecruiterList =()=>({\r\n  type:GET_RECRUITER_LIST_REQUEST\r\n})\r\n\r\nexport const setRecruiter = ( recruiters ) => ( {\r\n  type: SET_RECRUITER_LIST_REQUEST,\r\n  payload: recruiters\r\n} );","import {GET_REQUIREMENTS_LIST_REQUEST, SET_REQUIREMENTS_LIST_REQUEST,\r\n  SAVE_REQUIREMENTS, SET_SAVE_REQUIREMENTS,\r\n  GET_CRITICAL_REQUIREMENTS_LIST, SET_CRITICAL_REQUIREMENTS_LIST,\r\n  GET_REQUIREMENTS_MODAL, \r\n  HIDE_REQUIREMENTS_MODAL} from './constants';\r\n\r\n\r\nexport const getRequirementList =()=>({\r\n  type:GET_REQUIREMENTS_LIST_REQUEST\r\n})\r\n\r\nexport const setRequirement = ( requirements ) => ( {\r\n  type: SET_REQUIREMENTS_LIST_REQUEST,\r\n  payload: requirements\r\n} );\r\nexport const getCriticalRequirementList =()=>({\r\n  type:GET_CRITICAL_REQUIREMENTS_LIST\r\n})\r\n\r\nexport const setCriticalRequirement = ( criticalreq ) => ( {\r\n  type: SET_CRITICAL_REQUIREMENTS_LIST,\r\n  payload: criticalreq\r\n} );\r\n\r\nexport const saveRequirement =()=>({\r\n  type:SAVE_REQUIREMENTS\r\n})\r\n\r\nexport const setSaveRequirement = ( requirement, jid ) => ( {\r\n  type: SET_SAVE_REQUIREMENTS,\r\n  payload: requirement,\r\n  id:jid\r\n} );\r\nexport const getRequirementModal = () => ( {\r\n  type: GET_REQUIREMENTS_MODAL\r\n} );\r\n\r\nexport const hideRequirementModal = () => ( {\r\n  type: HIDE_REQUIREMENTS_MODAL\r\n} );","import {GET_TEAMLEAD_LIST_REQUEST, \r\n   SET_TEAMLEAD_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getTeamLeadList =()=>({\r\n  type:GET_TEAMLEAD_LIST_REQUEST\r\n})\r\n\r\nexport const setTeamLead = ( teamlead ) => ( {\r\n  type: SET_TEAMLEAD_LIST_REQUEST,\r\n  payload: teamlead\r\n} );","import {GET_HOLIDAY_LIST_REQUEST, \r\n   SET_HOLIDAY_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getHolidayList =()=>({\r\n  type:GET_HOLIDAY_LIST_REQUEST\r\n})\r\n\r\nexport const setHoliday = ( holiday ) => ( {\r\n  type: SET_HOLIDAY_LIST_REQUEST,\r\n  payload: holiday\r\n} );","import {GET_LEAVE_LIST_REQUEST, \r\n   SET_LEAVE_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getLeaveList =()=>({\r\n  type:GET_LEAVE_LIST_REQUEST\r\n})\r\n\r\nexport const setLeave = ( leave ) => ( {\r\n  type: SET_LEAVE_LIST_REQUEST,\r\n  payload: leave\r\n} );","import {GET_SALESUSER_LIST_REQUEST, \r\n   SET_SALESUSER_LIST_REQUEST,} from './constants';\r\n\r\n   \r\nexport const getSalesUserList =()=>({\r\n  type:GET_SALESUSER_LIST_REQUEST\r\n})\r\n\r\nexport const setSalesUser = ( salesuser ) => ( {\r\n  type: SET_SALESUSER_LIST_REQUEST,\r\n  payload: salesuser\r\n} );","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\n\r\nexport const changeLayout = (layout) => ({\r\n    type: CHANGE_LAYOUT,\r\n    payload: layout,\r\n});\r\n\r\nexport const changeLayoutWidth = (width) => ({\r\n    type: CHANGE_LAYOUT_WIDTH,\r\n    payload: width,\r\n});\r\n\r\nexport const changeSidebarTheme = (theme) => ({\r\n    type: CHANGE_SIDEBAR_THEME,\r\n    payload: theme,\r\n});\r\n\r\nexport const changeSidebarType = (sidebarType) => ({\r\n    type: CHANGE_SIDEBAR_TYPE,\r\n    payload: sidebarType,\r\n});\r\n\r\nexport const toggleRightSidebar = () => ({\r\n    type: TOGGLE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const showRightSidebar = () => ({\r\n    type: SHOW_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const hideRightSidebar = () => ({\r\n    type: HIDE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n","// @flow\r\nimport {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\nexport const initMenu = () => ({\r\n    type: INIT_MENU,\r\n    payload: {},\r\n});\r\n\r\nexport const initMenuSuccess = (menuItems) => ({\r\n    type: INIT_MENU_SUCCESS,\r\n    payload: { menuItems },\r\n});\r\n\r\nexport const changeActiveMenuFromLocation = () => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    payload: {},\r\n});\r\n\r\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds) => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n    payload: { activatedMenuItemIds },\r\n});\r\n","\r\n/** List of Daily Target */\r\nexport const GET_DT_LIST_REQUEST = 'GET_DT_LIST_REQUEST';\r\nexport const SET_DT_LIST_REQUEST = 'SET_DT_LIST_REQUEST';\r\n\r\n/** List of Todays Interview */\r\nexport const GET_TOIN_LIST_REQUEST = 'GET_TOIN_LIST_REQUEST';\r\nexport const SET_TOIN_LIST_REQUEST = 'SET_TOIN_LIST_REQUEST';\r\n\r\n/** List of Month Offer */\r\nexport const GET_MONOF_LIST_REQUEST = 'GET_MONOF_LIST_REQUEST';\r\nexport const SET_MONOF_LIST_REQUEST = 'SET_MONOF_LIST_REQUEST';\r\n\r\n/** List of Month to be join */\r\nexport const GET_MONTHJOIN_LIST_REQUEST = 'GET_MONTHJOIN_LIST_REQUEST';\r\nexport const SET_MONTHJOIN_LIST_REQUEST = 'SET_MONTHJOIN_LIST_REQUEST';\r\n\r\n/** List of Month to be join */\r\nexport const GET_ATSACTI_LIST_REQUEST = 'GET_ATSACTI_LIST_REQUEST';\r\nexport const SET_ATSACTI_LIST_REQUEST = 'SET_ATSACTI_LIST_REQUEST';","\r\n/** List of LIST */\r\nexport const GET_LIST_LIST_REQUEST = 'GET_LIST_LIST_REQUEST';\r\nexport const SET_LIST_LIST_REQUEST = 'SET_LIST_LIST_REQUEST';\r\n\r\n\r\n/** Offer of LIST */\r\nexport const GET_OFFER_LIST_REQUEST = 'GET_OFFER_LIST_REQUEST';\r\nexport const SET_OFFER_LIST_REQUEST = 'SET_OFFER_LIST_REQUEST';\r\n\r\n/** ViewToBeJoin of LIST */\r\nexport const GET_VTBJ_LIST_REQUEST = 'GET_VTBJ_LIST_REQUEST';\r\nexport const SET_VTBJ_LIST_REQUEST = 'SET_VTBJ_LIST_REQUEST';\r\n\r\n/** Join  LIST */\r\nexport const GET_JOIN_LIST_REQUEST = 'GET_JOIN_LIST_REQUEST';\r\nexport const SET_JOIN_LIST_REQUEST = 'SET_JOIN_LIST_REQUEST';\r\n\r\n/** BD  LIST */\r\nexport const GET_BD_LIST_REQUEST = 'GET_BD_LIST_REQUEST';\r\nexport const SET_BD_LIST_REQUEST = 'SET_BD_LIST_REQUEST';","\r\n\r\n\r\n/** List of datewise Report */\r\nexport const GET_DATEWISE_LIST_REQUEST = 'GET_DATEWISE_LIST_REQUEST';\r\nexport const SET_DATEWISE_LIST_REQUEST = 'SET_DATEWISE_LIST_REQUEST';\r\n\r\n/** List of MonthCount Report */\r\nexport const GET_MONTHCOUNT_LIST_REQUEST = 'GET_MONTHCOUNT_LIST_REQUEST';\r\nexport const SET_MONTHCOUNT_LIST_REQUEST = 'SET_MONTHCOUNT_LIST_REQUEST';\r\n\r\n/** List of Today Report */\r\nexport const GET_TODAY_LIST_REQUEST = 'GET_TODAY_LIST_REQUEST';\r\nexport const SET_TODAY_LIST_REQUEST = 'SET_TODAY_LIST_REQUEST';\r\n\r\n/** List of Revenue Report */\r\nexport const GET_REVENU_LIST_REQUEST = 'GET_REVENU_LIST_REQUEST';\r\nexport const SET_REVENU_LIST_REQUEST = 'SET_REVENU_LIST_REQUEST';\r\n\r\n/** List of Requirement Progress Report */\r\nexport const GET_RPR_LIST_REQUEST = 'GET_RPR_LIST_REQUEST';\r\nexport const SET_RPR_LIST_REQUEST = 'SET_RPR_LIST_REQUEST';","/* AUTH */\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\r\nexport const REGISTER_USER = 'REGISTER_USER';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\r\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\r\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\r\n","/* LAYOUT */\r\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\r\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\r\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\r\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\r\n\r\n/* RIGHT SIDEBAR */\r\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\r\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\r\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getUserList } from '../../../redux/user/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\n\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                    \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewUser = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Users.users);\r\n  // console.log(records, 'join list');\r\n    useEffect(() => {\r\n        dispatch(getUserList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField:'id',\r\n            text:'ID',\r\n            hidden: true\r\n        },\r\n        {\r\n            dataField: 'ECode',\r\n            text: 'Employee Code.',\r\n            //sort: true,\r\n        },\r\n        {\r\n            dataField: 'EFullname',\r\n            text: 'Name',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'ECompany_Name',\r\n            text: 'Company',\r\n        },\r\n        {\r\n            dataField: 'EDesignation',\r\n            text: 'Designation',\r\n        },\r\n        {\r\n            dataField: 'ELocation',\r\n            text: 'Location',\r\n        },\r\n        {\r\n            dataField: 'ERole',\r\n            text: 'Role',\r\n        },\r\n        {\r\n            dataField: 'EEmail',\r\n            text: 'Email',\r\n        },\r\n        {\r\n            dataField: 'email',\r\n            text: 'Edit',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary\"\r\n                    onClick={() => _validateFunction(row)}\r\n                    title=\"Edit\"\r\n                  >\r\n                   <FeatherIcon.Edit />\r\n                  </button>\r\n                );\r\n              },\r\n        },\r\n        {\r\n            dataField: 'Delete',\r\n            text: 'Delete',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary\"\r\n                    onClick={() => _validateFunction(row)}\r\n                    title=\"Delete\"\r\n                  >\r\n                   <FeatherIcon.Trash2 />\r\n                  </button>\r\n                );\r\n              },\r\n        } \r\n    ];\r\n    function _validateFunction(row , id) {    \r\n        // console.log(\"activity id :\",(id));\r\n         // dispatch(getRequirementModal((row)));\r\n \r\n         //dispatch( setSaveRequirement( row) );\r\n \r\n          //   dispatch( getRequirementModal() );\r\n     }\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewUser;\r\n\r\n\r\n","/** List of Requirement */\r\nexport const GET_REQUIREMENTS_LIST_REQUEST = 'GET_REQUIREMENTS_LIST_REQUEST';\r\nexport const SET_REQUIREMENTS_LIST_REQUEST = 'SET_REQUIREMENTS_LIST_REQUEST';\r\n/** List of Requirement */\r\nexport const GET_CRITICAL_REQUIREMENTS_LIST = 'GET_CRITICAL_REQUIREMENTS_LIST';\r\nexport const SET_CRITICAL_REQUIREMENTS_LIST = 'SET_CRITICAL_REQUIREMENTS_LIST';\r\n\r\n/** List of Requirement */\r\nexport const SAVE_REQUIREMENTS = 'SAVE_REQUIREMENTS';\r\nexport const SET_SAVE_REQUIREMENTS = 'SET_SAVE_REQUIREMENTS';\r\n\r\n//modal\r\nexport const GET_REQUIREMENTS_MODAL = 'GET_REQUIREMENTS_MODAL';\r\nexport const HIDE_REQUIREMENTS_MODAL = 'HIDE_REQUIREMENTS_MODAL';\r\n","import {\r\n    GET_DT_LIST_REQUEST,\r\n    SET_DT_LIST_REQUEST,\r\n    GET_TOIN_LIST_REQUEST,\r\n    SET_TOIN_LIST_REQUEST,\r\n    GET_MONOF_LIST_REQUEST,\r\n    SET_MONOF_LIST_REQUEST,\r\n    GET_MONTHJOIN_LIST_REQUEST,\r\n    SET_MONTHJOIN_LIST_REQUEST,\r\n    GET_ATSACTI_LIST_REQUEST,\r\n    SET_ATSACTI_LIST_REQUEST\r\n} from './constants';\r\n\r\n//Daily target\r\nexport const getDailyTargetList = () => ({\r\n    type: GET_DT_LIST_REQUEST,\r\n});\r\n\r\nexport const setDailyTargetList = (dailytarget) => ({\r\n    type: SET_DT_LIST_REQUEST,\r\n    payload: dailytarget,\r\n});\r\n//Todays Interview\r\nexport const getTodaysInterviewList = () => ({\r\n    type: GET_TOIN_LIST_REQUEST,\r\n});\r\n\r\nexport const setTodaysInterviewList = (todaysinterview) => ({\r\n    type: SET_TOIN_LIST_REQUEST,\r\n    payload: todaysinterview,\r\n});\r\n//Month Offer\r\nexport const getMonthOfferList = () => ({\r\n  type: GET_MONOF_LIST_REQUEST,\r\n});\r\n\r\nexport const setMonthOfferList = (monthoffer) => ({\r\n  type: SET_MONOF_LIST_REQUEST,\r\n  payload: monthoffer,\r\n});\r\n//Month To Be Join\r\nexport const getMonthToBeJoinList = () => ({\r\n  type: GET_MONTHJOIN_LIST_REQUEST,\r\n});\r\n\r\nexport const setMonthToBeJoinList = (monthtobejoin) => ({\r\n  type: SET_MONTHJOIN_LIST_REQUEST,\r\n  payload: monthtobejoin,\r\n});\r\n\r\n//Ats Activity\r\nexport const getAtsActivityList = () => ({\r\n  type: GET_ATSACTI_LIST_REQUEST,\r\n});\r\n\r\nexport const setAtsActivityList = (atsactivity) => ({\r\n  type: SET_ATSACTI_LIST_REQUEST,\r\n  payload: atsactivity,\r\n});","\r\n/** List of Client */\r\nexport const GET_USER_LIST_REQUEST = 'GET_USER_LIST_REQUEST';\r\nexport const SET_USER_LIST_REQUEST = 'SET_USER_LIST_REQUEST';\r\n\r\n//Create User\r\nexport const ADD_USER = 'ADD_USER';\r\nexport const ADD_USER_REQUEST = 'ADD_USER_REQUEST';\r\n\r\n//error\r\nexport const GET_ERROR = 'GET_ERROR';","/* APP MENU */\r\nexport const INIT_MENU = 'INIT_MENU';\r\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\r\n","\r\nimport {GET_USER_LIST_REQUEST, \r\n   SET_USER_LIST_REQUEST, ADD_USER, ADD_USER_REQUEST, GET_ERROR} from './constants';\r\n\r\n\r\nexport const getUserList =()=>({\r\n  type:GET_USER_LIST_REQUEST,\r\n  \r\n})\r\n\r\nexport const getUser = ( users ) => ( {\r\n  type: SET_USER_LIST_REQUEST,\r\n  payload: users\r\n} );\r\n\r\nexport const setUser = ( user ) => ( {\r\n  type: ADD_USER,\r\n  payload: user\r\n} );\r\nexport const setUserRquest = ( user ) => ( {\r\n  type: ADD_USER_REQUEST,\r\n  payload: user\r\n} );\r\nexport const getError = ( error ) => ( {\r\n  type: GET_ERROR,\r\n  payload: error\r\n} );","\r\n/** List of Client */\r\nexport const GET_ROLE_LIST_REQUEST = 'GET_ROLE_LIST_REQUEST';\r\nexport const SET_ROLE_LIST_REQUEST = 'SET_ROLE_LIST_REQUEST';\r\n\r\n//\r\nexport const CREATE_ROLE = 'CREATE_ROLE';\r\nexport const CREATE_ROLE_SUCCESS = 'CREATE_ROLE_SUCCESS';\r\n\r\n","\r\n/** List of Client */\r\nexport const GET_CLIENT_LIST_REQUEST = 'GET_CLIENT_LIST_REQUEST';\r\nexport const SET_CLIENT_LIST_REQUEST = 'SET_CLIENT_LIST_REQUEST';\r\n//Add Client\r\nexport const CREATE_CLIENT = 'CREATE_CLIENT';\r\nexport const CREATE_CLIENT_SUCCESS = 'CREATE_CLIENT_SUCCESS';","\r\n/** List of Team */\r\nexport const GET_TEAM_LIST_REQUEST = 'GET_TEAM_LIST_REQUEST';\r\nexport const SET_TEAM_LIST_REQUEST = 'SET_TEAM_LIST_REQUEST';\r\n\r\n//Add Team\r\nexport const CREATE_TEAM = 'CREATE_TEAM';\r\nexport const CREATE_TEAM_SUCCESS = 'CREATE_TEAM_SUCCESS';","\r\n/** List of CWS */\r\nexport const GET_CWS_LIST_REQUEST = 'GET_CWS_LIST_REQUEST';\r\nexport const SET_CWS_LIST_REQUEST = 'SET_CWS_LIST_REQUEST';\r\n//Add CWS\r\nexport const CREATE_CWS = 'CREATE_CWS';\r\nexport const CREATE_CWS_SUCCESS = 'CREATE_CWS_SUCCESS';","import {GET_RPR_LIST_REQUEST, \r\n   SET_RPR_LIST_REQUEST,GET_DATEWISE_LIST_REQUEST, SET_DATEWISE_LIST_REQUEST, GET_MONTHCOUNT_LIST_REQUEST, SET_MONTHCOUNT_LIST_REQUEST,\r\n  GET_TODAY_LIST_REQUEST, SET_TODAY_LIST_REQUEST, GET_REVENU_LIST_REQUEST, SET_REVENU_LIST_REQUEST} from './constants';\r\n\r\n\r\n\r\n//date wise report\r\nexport const getDatewiseReportList =()=>({\r\n  type:GET_DATEWISE_LIST_REQUEST\r\n});\r\nexport const setDatewiseReport = ( datewsiereport ) => ( {\r\n  type: SET_DATEWISE_LIST_REQUEST,\r\n  payload: datewsiereport\r\n} );\r\n\r\n//Month count report\r\nexport const getMonthCountReportList =()=>({\r\n  type:GET_MONTHCOUNT_LIST_REQUEST\r\n});\r\nexport const setMonthCountReport = ( monthcountreport ) => ( {\r\n  type: SET_MONTHCOUNT_LIST_REQUEST,\r\n  payload: monthcountreport\r\n} );\r\n\r\n//Today report\r\nexport const getTodayReportList =()=>({\r\n  type:GET_TODAY_LIST_REQUEST\r\n});\r\nexport const setTodayReport = ( todayrepoert ) => ( {\r\n  type: SET_TODAY_LIST_REQUEST,\r\n  payload: todayrepoert\r\n} );\r\n\r\n//Revenu report\r\nexport const getRevenuReportList =()=>({\r\n  type:GET_REVENU_LIST_REQUEST\r\n})\r\n\r\nexport const setRevenuReport = ( revenureport ) => ( {\r\n  type: SET_REVENU_LIST_REQUEST,\r\n  payload: revenureport\r\n} );\r\n\r\n//requirement report\r\nexport const getReqReportList =()=>({\r\n  type:GET_RPR_LIST_REQUEST\r\n});\r\nexport const setReqReport = ( reqreport ) => ( {\r\n  type: SET_RPR_LIST_REQUEST,\r\n  payload: reqreport\r\n} );","import {\r\n    GET_LIST_LIST_REQUEST,\r\n    SET_LIST_LIST_REQUEST,\r\n    GET_OFFER_LIST_REQUEST,\r\n    SET_OFFER_LIST_REQUEST,\r\n    GET_VTBJ_LIST_REQUEST,\r\n    SET_VTBJ_LIST_REQUEST,\r\n    GET_JOIN_LIST_REQUEST,\r\n    SET_JOIN_LIST_REQUEST,\r\n    GET_BD_LIST_REQUEST,\r\n    SET_BD_LIST_REQUEST\r\n} from './constants';\r\n\r\nexport const getListList = () => ({\r\n    type: GET_LIST_LIST_REQUEST,\r\n});\r\n\r\nexport const setList = (list) => ({\r\n    type: SET_LIST_LIST_REQUEST,    \r\n    payload: list,\r\n    \r\n});\r\n//offer\r\nexport const getOfferList = () => ({\r\n    type: GET_OFFER_LIST_REQUEST,\r\n});\r\n\r\nexport const setOfferList = (offer) => ({\r\n    type: SET_OFFER_LIST_REQUEST,\r\n    payload: offer,\r\n});\r\n//View to be join\r\nexport const getViewToBeJoinList = () => ({\r\n    type: GET_VTBJ_LIST_REQUEST,\r\n});\r\n\r\nexport const setViewToBeJoinList = (viewtobejoin) => ({\r\n    type: SET_VTBJ_LIST_REQUEST,\r\n    payload: viewtobejoin,\r\n});\r\n\r\n//Join List\r\nexport const getJoinList = () => ({\r\n  type: GET_JOIN_LIST_REQUEST,\r\n});\r\nexport const setJoinList = (joinlist) => ({\r\n  type: SET_JOIN_LIST_REQUEST,\r\n  payload: joinlist,\r\n});\r\n\r\n//BD List\r\nexport const getBDList = () => ({\r\n  type: GET_BD_LIST_REQUEST,\r\n});\r\nexport const setBDList = (bdlist) => ({\r\n  type: SET_BD_LIST_REQUEST,\r\n  payload: bdlist,\r\n});\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\n/**\r\n * Renders the PageTitle\r\n */\r\nconst PageTitle = (props) => {\r\n    //const title = props.title || \"\";\r\n    const items = props.breadCrumbItems || \"\";\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Breadcrumb className=\" mt-2 font-size-14\">\r\n                <BreadcrumbItem>\r\n                    <Link to=\"/\">ATS</Link>\r\n                </BreadcrumbItem>\r\n                {items.map((item, index) => {\r\n                    return item.active ? (\r\n                        <BreadcrumbItem active key={index}>\r\n                            {item.label}\r\n                        </BreadcrumbItem>\r\n                    ) : (\r\n                            <BreadcrumbItem key={index}>\r\n                                <Link to={item.path}>{item.label}</Link>\r\n                            </BreadcrumbItem>\r\n                        );\r\n                })}\r\n            </Breadcrumb>\r\n\r\n            {/* <h4 className=\"mb-1 mt-0\">{title}</h4> */}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PageTitle;","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search} from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\n//import * as FeatherIcon from 'react-feather';\r\nimport { getAttendanceList } from '../../redux/attendance/actions'; \r\n//import PageTitle from '../../components/PageTitle';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //        // dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getAttendanceReportModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst AttendanceReport = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n    let records = useSelector((state) => state.Attendance.attendance);\r\n   //console.log(records)\r\n    useEffect(() => {\r\n        dispatch(getAttendanceList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'aname',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'intime',\r\n            text:\"In Time\"\r\n        },\r\n        {\r\n            dataField: 'inip',\r\n            text: 'IP',\r\n        },\r\n        {\r\n            dataField: 'outtime',\r\n            text: 'Out Time',\r\n        },\r\n        {\r\n            dataField: 'outip',\r\n            text: 'IP',\r\n        },\r\n        {\r\n            dataField: 'atime',\r\n            text: 'Total Time',\r\n        }\r\n    ];\r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AttendanceReport;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\n//import * as FeatherIcon from 'react-feather';\r\nimport { getHolidayList } from '../../redux/holiday/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n   // const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         //dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getHolidaysModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={12} className=\"\">\r\n                                <div className=\"input-group mb-3\">\r\n                                <div className=\"input-group-prepend\">\r\n                                <button className=\"btn btn-primary pl-5 pr-5\" type=\"button\">Create</button>\r\n                                </div>\r\n                                <input type=\"text\" className=\"form-control search-style\" placeholder=\"Holiday Name :\"/>\r\n                                <input type=\"date\" className=\"form-control search-style\" placeholder=\"Date :\"/>\r\n                                <input type=\"text\" className=\"form-control search-style\" placeholder=\"Day\"/>\r\n                                </div>\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst Holidays = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Holiday.holiday);\r\n   console.log(records)\r\n    useEffect(() => {\r\n        dispatch(getHolidayList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'name',\r\n            text: 'Holiday Name.',\r\n        },\r\n        {\r\n            dataField:'date',\r\n            text:\"Date\"\r\n        },\r\n        {\r\n            dataField: 'day',\r\n            text: 'Day',\r\n        },\r\n        {\r\n            dataField: 'type',\r\n            text: 'Type',\r\n        }\r\n    ];\r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Holidays;\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport {\r\n    Label,\r\n    FormGroup,\r\n    Button,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n} from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvFeedback } from 'availity-reactstrap-validation';\r\nimport { User, Calendar, File } from 'react-feather';\r\n\r\nclass ApplyForLeave extends Component {\r\n    // _isMounted = false;\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 offset-md-3\">\r\n                            <AvForm onValidSubmit={this.handleValidSubmit} className=\"authentication-form card p-5\">\r\n                                \r\n                            <h5 className=\"text-uppercase  text-center\">Apply Your Leave</h5>\r\n                                <AvGroup className=\"\">\r\n                                    <Label for=\"fullname\">Leave Type</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <User className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"text\"\r\n                                            name=\"fullname\"\r\n                                            id=\"fullname\"\r\n                                            required\r\n                                        />\r\n                                    </InputGroup>\r\n\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <AvGroup className=\"\">\r\n                                    <Label for=\"fullname\">Leave For</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <User className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"text\"\r\n                                            name=\"fullname\"\r\n                                            id=\"fullname\"\r\n                                            required\r\n                                        />\r\n                                    </InputGroup>\r\n\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <AvGroup className=\"\">\r\n                                    <Label for=\"email\">Start Date</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <Calendar className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            id=\"email\"\r\n                                            required\r\n                                        />\r\n                                    </InputGroup>\r\n\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n\r\n                                <AvGroup className=\"\">\r\n                                    <Label for=\"email\">End Date</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <Calendar className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            id=\"email\"\r\n                                            required\r\n                                        />\r\n                                    </InputGroup>\r\n\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <AvGroup className=\"mb-3\">\r\n                                    <Label for=\"password\">Reason</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <File className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"text\"\r\n                                            name=\"password\"\r\n                                            id=\"password\"\r\n                                            required\r\n                                        />\r\n                                    </InputGroup>\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <FormGroup className=\"form-group mb-0 text-center\">\r\n                                    <Button className=\"btn-block btn btn-secondary\">\r\n                                        Apply\r\n                                    </Button>\r\n                                </FormGroup>\r\n                            </AvForm>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ApplyForLeave;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search,CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getAttendanceList } from '../../redux/attendance/actions';\r\n\r\n// const defaultSorted = [\r\n//     {\r\n//         dataField: 'id',\r\n//         order: 'asc',\r\n//     },\r\n// ];\r\nconst { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">SHow</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         dispatch( setDepartamento( row ) );\r\n\r\n    //         dispatch( getDepartamentosModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                    \r\n                                <UncontrolledDropdown className=\" profile-dropdown-menu\">\r\n                                <button className=\"btn btn-secondary bg-secondary upbtn  mr-0\">Upload</button>\r\n                <DropdownToggle\r\n                    data-toggle=\"dropdown\"\r\n                    tag=\"button\"\r\n                    className=\"btn btn-secondary dropdown-toggle bg-secondary  mr-0\">\r\n                    Download <FeatherIcon.ChevronDown />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"topbar-dropdown-menu profile-dropdown-items\">\r\n                    <div className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export PDF</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export EXCEL</ExportCSVButton>\r\n                    </div>\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n                                {/* <ExportCSVButton className=\"btn-primary\" { ...props.csvProps }>Export CSV!!</ExportCSVButton> */}\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                // defaultSorted={defaultSorted}\r\n                                //rowEvents={rowEvent}\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                                wrapperClasses=\"table-responsive\"\r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst LeaveBalance = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n    let records = useSelector((state) => state.Attendance.attendance);\r\n    \r\n    console.log(records);\r\n    useEffect(() => {\r\n        dispatch(getAttendanceList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'date',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField: 'day',\r\n            text: 'Type',\r\n        }, \r\n        {\r\n            dataField: 'intime',\r\n            text: 'Total Available',\r\n        }, \r\n        {\r\n            dataField: 'outtime',\r\n            text: 'Total Used',\r\n        }, \r\n        {\r\n            dataField: 'leavebalance',\r\n            text: 'Balance',\r\n        }, \r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default LeaveBalance;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport { getLeaveList } from '../../redux/leave/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         //dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getJoinListModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                              \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewLeave = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Leave.leave);\r\n    useEffect(() => {\r\n        dispatch(getLeaveList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'id',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'type',\r\n            text:\"Type\"\r\n        },\r\n        {\r\n            dataField: 'noofdays',\r\n            text: 'No. Of days',\r\n        },\r\n        {\r\n            dataField: 'reason',\r\n            text: 'Reason',\r\n        },\r\n        {\r\n            dataField: 'startdate',\r\n            text: 'Start Date',\r\n        },\r\n        {\r\n            dataField: 'enddate',\r\n            text: 'End Date',\r\n        },\r\n        {\r\n            dataField: 'leadstatus',\r\n            text: 'TL Status',\r\n        },\r\n        {\r\n            dataField: 'managerstatus',\r\n            text: 'Manager Status',\r\n            \r\n        },  \r\n        {\r\n            dataField: 'adminstatus',\r\n            text: 'HR Status',\r\n        }\r\n    ];\r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewLeave;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button,  Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport AttendanceReport from './AttendanceReport';\r\nimport Holidays from './Holidays';\r\nimport ApplyForLeave from './ApplyForLeave';\r\nimport LeaveBalance from './LeaveBalance';\r\nimport ViewLeave from './ViewLeave';\r\nconst Hr = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"page-title\">\r\n                <Col md={6}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Hr', path: '/hr', active: true },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"text-right\">\r\n                <Button color=\"primary\"><i className=\"uil uil-plus\"></i>ADD ITEM</Button>\r\n                </Col>\r\n            </Row>\r\n      <Nav tabs className=\"requirement-tab hr-tab pt-3 pb-3 nav nav-tabs row bg-white\">\r\n        <NavItem className=\"col-sm-3\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Attedance Report\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-2\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Holidays\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-3\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Apply For Leave\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-2\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '4' })}\r\n            onClick={() => { toggle('4'); }}\r\n          >\r\n            View Leave\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-2 \">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '5' })}\r\n            onClick={() => { toggle('5'); }}\r\n          >\r\n            Leave Balance\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <AttendanceReport/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <Holidays/>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n          <ApplyForLeave/>\r\n        </TabPane >\r\n        <TabPane tabId=\"4\">\r\n          <ViewLeave/>\r\n        </TabPane >\r\n        <TabPane tabId=\"5\">\r\n          <LeaveBalance/>\r\n        </TabPane >\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Hr;","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search,CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport {UncontrolledDropdown, DropdownMenu, DropdownToggle, Button } from 'reactstrap';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getAttendanceList } from '../../redux/attendance/actions';\r\nimport PageTitle from '../../components/PageTitle';\r\n\r\n// const defaultSorted = [\r\n//     {\r\n//         dataField: 'id',\r\n//         order: 'asc',\r\n//     },\r\n// ];\r\nconst { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">SHow</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         dispatch( setDepartamento( row ) );\r\n\r\n    //         dispatch( getDepartamentosModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                    \r\n                                <UncontrolledDropdown className=\" profile-dropdown-menu\">\r\n                                <button className=\"btn btn-secondary bg-secondary upbtn  mr-0\">Upload New</button>\r\n                <DropdownToggle\r\n                    data-toggle=\"dropdown\"\r\n                    tag=\"button\"\r\n                    className=\"btn btn-secondary dropdown-toggle bg-secondary  mr-0\">\r\n                    Download <FeatherIcon.ChevronDown />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"topbar-dropdown-menu profile-dropdown-items\">\r\n                    <div className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export PDF</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export EXCEL</ExportCSVButton>\r\n                    </div>\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n                                {/* <ExportCSVButton className=\"btn-primary\" { ...props.csvProps }>Export CSV!!</ExportCSVButton> */}\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                // defaultSorted={defaultSorted}\r\n                                //rowEvents={rowEvent}\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                                wrapperClasses=\"table-responsive\"\r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst Attendance = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n    let records = useSelector((state) => state.Attendance.attendance);\r\n    \r\n    console.log(records);\r\n    useEffect(() => {\r\n        dispatch(getAttendanceList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'date',\r\n            text: 'Date.',\r\n        },\r\n        {\r\n            dataField: 'day',\r\n            text: 'Day',\r\n        }, \r\n        {\r\n            dataField: 'intime',\r\n            text: 'In Time',\r\n        }, \r\n        {\r\n            dataField: 'outtime',\r\n            text: 'Out Time',\r\n        }, \r\n        {\r\n            dataField: 'totaltime',\r\n            text: 'Total Time',\r\n        }, \r\n        {\r\n            dataField: 'status',\r\n            text: 'Status',\r\n        }, \r\n        {\r\n            dataField: 'leavebalance',\r\n            text: 'Leave Balance',\r\n        }, \r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row className=\"page-title mb-3\">\r\n                <Col md={6}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Attendance', path: '/attendance', active: true },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"text-right\">\r\n                <Button color=\"primary\"><i className=\"uil uil-plus\"></i>ADD ITEM</Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Attendance;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\n//import * as FeatherIcon from 'react-feather';\r\nimport { getDailyTargetList } from '../../redux/activity/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getTargetSubmissionModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                //rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst TargetSubmission = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Activity.dailytarget);\r\n   console.log(records)\r\n    useEffect(() => {\r\n        dispatch(getDailyTargetList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'username',\r\n            text: 'Recruiter Name.',\r\n        },\r\n        {\r\n            dataField:'target',\r\n            text:\"Target\"\r\n        },\r\n        {\r\n            dataField: 'achived',\r\n            text: 'Achived',\r\n        },\r\n        {\r\n            dataField: 'closure',\r\n            text: 'Closure',\r\n        }\r\n    ];\r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TargetSubmission;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport { getMonthToBeJoinList } from '../../../redux/activity/actions';\r\nimport moment from 'moment';\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show </label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //        // dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getTodaysInterViewModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n      //var currMonthName  = moment().format('MMMM');\r\n      var prevMonthName  = moment().format('MMMM');\r\n        //console.log(currMonthName);\r\n        //console.log(prevMonthName);\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                             <Row className=\"mt-3\">\r\n                                <Col md={12} className=\"text-uppercase text-center\">\r\n                                    <h5>{prevMonthName} Joining</h5>\r\n                                </Col>                          \r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                               </Col>                            \r\n                            </Row>\r\n                           \r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst TodaysInterView = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Activity.monthtobejoin);\r\n    useEffect(() => {\r\n        dispatch(getMonthToBeJoinList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'candidatename',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'clientname',\r\n            text:\"Client\"\r\n        },\r\n        {\r\n            dataField: 'dates',\r\n            text: 'Offer Date',\r\n        },\r\n        {\r\n            dataField: 'recruitername',\r\n            text: 'Recruiter',\r\n        }\r\n    ];\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TodaysInterView;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport { getMonthOfferList} from '../../../redux/activity/actions';\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //        // dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getMonthOfferModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                             <Row className=\"mt-3\">\r\n                                <Col md={12} className=\"text-uppercase text-center\">\r\n                                    <h5>Month Offer</h5>\r\n                                </Col>                          \r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                               </Col>                            \r\n                            </Row>\r\n                           \r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst MonthOffer = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Activity.monthoffer);\r\n    useEffect(() => {\r\n        dispatch(getMonthOfferList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'candidatename',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'clientname',\r\n            text:\"Client\"\r\n        },\r\n        {\r\n            dataField: 'dates',\r\n            text: 'Offer Date',\r\n        },\r\n        {\r\n            dataField: 'recruitername',\r\n            text: 'Recruiter',\r\n        }\r\n    ];\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row className=\"bg-white\">\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default MonthOffer;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport { getTodaysInterviewList } from '../../../redux/activity/actions';\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         //dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getTodaysInterViewModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    \r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n          No Records Found\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                             <Row>\r\n                                <Col md={12} className=\"text-uppercase text-center\">\r\n                                    <h5>Today's Interview</h5>\r\n                                </Col>                          \r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                               </Col>                            \r\n                            </Row>\r\n                           \r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst TodaysInterView = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Activity.todaysinterview);\r\n    useEffect(() => {\r\n        dispatch(getTodaysInterviewList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'Candidatename',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'InterviewBy',\r\n            text:\"Interview By\"\r\n        },\r\n        {\r\n            dataField: 'Location',\r\n            text: 'Location',\r\n        },\r\n        {\r\n            dataField: 'Time',\r\n            text: 'Time',\r\n        },\r\n        {\r\n            dataField: 'ContactNo',\r\n            text: 'Contact',\r\n            \r\n        }\r\n    ];\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TodaysInterView;\r\n\r\n\r\n","import React from 'react';\r\nimport LastMonthJoining from './OfferAndHire/LastMonthJoining';\r\nimport MonthOffer from './OfferAndHire/MonthOffer';\r\nimport TodaysInterView from './OfferAndHire/TodaysInterView';\r\nimport { Row, Col } from 'reactstrap';\r\nconst OfferAndHire = () => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TodaysInterView/>\r\n                    <MonthOffer/>\r\n                    <LastMonthJoining/>\r\n                </Col>\r\n            </Row>            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default OfferAndHire;\r\n\r\n\r\n","// @flow\r\nimport React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport Col from 'reactstrap/lib/Col';\r\nimport Row from 'reactstrap/lib/Row';\r\n\r\n// simple line chart\r\nconst Graph = () => {\r\n    const apexLineChartWithLables = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'line',\r\n            zoom: {\r\n                enabled: false,\r\n            },\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        colors: ['#5369f8', '#43d39e', '#f77e53', '#1ce1ac', '#25c2e3', '#ffbe0b'],\r\n        tooltip: {\r\n            theme: 'dark',\r\n            x: { show: false }\r\n        },\r\n        dataLabels: {\r\n            enabled: true,\r\n        },\r\n        stroke: {\r\n            width: [3, 3],\r\n            curve: 'smooth',\r\n        },\r\n        title: {\r\n            text: 'SUBBMISSION / INTERVIEW',\r\n            align: 'left',\r\n            style: {\r\n                fontSize: '14px',\r\n            },\r\n        },\r\n        grid: {\r\n            row: {\r\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\r\n                opacity: 0.2,\r\n            },\r\n            borderColor: '#f1f3fa',\r\n        },\r\n        markers: {\r\n            style: 'inverted',\r\n            size: 6,\r\n        },\r\n        xaxis: {\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n            title: {\r\n                text: 'Ultima actualization hace 15 min',\r\n            },\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: 'Temperature',\r\n            },\r\n            min: 5,\r\n            max: 40,\r\n        },\r\n        legend: {\r\n            position: 'top',\r\n            horizontalAlign: 'right',\r\n            floating: true,\r\n            offsetY: -25,\r\n            offsetX: -5,\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 600,\r\n                options: {\r\n                    chart: {\r\n                        toolbar: {\r\n                            show: false,\r\n                        },\r\n                    },\r\n                    legend: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    const apexLineChartWithLablesData = [\r\n        {\r\n            name: 'High - 2018',\r\n            data: [28, 29, 33, 36, 32, 32, 33],\r\n        },\r\n        {\r\n            name: 'Low - 2018',\r\n            data: [12, 11, 14, 18, 17, 13, 13],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col md={12} className=\"text-uppercase text-center\">\r\n                    <h5>Month Graph</h5>\r\n                </Col>                          \r\n            </Row>\r\n           <Row>\r\n               <Col lg={12} className=\"text-right\">\r\n                    <button className=\"btn btn-primary\">Save As</button>\r\n                    <button className=\"btn btn-secondary ml-2\">Print</button>\r\n               </Col>\r\n          </Row> \r\n                <Chart\r\n                    options={apexLineChartWithLables}\r\n                    series={apexLineChartWithLablesData}\r\n                    type=\"line\"\r\n                    className=\"apex-charts\"\r\n                />\r\n         </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Graph;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\n//import * as FeatherIcon from 'react-feather';\r\nimport { getAtsActivityList } from '../../redux/activity/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getJoinListModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                {/* <UncontrolledDropdown className=\" profile-dropdown-menu\">\r\n                <DropdownToggle\r\n                    data-toggle=\"dropdown\"\r\n                    tag=\"button\"\r\n                    className=\"btn btn-secondary dropdown-toggle bg-secondary  mr-0\">\r\n                    Download <FeatherIcon.ChevronDown />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"topbar-dropdown-menu profile-dropdown-items\">\r\n                    <div className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export PDF</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export EXCEL</ExportCSVButton>\r\n                    </div>\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown> */}\r\n                                {/* <ExportCSVButton className=\"btn-primary\" { ...props.csvProps }>Export CSV!!</ExportCSVButton> */}\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst AtsActivity = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Activity.atsactivity);\r\n    useEffect(() => {\r\n        dispatch(getAtsActivityList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'name',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'activity',\r\n            text:\"Activity\"\r\n        },\r\n        {\r\n            dataField: 'activitytime',\r\n            text: 'Date And Time',\r\n        }\r\n    ];\r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AtsActivity;\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport {\r\n    Label,\r\n    FormGroup,\r\n    Button,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n} from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvFeedback } from 'availity-reactstrap-validation';\r\nimport { Mail, User, Phone, Slack } from 'react-feather';\r\n\r\nclass SearchResume extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 offset-md-3\">\r\n                            <AvForm onValidSubmit={this.handleValidSubmit} className=\"authentication-form card p-5\">\r\n                                \r\n                            <h5 className=\"text-uppercase  text-center\">Search By Resume</h5>\r\n                                <AvGroup className=\"\">\r\n                                    <Label for=\"fullname\">Search By Name</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <User className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"text\"\r\n                                            name=\"fullname\"\r\n                                            id=\"fullname\"\r\n                                            required\r\n                                        />\r\n                                    </InputGroup>\r\n\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <AvGroup className=\"\">\r\n                                    <Label for=\"email\">search By Email</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <Mail className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            id=\"email\"\r\n                                            required\r\n                                        />\r\n                                    </InputGroup>\r\n\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n\r\n                                <AvGroup className=\"mb-3\">\r\n                                    <Label for=\"password\">Search By Number</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <Phone className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"text\"\r\n                                            name=\"password\"\r\n                                            id=\"password\"\r\n                                            required\r\n                                        />\r\n                                    </InputGroup>\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <AvGroup className=\"mb-3\">\r\n                                    <Label for=\"password\">Search By Skill</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <Slack className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"text\"\r\n                                            name=\"password\"\r\n                                            id=\"password\"\r\n                                            required\r\n                                        />\r\n                                    </InputGroup>\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <FormGroup className=\"form-group mb-0 text-center\">\r\n                                    <Button className=\"btn-block btn btn-secondary\">\r\n                                        Search\r\n                                    </Button>\r\n                                </FormGroup>\r\n                            </AvForm>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchResume;\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button,  Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport TargetSubmission from './TargetSubmission';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport OfferAndHire from './OfferAndHire';\r\nimport Graph from './Graph';\r\nimport AtsActivity from './AtsActivity';\r\nimport SearchResume from './SearchResume';\r\nconst List = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"page-title\">\r\n                <Col md={6}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Activity', path: '/activity', active: true },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"text-right\">\r\n                <Button color=\"primary\"><i className=\"uil uil-plus\"></i>ADD ITEM</Button>\r\n                </Col>\r\n            </Row>\r\n      <Nav tabs className=\"requirement-tab pt-3 pb-3 nav nav-tabs row bg-white\">\r\n        <NavItem className=\"col-sm-3\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Target / Submission\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-2\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Offer / Hire\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-2\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Graph\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-2\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '4' })}\r\n            onClick={() => { toggle('4'); }}\r\n          >\r\n            ATS Activity\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-3\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '5' })}\r\n            onClick={() => { toggle('5'); }}\r\n          >\r\n            Search Resume\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <TargetSubmission/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <OfferAndHire/>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n          <Graph/>\r\n        </TabPane >\r\n        <TabPane tabId=\"4\">\r\n          <AtsActivity/>\r\n        </TabPane >\r\n        <TabPane tabId=\"5\">\r\n          <SearchResume/>\r\n        </TabPane >\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default List;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, FormGroup, Form, Label, Input} from 'reactstrap';\r\nimport { getRoleList } from '../../../redux/role/actions';\r\nimport { setUser } from '../../../redux/user/actions';\r\n//import axios from 'axios';\r\n// import Select from 'react-select';\r\nconst AddRevenue = () => { \r\n    const dispatch = useDispatch();\r\n    const [ECode , setECode]=useState('');\r\n    const [EEtype, setEEtype]=useState([]);\r\n    const [EBankName, setEBankName]=useState('');\r\n    const [EFullname, setEFullname]=useState('');\r\n    const [ECompany_Name, setECompany_Name]=useState('');\r\n    const [EAccountNo, setEAccountNo]=useState('');\r\n    const [EGender, setEGender]=useState([]);\r\n    const [EDepartment, setEDepartment]=useState('');\r\n    const [EBranch, setEBranch]=useState('');\r\n    const [EEmail, setEEmail]=useState('');\r\n    const [EDesignation, setEDesignation]=useState('');\r\n    const [EIFC_Code, setEIFC_Code]=useState('');\r\n    const [EDOB, setEDOB]=useState('');\r\n    const [ELocation, setELocation]=useState('');\r\n    const [EPFAccount, setEPFAccount]=useState('');\r\n    const [EAddress, setEAddress]=useState('');\r\n    const [ECAddress, setECAddress]=useState('');\r\n    const [EOfferDate, setEOfferDate]=useState('');\r\n    const [EPAN_No, setEPAN_No]=useState('');\r\n    const [EJoinDate, setEJoinDate]=useState('');\r\n    const [EAadhar_no, setEAadhar_no]=useState('');\r\n    const [ERole, setERole]=useState([]);\r\n    const [ESalary, setESalary]=useState('');\r\n    const [EPostal, setEPostal]=useState('');\r\n    const [EUserName, setEUserName]=useState('');\r\n    const [EPF, setEPF]=useState('');\r\n    const [EContNo, setEContNo]=useState('');\r\n    const [EPassword, setEPassword]=useState('');\r\n    const [EPT, setEPT]=useState('');\r\n    const [EEmergencyContNo, setEEmergencyContNo]=useState('');\r\n    const [EBloodGroup, setEBloodGroup]=useState('');\r\n    const [EESI, setEESI]=useState('');\r\n    const [EPFApply, setEPFApply]=useState(true);\r\n    const [EPTApply, setEPTApply]=useState(true);\r\n    const [EESIApply, setEESIApply]=useState(true);\r\n    const [Ephoto,setEphoto]=useState('');\r\n\r\n    \r\n\r\n    \r\n  \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const reqBody ={\r\n            ECode:ECode ,\r\n            EEtype:EEtype,\r\n            EBankName:EBankName,\r\n            EFullname:EFullname,\r\n            ECompany_Name:ECompany_Name,\r\n            EAccountNo:EAccountNo,\r\n            EGender:EGender,\r\n            EDepartment:EDepartment,\r\n            EBranch:EBranch,\r\n            EEmail:EEmail,\r\n            EDesignation,\r\n            EIFC_Code:EIFC_Code,\r\n            EDOB:EDOB,\r\n            ELocation:ELocation,\r\n            EPFAccount:EPFAccount,\r\n            EAddress:EAddress,\r\n            ECAddress:ECAddress,\r\n            EOfferDate:EOfferDate,\r\n            EPAN_No:EPAN_No,\r\n            EJoinDate:EJoinDate,\r\n            EAadhar_no:EAadhar_no,\r\n            ERole:ERole,\r\n            ESalary:ESalary,\r\n            EPostal:EPostal,\r\n            EUserName:EUserName,\r\n            EPF:EPF,\r\n            EContNo:EContNo,\r\n            EPassword:EPassword,\r\n            EPT:EPT,\r\n            EEmergencyContNo:EEmergencyContNo,\r\n            EBloodGroup:EBloodGroup,\r\n            EESI:EESI,\r\n            EPFApply:EPFApply,\r\n            EPTApply:EPTApply,\r\n            EESIApply:EESIApply,\r\n            Ephoto:Ephoto\r\n        };\r\n        dispatch(setUser(reqBody));\r\n    }\r\n    const [selectEmpType] = React.useState([\r\n        {\r\n            label: 'CONTRACTUAL',\r\n            value: 'CONTRACTUAL',\r\n        },\r\n        { label: 'PERMANENT', value: 'PERMANENT' },\r\n        { label: 'C2H', value: 'C2H' },\r\n    ]);\r\n    const [selectGender] = React.useState([\r\n        { label: 'Male', value: 'Male',  },\r\n        { label: 'Female', value: 'Female' }\r\n    ]);\r\n    let roleList = useSelector((state) => state.Role.role || []);\r\n    useEffect( () => {\r\n        dispatch(getRoleList());\r\n    \r\n        // eslint-disable-next-line\r\n      }, [] );\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Form onSubmit={handleSubmit}>\r\n                                <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Select Month <span className=\"redspan\">*</span></Label>\r\n                                    <select className=\"form-control style-input\" required\r\n                                   name=\"EEtype\" id=\"EEtype\" onChange={(e) => {\r\n                                    setEEtype (e.target.value);\r\n                                }}>\r\n                                     <option disabled selected>Select</option>\r\n                                {selectEmpType.map((emptype) => (\r\n                                    <option key={emptype.value} value={emptype.value}>\r\n                                        {emptype.label}\r\n                                    </option>\r\n                                ))}\r\n                                   </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Attrition</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"EBankName\"\r\n                                        name=\"EBankName\" onChange={(e) => {\r\n                                            setEBankName (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Select Client <span className=\"redspan\">*</span></Label>\r\n                                    <select className=\"form-control style-input\" required\r\n                                   name=\"EEtype\" id=\"EEtype\" onChange={(e) => {\r\n                                    setEEtype (e.target.value);\r\n                                }}>\r\n                                     <option disabled selected>Select</option>\r\n                                {selectEmpType.map((emptype) => (\r\n                                    <option key={emptype.value} value={emptype.value}>\r\n                                        {emptype.label}\r\n                                    </option>\r\n                                ))}\r\n                                   </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">BD </Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"EFullname\"\r\n                                        name=\"EFullname\" onChange={(e) => {\r\n                                            setEFullname (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Total GP </Label>\r\n                                    <Input\r\n                                        type=\"text\"  required\r\n                                        className=\"style-input\"\r\n                                        id=\"EDepartment\"\r\n                                        name=\"EDepartment\" onChange={(e) => {\r\n                                            setEDepartment (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Actual Start</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"EBranch\"\r\n                                        name=\"EBranch\" onChange={(e) => {\r\n                                            setEBranch (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Avg GP Added <span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"email\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"EEmail\"\r\n                                        name=\"EEmail\" onChange={(e) => {\r\n                                            setEEmail (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Net Total GP </Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"EDesignation\"\r\n                                        name=\"EDesignation\" onChange={(e) => {\r\n                                            setEDesignation (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Start </Label>\r\n                                    <Input\r\n                                        type=\"date\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"EDOB\"\r\n                                        name=\"EDOB\" onChange={(e) => {\r\n                                            setEDOB (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Net Total GP Added </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"ELocation\"\r\n                                        name=\"ELocation\" onChange={(e) => {\r\n                                            setELocation (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                        <Row className=\"mt-3\">\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Margin Type</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        id=\"EOfferDate\"\r\n                                        className=\"style-input\"\r\n                                        name=\"EOfferDate\" onChange={(e) => {\r\n                                            setEOfferDate (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Type Of Employement</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"EPAN_No\"\r\n                                        name=\"EPAN_No\" onChange={(e) => {\r\n                                            setEPAN_No (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={12}>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                            <button className=\"btn btn-secondary ml-3\">Cancel</button>\r\n                            </Col>\r\n                        </Row>\r\n                        </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddRevenue;\r\n\r\n\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getUserList } from '../../../redux/user/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\n\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                    \r\n                            </Row>\r\n                            <div class=\"table-responsive\">\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewRevenue = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Users.users);\r\n  // console.log(records, 'join list');\r\n    useEffect(() => {\r\n        dispatch(getUserList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField:'id',\r\n            text:'ID',\r\n            hidden: true\r\n        },\r\n        {\r\n            dataField: 'ECode',\r\n            text: 'Sales Name',\r\n            //sort: true,\r\n        },\r\n        {\r\n            dataField: 'EFullname',\r\n            text: 'Month',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'ECompany_Name',\r\n            text: 'Year',\r\n        },\r\n        {\r\n            dataField: 'EDesignation',\r\n            text: 'Client',\r\n        },\r\n        {\r\n            dataField: 'ELocation',\r\n            text: 'Current HC',\r\n        },\r\n        {\r\n            dataField: 'ERole',\r\n            text: 'Total GP',\r\n        },\r\n        {\r\n            dataField: 'ERole',\r\n            text: 'Total Avg. GP Add',\r\n        },\r\n        {\r\n            dataField: 'ERole',\r\n            text: 'Start',\r\n        },\r\n        {\r\n            dataField: 'ERole',\r\n            text: 'Attrition',\r\n        },\r\n        {\r\n            dataField: 'ERole',\r\n            text: 'BD',\r\n        },\r\n        {\r\n            dataField: 'ERole',\r\n            text: 'Actual Start',\r\n        },\r\n        {\r\n            dataField: 'ERole',\r\n            text: 'Net Total GP',\r\n        },\r\n        {\r\n            dataField: 'ERole',\r\n            text: 'Net Total GP Add',\r\n        },\r\n        {\r\n            dataField: 'ERole',\r\n            text: 'Type Of Employement',\r\n        },\r\n    ]\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewRevenue;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink} from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport AddRevenue from './AddRevenue';\r\nimport ViewRevenue from './ViewRevenue';\r\n\r\nconst RevenueNav = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Nav tabs className=\"second-level-tab nav nav-tabs justify-content-end\">\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Add Revenue\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            View Revenue\r\n          </NavLink>\r\n        </NavItem>\r\n       \r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <AddRevenue/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <ViewRevenue/> \r\n        </TabPane>\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default RevenueNav;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, FormGroup, Form, Label, Input} from 'reactstrap';\r\nimport { getRoleList } from '../../../redux/role/actions';\r\nimport { setUser } from '../../../redux/user/actions';\r\n//import axios from 'axios';\r\n// import Select from 'react-select';\r\nconst AddMonthReport = () => { \r\n    const dispatch = useDispatch();\r\n    const [ECode , setECode]=useState('');\r\n    const [EEtype, setEEtype]=useState([]);\r\n    const [EBankName, setEBankName]=useState('');\r\n    const [EFullname, setEFullname]=useState('');\r\n    const [ECompany_Name, setECompany_Name]=useState('');\r\n    const [EAccountNo, setEAccountNo]=useState('');\r\n    const [EGender, setEGender]=useState([]);\r\n    const [EDepartment, setEDepartment]=useState('');\r\n    const [EBranch, setEBranch]=useState('');\r\n    const [EEmail, setEEmail]=useState('');\r\n    const [EDesignation, setEDesignation]=useState('');\r\n    const [EIFC_Code, setEIFC_Code]=useState('');\r\n    const [EDOB, setEDOB]=useState('');\r\n    const [ELocation, setELocation]=useState('');\r\n    const [EPFAccount, setEPFAccount]=useState('');\r\n    const [EAddress, setEAddress]=useState('');\r\n    const [ECAddress, setECAddress]=useState('');\r\n    const [EOfferDate, setEOfferDate]=useState('');\r\n    const [EPAN_No, setEPAN_No]=useState('');\r\n    const [EJoinDate, setEJoinDate]=useState('');\r\n    const [EAadhar_no, setEAadhar_no]=useState('');\r\n    const [ERole, setERole]=useState([]);\r\n    const [ESalary, setESalary]=useState('');\r\n    const [EPostal, setEPostal]=useState('');\r\n    const [EUserName, setEUserName]=useState('');\r\n    const [EPF, setEPF]=useState('');\r\n    const [EContNo, setEContNo]=useState('');\r\n    const [EPassword, setEPassword]=useState('');\r\n    const [EPT, setEPT]=useState('');\r\n    const [EEmergencyContNo, setEEmergencyContNo]=useState('');\r\n    const [EBloodGroup, setEBloodGroup]=useState('');\r\n    const [EESI, setEESI]=useState('');\r\n    const [EPFApply, setEPFApply]=useState(true);\r\n    const [EPTApply, setEPTApply]=useState(true);\r\n    const [EESIApply, setEESIApply]=useState(true);\r\n    const [Ephoto,setEphoto]=useState('');\r\n\r\n    \r\n\r\n    \r\n  \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const reqBody ={\r\n            ECode:ECode ,\r\n            EEtype:EEtype,\r\n            EBankName:EBankName,\r\n            EFullname:EFullname,\r\n            ECompany_Name:ECompany_Name,\r\n            EAccountNo:EAccountNo,\r\n            EGender:EGender,\r\n            EDepartment:EDepartment,\r\n            EBranch:EBranch,\r\n            EEmail:EEmail,\r\n            EDesignation,\r\n            EIFC_Code:EIFC_Code,\r\n            EDOB:EDOB,\r\n            ELocation:ELocation,\r\n            EPFAccount:EPFAccount,\r\n            EAddress:EAddress,\r\n            ECAddress:ECAddress,\r\n            EOfferDate:EOfferDate,\r\n            EPAN_No:EPAN_No,\r\n            EJoinDate:EJoinDate,\r\n            EAadhar_no:EAadhar_no,\r\n            ERole:ERole,\r\n            ESalary:ESalary,\r\n            EPostal:EPostal,\r\n            EUserName:EUserName,\r\n            EPF:EPF,\r\n            EContNo:EContNo,\r\n            EPassword:EPassword,\r\n            EPT:EPT,\r\n            EEmergencyContNo:EEmergencyContNo,\r\n            EBloodGroup:EBloodGroup,\r\n            EESI:EESI,\r\n            EPFApply:EPFApply,\r\n            EPTApply:EPTApply,\r\n            EESIApply:EESIApply,\r\n            Ephoto:Ephoto\r\n        };\r\n        dispatch(setUser(reqBody));\r\n    }\r\n    const [selectEmpType] = React.useState([\r\n        {\r\n            label: 'CONTRACTUAL',\r\n            value: 'CONTRACTUAL',\r\n        },\r\n        { label: 'PERMANENT', value: 'PERMANENT' },\r\n        { label: 'C2H', value: 'C2H' },\r\n    ]);\r\n    const [selectGender] = React.useState([\r\n        { label: 'Male', value: 'Male',  },\r\n        { label: 'Female', value: 'Female' }\r\n    ]);\r\n    let roleList = useSelector((state) => state.Role.role || []);\r\n    useEffect( () => {\r\n        dispatch(getRoleList());\r\n    \r\n        // eslint-disable-next-line\r\n      }, [] );\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Form onSubmit={handleSubmit}>\r\n                                <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Select Month <span className=\"redspan\">*</span></Label>\r\n                                    <select className=\"form-control style-input\" required\r\n                                   name=\"EEtype\" id=\"EEtype\" onChange={(e) => {\r\n                                    setEEtype (e.target.value);\r\n                                }}>\r\n                                     <option disabled selected>Select</option>\r\n                                {selectEmpType.map((emptype) => (\r\n                                    <option key={emptype.value} value={emptype.value}>\r\n                                        {emptype.label}\r\n                                    </option>\r\n                                ))}\r\n                                   </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">BD</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"EBankName\"\r\n                                        name=\"EBankName\" onChange={(e) => {\r\n                                            setEBankName (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Select Client <span className=\"redspan\">*</span></Label>\r\n                                    <select className=\"form-control style-input\" required\r\n                                   name=\"EEtype\" id=\"EEtype\" onChange={(e) => {\r\n                                    setEEtype (e.target.value);\r\n                                }}>\r\n                                     <option disabled selected>Select</option>\r\n                                {selectEmpType.map((emptype) => (\r\n                                    <option key={emptype.value} value={emptype.value}>\r\n                                        {emptype.label}\r\n                                    </option>\r\n                                ))}\r\n                                   </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Join</Label>\r\n                                    <Input\r\n                                        type=\"text\" \r\n                                        className=\"style-input\"\r\n                                        id=\"EFullname\"\r\n                                        name=\"EFullname\" onChange={(e) => {\r\n                                            setEFullname (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Open Position </Label>\r\n                                    <Input\r\n                                        type=\"text\"  \r\n                                        className=\"style-input\"\r\n                                        id=\"EDepartment\"\r\n                                        name=\"EDepartment\" onChange={(e) => {\r\n                                            setEDepartment (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Passthrough</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"EBranch\"\r\n                                        name=\"EBranch\" onChange={(e) => {\r\n                                            setEBranch (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Business Recieved</Label>\r\n                                    <Input\r\n                                        type=\"email\" \r\n                                        className=\"style-input\"\r\n                                        id=\"EEmail\"\r\n                                        name=\"EEmail\" onChange={(e) => {\r\n                                            setEEmail (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Bulkdeal</Label>\r\n                                    <Input\r\n                                        type=\"text\" \r\n                                        className=\"style-input\"\r\n                                        id=\"EDesignation\"\r\n                                        name=\"EDesignation\" onChange={(e) => {\r\n                                            setEDesignation (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">No. Of Submission </Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"EDOB\"\r\n                                        name=\"EDOB\" onChange={(e) => {\r\n                                            setEDOB (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">PO Extend </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"ELocation\"\r\n                                        name=\"ELocation\" onChange={(e) => {\r\n                                            setELocation (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                        <Row className=\"mt-3\">\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Interview Recieved</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"EOfferDate\"\r\n                                        className=\"style-input\"\r\n                                        name=\"EOfferDate\" onChange={(e) => {\r\n                                            setEOfferDate (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Attrition Saved</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"EPAN_No\"\r\n                                        name=\"EPAN_No\" onChange={(e) => {\r\n                                            setEPAN_No (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"mt-3\">\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Feedback Pending</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"EOfferDate\"\r\n                                        className=\"style-input\"\r\n                                        name=\"EOfferDate\" onChange={(e) => {\r\n                                            setEOfferDate (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Total Revenue</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"EPAN_No\"\r\n                                        name=\"EPAN_No\" onChange={(e) => {\r\n                                            setEPAN_No (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"mt-3\">\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">No Show</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"EOfferDate\"\r\n                                        className=\"style-input\"\r\n                                        name=\"EOfferDate\" onChange={(e) => {\r\n                                            setEOfferDate (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Remark</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"EPAN_No\"\r\n                                        name=\"EPAN_No\" onChange={(e) => {\r\n                                            setEPAN_No (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"mt-3\">\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Offer</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"EOfferDate\"\r\n                                        className=\"style-input\"\r\n                                        name=\"EOfferDate\" onChange={(e) => {\r\n                                            setEOfferDate (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={12}>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                            <button className=\"btn btn-secondary ml-3\">Cancel</button>\r\n                            </Col>\r\n                        </Row>\r\n                        </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddMonthReport;\r\n\r\n\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport { getClientList } from '../../../redux/client/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\nimport * as FeatherIcon from 'react-feather';\r\n\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                    \r\n                            </Row>\r\n                            <div class=\"table-responsive\">\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewMonthReport = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n    let records = useSelector((state) => state.Client.clients || []);\r\n  // console.log(records, 'join list');\r\n    useEffect(() => {\r\n        dispatch(getClientList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'cname',\r\n            text: 'Sales Name',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'cperson1',\r\n            text: 'Month',\r\n        },\r\n        {\r\n            dataField: 'cemail1',\r\n            text: 'Year',\r\n        },\r\n        {\r\n            dataField: 'ccnt1',\r\n            text: 'Client',\r\n        },\r\n        {\r\n            dataField: 'cdate',\r\n            text: 'Open Position',\r\n        },\r\n        {\r\n            dataField: 'cdate',\r\n            text: 'Business Recieved',\r\n        },\r\n        {\r\n            dataField: 'cdate',\r\n            text: 'Submissions',\r\n        },\r\n        {\r\n            dataField: 'cdate',\r\n            text: 'Interview Recieved',\r\n        },\r\n        {\r\n            dataField: 'cdate',\r\n            text: 'Feedback Pending',\r\n        },\r\n        {\r\n            dataField: 'cdate',\r\n            text: 'No Show',\r\n        },\r\n        {\r\n            dataField: 'cdate',\r\n            text: 'Offer',\r\n        },\r\n        {\r\n            dataField: 'cdate',\r\n            text: 'BD',\r\n        },\r\n        {\r\n            dataField: 'cdate',\r\n            text: 'Join',\r\n        },\r\n        {\r\n            dataField: 'cdate',\r\n            text: 'Pass Trough',\r\n        },\r\n        {\r\n            dataField: 'cdate',\r\n            text: 'Bulk Deal',\r\n        },\r\n        {\r\n            dataField: 'cdate',\r\n            text: 'PO Extend',\r\n        },\r\n        {\r\n            dataField: 'cdate',\r\n            text: 'Attrition Saved',\r\n        },\r\n        {\r\n            dataField: 'cdate',\r\n            text: 'Total Revenue',\r\n        },\r\n        {\r\n            dataField: 'cdate',\r\n            text: 'Remark',\r\n        },\r\n    ]\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewMonthReport;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink} from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport AddMonthReport from './AddMonthReport';\r\nimport ViewMonthReport from './ViewMonthReport';\r\n\r\nconst MonthNav = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Nav tabs className=\"second-level-tab nav nav-tabs justify-content-end\">\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Add Month Report\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            View Month Report\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <AddMonthReport/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <ViewMonthReport/> \r\n        </TabPane>\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MonthNav;","import React, { useEffect, useState} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, FormGroup, Form, Label} from 'reactstrap';\r\nimport { getRecruiterList } from '../../../redux/recruiter/actions';\r\nimport { getTeamLeadList } from '../../../redux/teamLead/actions';\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport moment from 'moment';\r\nimport { createTeam } from '../../../redux/teammaster/actions';\r\n// import Select from 'react-select';\r\nconst AddTeam = () => {\r\n    //const [selectedValue, setSelectedValue] = useState([]);\r\n    var currentTime = moment().format('DD/MM/YYYY HH:mm'); \r\n    let recruterList = useSelector((state) => state.Recruiter.recruiters || []);\r\n    let teamLeadList = useSelector((state) => state.TeamLead.teamlead || []);\r\n    //console.log(\"recruter\", recruterList)\r\n    const [createdby, setCreatedby]=useState(currentTime);\r\n    const [teamlead, setTeamlead]=useState('');\r\n    const [teammember, setSelectedValue]=useState([]);\r\n    const onSelect=(selectedList, selectedItem)=> {\r\n        setSelectedValue(selectedList.map(x=>x.EFullname));\r\n    }\r\n    \r\n    const onRemove=(selectedList, removedItem)=> {\r\n        setSelectedValue(selectedList.map(x=>x.EFullname));\r\n    }\r\n    const dispatch = useDispatch();\r\n     useEffect(() => {\r\n        dispatch(getRecruiterList());\r\n        dispatch(getTeamLeadList());\r\n         // eslint-disable-next-line \r\n     }, []);\r\n     const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n       const reqBody ={\r\n        createdby,\r\n        teamlead,\r\n        teammember\r\n       }\r\n       dispatch(createTeam(reqBody));\r\n     }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col className=\"col-md-6 offset-md-3\">\r\n                        <div className=\"card p-5\" style={{height:'600px'}}>\r\n                        <h5 className=\"text-uppercase  text-center\">Create Team</h5>\r\n                    <Row>\r\n                            <Col lg={12}>\r\n                                <FormGroup>\r\n                                    <input type=\"hidden\" name=\"createdby\" id=\"createdby\" \r\n                                        onChange={(e) => {\r\n                                            setCreatedby (e.target.value);\r\n                                        }}value={currentTime} />\r\n                                    <Label for=\"empleadoApellidos\">Select Team Lead</Label>\r\n                                   \r\n                                    <select className=\"form-control\" name=\"teamlead\"\r\n                                    id=\"teamlead\"  onChange={(e) => {\r\n                                        setTeamlead (e.target.value);\r\n                                    }}>\r\n                                         <option selected desabled>Select</option>\r\n                                    {teamLeadList.map((teamLead,i) => (\r\n                                    <option key={i++} value={teamLead.EId}>\r\n                                        {teamLead.EFullname}\r\n                                    </option>\r\n                                ))}\r\n                                    </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={12}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoApellidos\">Select Team Member</Label>\r\n                                <Multiselect\r\n                            options={recruterList}\r\n                            onSelect={onSelect}\r\n                            onRemove={onRemove}\r\n                            name=\"teammember\"\r\n                            displayValue=\"EFullname\"\r\n                            showCheckbox={true}\r\n                            />   \r\n                                {/* {recruterList.map((recruter, i, index) => (\r\n                            <div className=\"form-check mt-1\">\r\n                                <label className=\"form-check-label\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        key={i ++}\r\n                                        className=\"form-check-input\"\r\n                                        onClick={logToConsole}\r\n                                        value={recruter.Eid}\r\n                                    />\r\n                                    {recruter.EFullname}\r\n                                </label>\r\n                            </div>\r\n                        ))}  */}\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={12}>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            <button className=\"btn btn-secondary ml-3\">Cancel</button>\r\n                            </Col>\r\n                        </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            \r\n                       \r\n                        </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddTeam;\r\n\r\n\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getTeamList } from '../../../redux/teammaster/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\n\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                    \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewTeam = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Teams.teams);\r\n  //console.log(records, 'join list');\r\n    useEffect(() => {\r\n        dispatch(getTeamList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'teamlead',\r\n            text: 'Team Lead',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'teammember',\r\n            text: 'Total Member',\r\n        },\r\n        {\r\n            dataField: 'email',\r\n            text: 'Edit',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary\"\r\n                    onClick={() => _validateFunction(row)}\r\n                    title=\"Edit\"\r\n                  >\r\n                   <FeatherIcon.Edit />\r\n                  </button>\r\n                );\r\n              },\r\n        },\r\n        {\r\n            dataField: 'Delete',\r\n            text: 'Delete',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary\"\r\n                    onClick={() => _validateFunction(row)}\r\n                    title=\"Delete\"\r\n                  >\r\n                   <FeatherIcon.Trash2 />\r\n                  </button>\r\n                );\r\n              },\r\n        }\r\n    ];\r\n    function _validateFunction(row , id) {    \r\n        // console.log(\"activity id :\",(id));\r\n         // dispatch(getRequirementModal((row)));\r\n \r\n         //dispatch( setSaveRequirement( row) );\r\n \r\n          //   dispatch( getRequirementModal() );\r\n     }\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewTeam;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink} from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport AddTeam from './AddTeam';\r\nimport ViewTeam from './ViewTeam';\r\n\r\nconst TeamTabs = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Nav tabs className=\"second-level-tab nav nav-tabs justify-content-end\">\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Create Team\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            View Team\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <AddTeam/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <ViewTeam/> \r\n        </TabPane>\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TeamTabs;","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button,  Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport RevenueNav from './revenue/RevenueNav';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport MonthNav from './monthreport/MonthNav';\r\nimport TeamTabs from './teammaster/TeamNav';\r\nconst Sales = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"page-title\">\r\n                <Col md={6}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Sales', path: '/sales', active: true },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"text-right\">\r\n                <Button color=\"primary\"><i className=\"uil uil-plus\"></i>ADD ITEM</Button>\r\n                </Col>\r\n            </Row>\r\n      <Nav tabs className=\"requirement-tab pt-3 pb-3 nav nav-tabs row bg-white\">\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n           Revenue\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Month Report\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Call Report\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <RevenueNav/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <MonthNav/>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n         <TeamTabs/>\r\n        </TabPane >\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Sales;","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    Label,\r\n    FormGroup,\r\n    Button,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n} from 'reactstrap';\r\nimport { AvForm, AvGroup, AvFeedback } from 'availity-reactstrap-validation';\r\nimport { User } from 'react-feather';\r\nimport { getClientList } from '../../redux/client/actions';\r\nimport { getSalesUserList } from '../../redux/salesuser/actions';\r\nconst AssignClient =(props)=>{\r\n    const [cid, setCid] = useState([]);\r\n    const [uid, setUid]= useState([]);\r\n    let clientList = useSelector((state) => state.Client.clients || []);\r\n    let salesUserList = useSelector((state) => state.SalesUser.salesuser || []);\r\n   // console.log(\"cws\", clientList)\r\n    const dispatch = useDispatch();\r\n     useEffect(() => {\r\n        dispatch(getClientList());\r\n        dispatch(getSalesUserList());\r\n         // eslint-disable-next-line \r\n     }, []);\r\n     const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const reqBody ={\r\n            cid:cid ,\r\n            uid:uid,\r\n        };\r\n        //dispatch(setUser(reqBody));\r\n    }\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 offset-md-3\">\r\n                            <AvForm  className=\"authentication-form card p-5\">\r\n                                \r\n                            <h5 className=\"text-uppercase  text-center\">Apply Your Leave</h5>\r\n                                <AvGroup className=\"\">\r\n                                    <Label for=\"fullname\">Select Sales User</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <User className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <select\r\n                                className=\"form-control\"\r\n                                name=\"uid\"\r\n                                required onChange={(e,i) => {\r\n                                    setUid(e.target.value);\r\n                                }}>\r\n                                    <option disabled selected>Select</option>\r\n                                {salesUserList.map((salesusers) => (\r\n                                    <option key={salesusers.EId} value={salesusers.EId}>\r\n                                        {salesusers.EFullname}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                                    </InputGroup>\r\n\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <AvGroup className=\"\">\r\n                                    <Label for=\"fullname\">Select Client Name</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <User className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <select\r\n                                className=\"form-control\"\r\n                                name=\"cid\"\r\n                                required onChange={(e,i) => {\r\n                                    setCid(e.target.value);\r\n                                }}>\r\n                                    <option disabled selected>Select</option>\r\n                                {clientList.map((client) => (\r\n                                    <option key={client.cid} value={client.cid}>\r\n                                        {client.cname}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                                    </InputGroup>\r\n\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <FormGroup className=\"form-group mb-0 text-center\">\r\n                                    <Button className=\"btn-block btn btn-secondary\">\r\n                                        Assign Client\r\n                                    </Button>\r\n                                </FormGroup>\r\n                            </AvForm>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\nexport default AssignClient;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport { getCwsList } from '../../redux/clientwisesales/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\nimport * as FeatherIcon from 'react-feather';\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         //dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getJoinListModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                              \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewSalesClient = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.CWS.cws);\r\n    useEffect(() => {\r\n        dispatch(getCwsList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        \r\n        {\r\n            dataField:'name',\r\n            text:\"Sales Name\"\r\n        },\r\n        {\r\n            dataField: 'clientname',\r\n            text: 'Client Name',\r\n        },\r\n        {\r\n            dataField: 'Delete',\r\n            text: 'Delete',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary\"\r\n                    onClick={() => _validateFunction(row)}\r\n                    title=\"Delete\"\r\n                  >\r\n                   <FeatherIcon.Trash2 />\r\n                  </button>\r\n                );\r\n              },\r\n        }\r\n    ];\r\n    function _validateFunction(row , id) {    \r\n        // console.log(\"activity id :\",(id));\r\n         // dispatch(getRequirementModal((row)));\r\n \r\n         //dispatch( setSaveRequirement( row) );\r\n \r\n          //   dispatch( getRequirementModal() );\r\n     }\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewSalesClient;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button,  Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport AssignClient from './AssignClient';\r\nimport ViewSalesClient from './ViewSalesClient';\r\nconst ClientWiseSales = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"page-title\">\r\n                <Col md={6}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Hr', path: '/hr', active: true },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"text-right\">\r\n                <Button color=\"primary\"><i className=\"uil uil-plus\"></i>ADD ITEM</Button>\r\n                </Col>\r\n            </Row>\r\n      <Nav tabs className=\"requirement-tab hr-tab pt-3 pb-3 nav nav-tabs row bg-white\">\r\n        <NavItem className=\"col-sm-3\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n           Assign Client\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-3\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            View Client\r\n          </NavLink>\r\n        </NavItem>\r\n       \r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <AssignClient/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <ViewSalesClient/>\r\n        </TabPane>\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ClientWiseSales;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Route } from 'react-router-dom';\r\nimport * as FeatherIcon from 'react-feather';\r\n\r\nimport { isUserAuthenticated, getLoggedInUser } from '../helpers/authUtils';\r\nimport Hr from '../pages/hr/Hr';\r\nimport Attendance from '../pages/attendance/Attedance';\r\nimport Activity from '../pages/acyivity/Activity';\r\nimport ViewUser from '../pages/master/usermaster/ViewUser';\r\nimport Sales from '../pages/sales/Sales'\r\n//clientwisesales\r\nimport clientwisesales from '../pages/clientwisesales/ClientWiseSales';\r\n// auth\r\nconst Login = React.lazy(() => import('../pages/auth/Login'));\r\nconst Logout = React.lazy(() => import('../pages/auth/Logout'));\r\nconst Register = React.lazy(() => import('../pages/auth/Register'));\r\nconst ForgetPassword = React.lazy(() => import('../pages/auth/ForgetPassword'));\r\nconst Confirm = React.lazy(() => import('../pages/auth/Confirm'));\r\n// dashboard\r\n//const DashboardOld = React.lazy(() => import('../pages/dashboardOld'));\r\n//DashboardNew\r\nconst Dashboard =React.lazy(()=> import('../pages/dashboard/Dashboard'));\r\n//working page\r\nconst dashboardOld =React.lazy(()=>import('../pages/dashboardOld/index'));\r\n\r\n//Requirement\r\nconst Requirement =React.lazy(()=>import('../pages/requirement/Requirement'));\r\n//List\r\nconst List =React.lazy(()=>import('../pages/list/List'));\r\n//User\r\nconst Masters = React.lazy(()=> import('../pages/master/Masters'));\r\n//Report\r\nconst Report = React.lazy(()=> import('../pages/report/Report'));\r\n// handle auth and authorization\r\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props => {\r\n            if (!isUserAuthenticated()) {\r\n                // not logged in so redirect to login page with the return url\r\n                return <Redirect to={{ pathname: '/account/login', state: { from: props.location } }} />;\r\n            }\r\n\r\n            const loggedInUser = getLoggedInUser();\r\n           // console.log('loggedInUser=',loggedInUser);\r\n            //console.log('roles',roles);\r\n            //console.log(' roles.indexOf(loggedInUser.role) ', roles.indexOf(loggedInUser.Role) )\r\n            // check if route is restricted by role\r\n            if (roles && roles.indexOf(loggedInUser.Role) === -1) {\r\n               //  console.log('user role check', roles);\r\n                // role not authorised so redirect to home page\r\n                return <Redirect to={{ pathname: '/' }} />;\r\n            }\r\n\r\n            // authorised so return component\r\n            return <Component {...props} />;\r\n        }}\r\n    />\r\n);\r\n\r\n// root routes\r\nconst rootRoute = {\r\n    path: '/',\r\n    exact: true,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n    component: () => <Redirect to=\"/dashboard\" />,\r\n    route: PrivateRoute,\r\n};\r\n//dashboard\r\nconst dashboardRoutes = {\r\n    path: '/dashboard',\r\n    name: 'Dashboard',\r\n    icon: FeatherIcon.Home,\r\n    component: Dashboard,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n    route: PrivateRoute\r\n};\r\n//Requirement\r\nconst requirementRoutes= {\r\n    path: '/reqirement',\r\n    name: 'Requirement',\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n    component: Requirement,\r\n    route: PrivateRoute,\r\n};\r\n//List\r\nconst listRoutes= {\r\n    path: '/list',\r\n    name: 'List',\r\n    component: List,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n    route: PrivateRoute,\r\n};\r\n//Attendance\r\nconst attendanceRoutes= {\r\n    path: '/attendance',\r\n    name: 'Attendance',\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n    component: Attendance,\r\n    route: PrivateRoute,\r\n};\r\n//activity\r\nconst activityRoutes = {\r\n    path: '/activity',\r\n    name: 'Activity',\r\n    icon: FeatherIcon.Activity,\r\n    component: Activity,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n    route: PrivateRoute\r\n};\r\n//Hr\r\nconst hrRoutes = {\r\n    path: '/hr',\r\n    name: 'HR',\r\n    icon: FeatherIcon.Aperture,\r\n    component: Hr,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n    route: PrivateRoute\r\n};\r\n// Master\r\n\r\nconst masterRoutes = {\r\n    path: '/master',\r\n    name: 'Master',\r\n    icon: FeatherIcon.FileText,\r\n    component: Masters,\r\n    route: PrivateRoute,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n};\r\n//View user\r\nconst viewUserRoutes= {\r\n    path: '/viewuser',\r\n    name: 'View User',\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n    component: ViewUser,\r\n    route: PrivateRoute,\r\n};\r\n//clientwisesales\r\nconst clientWiseSalesRoutes = {\r\n    path: '/clientwisesales',\r\n    name: 'Client Wise Sales',\r\n    icon: FeatherIcon.User,\r\n    component: clientwisesales,\r\n    route: PrivateRoute,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n};\r\n//Report\r\nconst reportRoutes = {\r\n    path: '/report',\r\n    name: 'Report',\r\n    icon: FeatherIcon.FileText,\r\n    component: Report,\r\n    route: PrivateRoute,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n};\r\n//Revenue\r\nconst revenueRoutes = {\r\n    path: '/sales',\r\n    name: 'Sales',\r\n    icon: FeatherIcon.Shield,\r\n    component: Sales,\r\n    route: PrivateRoute,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n};\r\n//Aspl\r\nconst asplRoutes = {\r\n    path: '/salaryslip',\r\n    name: 'Salary Slip',\r\n    icon: FeatherIcon.Download,\r\n    component: dashboardOld,\r\n    route: PrivateRoute,\r\n    roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n};\r\n//Rt\r\n// const rtRoutes = {\r\n//     path: '/rt',\r\n//     name: 'RT',\r\n//     icon: FeatherIcon.Download,\r\n//     component: dashboardOld,\r\n//     route: PrivateRoute,\r\n//     roles:[\"Admin\",\"Manager\",\"Sales\",\"VP\",\"Teamlead\",\"Recruiter\",\"IT\",\"HR\",\"Account\",\"Contract\",],\r\n// };\r\n\r\n// auth\r\nconst authRoutes = {\r\n    path: '/account',\r\n    name: 'Auth',\r\n    children: [\r\n        {\r\n            path: '/account/login',\r\n            name: 'Login',\r\n            component: Login,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/logout',\r\n            name: 'Logout',\r\n            component: Logout,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/register',\r\n            name: 'Register',\r\n            component: Register,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/confirm',\r\n            name: 'Confirm',\r\n            component: Confirm,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/forget-password',\r\n            name: 'Forget Password',\r\n            component: ForgetPassword,\r\n            route: Route,\r\n        },\r\n    ],\r\n};\r\n\r\n// flatten the list of all nested routes\r\nconst flattenRoutes = routes => {\r\n    let flatRoutes = [];\r\n\r\n    routes = routes || [];\r\n    routes.forEach(item => {\r\n        flatRoutes.push(item);\r\n\r\n        if (typeof item.children !== 'undefined') {\r\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\r\n        }\r\n    });\r\n    return flatRoutes;\r\n};\r\n\r\n// All routes\r\nconst allRoutes = [    \r\n    authRoutes,\r\n    rootRoute,\r\n    dashboardRoutes,\r\n    activityRoutes,\r\n    hrRoutes,\r\n    masterRoutes,\r\n    clientWiseSalesRoutes,\r\n    reportRoutes,\r\n    revenueRoutes,\r\n    asplRoutes,\r\n    //rtRoutes,\r\n    requirementRoutes,\r\n    attendanceRoutes,\r\n    listRoutes,\r\n    viewUserRoutes\r\n];\r\n\r\nconst authProtectedRoutes = [dashboardRoutes, activityRoutes, hrRoutes, masterRoutes, clientWiseSalesRoutes,reportRoutes,revenueRoutes,asplRoutes];\r\nconst allFlattenRoutes = flattenRoutes(allRoutes);\r\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\nimport Loadable from 'react-loadable';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { isUserAuthenticated } from '../helpers/authUtils';\r\nimport * as layoutConstants from '../constants/layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\n// Lazy loading and code splitting -\r\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\r\nconst loading = () => <div></div>;\r\n\r\n// All layouts/containers\r\nconst AuthLayout = Loadable({\r\n    loader: () => import('../layouts/Auth'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nconst VerticalLayout = Loadable({\r\n    loader: () => import('../layouts/Vertical'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nconst HorizontalLayout = Loadable({\r\n    loader: () => import('../layouts/Horizontal'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nclass Routes extends Component {\r\n\r\n    // returns the layout\r\n    getLayout = () => {\r\n        if (!isUserAuthenticated()) return AuthLayout;\r\n\r\n        let layoutCls = VerticalLayout;\r\n\r\n        switch (this.props.layout.layoutType) {\r\n            case layoutConstants.LAYOUT_HORIZONTAL:\r\n                layoutCls = HorizontalLayout;\r\n                break;\r\n            default:\r\n                layoutCls = VerticalLayout;\r\n                break;\r\n        }\r\n        return layoutCls;\r\n    }\r\n\r\n    render() {\r\n        const Layout = this.getLayout();\r\n        \r\n        // rendering the router with layout\r\n        return <BrowserRouter>\r\n            <Layout {...this.props}>\r\n                <Switch>\r\n                    {routes.map((route, index) => {\r\n                        return (\r\n                            !route.children ?\r\n                                <route.route\r\n                                    key={index}\r\n                                    path={route.path}\r\n                                    roles={route.roles}\r\n                                    exact={route.exact}\r\n                                    component={route.component}></route.route>\r\n                                : null\r\n                        );\r\n                    })}\r\n                </Switch>\r\n            </Layout>\r\n        </BrowserRouter>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.Layout,\r\n        user: state.Auth.user,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Routes);\r\n","export function configureFakeBackend() {\r\n    let users = [{ id: 1, username: 'test', password: 'test', firstName: 'Test', lastName: 'User', role: 'Admin' }];\r\n    let realFetch = window.fetch;\r\n    window.fetch = function(url, opts) {\r\n        return new Promise((resolve, reject) => {\r\n            // wrap in timeout to simulate server api call\r\n            setTimeout(() => {\r\n                // authenticate\r\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\r\n                    // get parameters from post request\r\n                    let params = JSON.parse(opts.body);\r\n\r\n                    // find if any user matches login credentials\r\n                    let filteredUsers = users.filter(user => {\r\n                        return user.username === params.username && user.password === params.password;\r\n                    });\r\n\r\n                    if (filteredUsers.length) {\r\n                        // if login details are valid return user details and fake jwt token\r\n                        let user = filteredUsers[0];\r\n                        let responseJson = {\r\n                            id: user.id,\r\n                            username: user.username,\r\n                            firstName: user.firstName,\r\n                            lastName: user.lastName,\r\n                            role: 'Admin',\r\n                            token:\r\n                                'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJTaHJleXUifQ.D-isMYoGH6Ah4i_dHxplgJNGtXTLEqZYvha_ULSJRFU',\r\n                        };\r\n                        resolve({ ok: true, json: () => responseJson });\r\n                        //console.log(\"fake backend responseJson\",responseJson);\r\n                    } else {\r\n                        // else return error\r\n                        reject('Username or password is incorrect');\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                // register\r\n                if (url.endsWith('/users/register') && opts.method === 'POST') {\r\n                    // get parameters from post request\r\n                    let params = JSON.parse(opts.body);\r\n\r\n                    // add new users\r\n                    let { firstName, lastName } = params.fullname.split(' ');\r\n                    let newUser = {\r\n                        id: users.length + 1,\r\n                        username: firstName,\r\n                        password: params.password,\r\n                        firstName: firstName,\r\n                        lastName: lastName,\r\n                        role: 'Admin',\r\n                    };\r\n                    users.push({ newUser });\r\n\r\n                    let responseJson = {\r\n                        id: newUser.id,\r\n                        username: newUser.username,\r\n                        firstName: newUser.firstName,\r\n                        lastName: newUser.lastName,\r\n                        role: newUser.role,\r\n                        token:\r\n                            'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJTaHJleXUifQ.D-isMYoGH6Ah4i_dHxplgJNGtXTLEqZYvha_ULSJRFU',\r\n                    };\r\n                    resolve({ ok: true, json: () => responseJson });\r\n                    return;\r\n                }\r\n\r\n                // forget password\r\n                if (url.endsWith('/users/password-reset') && opts.method === 'POST') {\r\n                    // get parameters from post request\r\n                    let params = JSON.parse(opts.body);\r\n\r\n                    // find if any user matches login credentials\r\n                    let filteredUsers = users.filter(user => {\r\n                        return user.username === params.username;\r\n                    });\r\n\r\n                    if (filteredUsers.length) {\r\n                        let responseJson = {\r\n                            message: \"We've sent you a link to reset password to your registered email.\",\r\n                        };\r\n                        resolve({ ok: true, json: () => responseJson });\r\n                    } else {\r\n                        // else return error\r\n                        reject('Sorry, we could not find any registered user with entered username');\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                // get users\r\n                if (url.endsWith('/users') && opts.method === 'GET') {\r\n                    // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\r\n                    if (\r\n                        opts.headers &&\r\n                        opts.headers.Authorization ===\r\n                            'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJTaHJleXUifQ.D-isMYoGH6Ah4i_dHxplgJNGtXTLEqZYvha_ULSJRFU'\r\n                    ) {\r\n                        resolve({ ok: true, json: () => users });\r\n                    } else {\r\n                        // return 401 not authorised if token is null or invalid\r\n                        reject('Unauthorised');\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                // pass through any requests not handled above\r\n                realFetch(url, opts).then(response => resolve(response));\r\n            }, 500);\r\n        });\r\n    };\r\n}\r\n","import React, { Component } from 'react';\r\nimport Routes from './routes/Routes';\r\n\r\n// setup fake backend\r\nimport { configureFakeBackend } from './helpers';\r\n\r\n// Themes\r\n\r\n// default\r\nimport './assets/scss/theme.scss';\r\n\r\n// dark\r\n// import './assets/scss/theme-dark.scss';\r\n\r\n// rtl\r\n// import './assets/scss/theme-rtl.scss';\r\n\r\n\r\n// configure fake backend\r\nconfigureFakeBackend();\r\n\r\n/**\r\n * Main app component\r\n */\r\nclass App extends Component {\r\n  render() {\r\n    return <Routes></Routes>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\nimport * as layoutConstants from '../../constants/layout';\r\n\r\nconst INIT_STATE = {\r\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\r\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\r\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\r\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\r\n    showRightSidebar: false,\r\n};\r\n\r\n\r\nconst Layout = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layoutType: action.payload,\r\n            };\r\n        case CHANGE_LAYOUT_WIDTH:\r\n            return {\r\n                ...state,\r\n                layoutWidth: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_THEME:\r\n            return {\r\n                ...state,\r\n                leftSideBarTheme: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_TYPE:\r\n            return {\r\n                ...state,\r\n                leftSideBarType: action.payload,\r\n            };\r\n        case TOGGLE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: !state.showRightSidebar,\r\n            };\r\n        case SHOW_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: true,\r\n            };\r\n        case HIDE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default Layout;\r\n","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\nimport { getLoggedInUser } from '../../helpers/authUtils';\r\n\r\nconst INIT_STATE = {\r\n    user: getLoggedInUser(),\r\n    loading: false,\r\n};\r\n\r\n\r\nconst Auth = (state = INIT_STATE, action) => {\r\n    console.log(\"payload in reducer ===\",action.payload);\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loading: true };\r\n        case LOGIN_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, error: null };\r\n        case LOGIN_USER_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case REGISTER_USER:\r\n            return { ...state, loading: true };\r\n        case REGISTER_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, error: null };\r\n        case REGISTER_USER_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case LOGOUT_USER:\r\n            return { ...state, user: null };\r\n        case FORGET_PASSWORD:\r\n            return { ...state, loading: true };\r\n        case FORGET_PASSWORD_SUCCESS:\r\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\r\n        case FORGET_PASSWORD_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Auth;\r\n","// @flow\r\nimport {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\n\r\nconst AppMenu = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case INIT_MENU:\r\n            return action.payload;\r\n        case INIT_MENU_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\r\n            return { ...state };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AppMenu;\r\n","import {GET_USER_LIST_REQUEST,  SET_USER_LIST_REQUEST, ADD_USER_REQUEST, GET_ERROR} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    users: [],\r\n    user:{},\r\n    loading:false,\r\n    error:''\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_USER_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_USER_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                users: action.payload,\r\n                loading:false\r\n            };\r\n            case  ADD_USER_REQUEST:\r\n            return{\r\n                ...state,\r\n                user: action.payload,\r\n                loading:false\r\n            };\r\n            case GET_ERROR:\r\n                return{\r\n                    ...state,\r\n                    error: action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_REQUIREMENTS_LIST_REQUEST, SET_REQUIREMENTS_LIST_REQUEST,\r\n    GET_CRITICAL_REQUIREMENTS_LIST, SET_CRITICAL_REQUIREMENTS_LIST,\r\n    SAVE_REQUIREMENTS, SET_SAVE_REQUIREMENTS,\r\n     GET_REQUIREMENTS_MODAL,  HIDE_REQUIREMENTS_MODAL} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    requirements: [],\r\n    criticalreq:[],\r\n    requirement: {},\r\n    loading:false,\r\n    jid:'',\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_REQUIREMENTS_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            };\r\n        case  SET_REQUIREMENTS_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                requirements: action.payload,\r\n                loading:false\r\n            };\r\n            case GET_CRITICAL_REQUIREMENTS_LIST:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            };\r\n        case  SET_CRITICAL_REQUIREMENTS_LIST:\r\n            return{\r\n                ...state,\r\n                criticalreq: action.payload,\r\n                loading:false\r\n            };\r\n            case SAVE_REQUIREMENTS:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_SAVE_REQUIREMENTS:\r\n            return{\r\n                ...state,\r\n                requirement: action.payload,\r\n                loading:false\r\n            };\r\n            case GET_REQUIREMENTS_MODAL:\r\n                return{\r\n                    ...state,\r\n                    modal: true\r\n                };\r\n            case HIDE_REQUIREMENTS_MODAL:\r\n                return{\r\n                    ...state,\r\n                    requirement: null,\r\n                    modal: false\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n};","import {CREATE_CLIENT_SUCCESS, GET_CLIENT_LIST_REQUEST,  SET_CLIENT_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    clients: [],\r\n    createclients:{},\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_CLIENT_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_CLIENT_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                clients: action.payload,\r\n                loading:false\r\n            };\r\n            case  CREATE_CLIENT_SUCCESS:\r\n            return{\r\n                ...state,\r\n                createclients: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_RECRUITER_LIST_REQUEST,  SET_RECRUITER_LIST_REQUEST} from './constants'\r\nconst INIT_STATE = {\r\n    recruiters: [],\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_RECRUITER_LIST_REQUEST: \r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_RECRUITER_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                recruiters: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_ATTENDANCE_LIST_REQUEST,  SET_ATTENDANCE_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    attendance: [],\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_ATTENDANCE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_ATTENDANCE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                attendance: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {\r\n    GET_LIST_LIST_REQUEST,\r\n    SET_LIST_LIST_REQUEST,\r\n    GET_OFFER_LIST_REQUEST,\r\n    SET_OFFER_LIST_REQUEST,\r\n    GET_VTBJ_LIST_REQUEST,\r\n    SET_VTBJ_LIST_REQUEST,\r\n    GET_JOIN_LIST_REQUEST,\r\n    SET_JOIN_LIST_REQUEST,\r\n    GET_BD_LIST_REQUEST,\r\n    SET_BD_LIST_REQUEST\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    list: [],\r\n    offer: [],\r\n    viewtobejoin:[],\r\n    joinlist:[],\r\n    bdlist:[],\r\n    loading: false,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_LIST_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                //list: action.payload,\r\n                loading: true,\r\n            };\r\n        case SET_LIST_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                list: action.payload,\r\n                loading: false,\r\n            };\r\n        case GET_OFFER_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                //list: action.payload,\r\n                loading: true,\r\n            };\r\n        case SET_OFFER_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                offer: action.payload,\r\n                loading: false,\r\n            };\r\n            case GET_VTBJ_LIST_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    //list: action.payload,\r\n                    loading: true,\r\n                };\r\n            case SET_VTBJ_LIST_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    viewtobejoin: action.payload,\r\n                    loading: false,\r\n                };\r\n                case GET_JOIN_LIST_REQUEST:\r\n                    return {\r\n                        ...state,\r\n                        //list: action.payload,\r\n                        loading: true,\r\n                    };\r\n                case SET_JOIN_LIST_REQUEST:\r\n                    return {\r\n                        ...state,\r\n                        joinlist: action.payload,\r\n                        loading: false,\r\n                    };\r\n                    case GET_BD_LIST_REQUEST:\r\n                        return {\r\n                            ...state,\r\n                            //list: action.payload,\r\n                            loading: true,\r\n                        };\r\n                    case SET_BD_LIST_REQUEST:\r\n                        return {\r\n                            ...state,\r\n                            bdlist: action.payload,\r\n                            loading: false,\r\n                        };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    GET_DT_LIST_REQUEST,\r\n    SET_DT_LIST_REQUEST,\r\n    GET_TOIN_LIST_REQUEST,\r\n    SET_TOIN_LIST_REQUEST,\r\n    GET_MONOF_LIST_REQUEST,\r\n    SET_MONOF_LIST_REQUEST,\r\n    GET_MONTHJOIN_LIST_REQUEST,\r\n    SET_MONTHJOIN_LIST_REQUEST,\r\n    GET_ATSACTI_LIST_REQUEST,\r\n    SET_ATSACTI_LIST_REQUEST\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    dailytarget: [],\r\n    todaysinterview: [],\r\n    monthoffer:[],\r\n    monthtobejoin:[],\r\n    atsactivity:[],\r\n    loading: false,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_DT_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case SET_DT_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                dailytarget: action.payload,\r\n                loading: false,\r\n            };\r\n        case GET_TOIN_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case SET_TOIN_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                todaysinterview: action.payload,\r\n                loading: false,\r\n            };\r\n            case GET_MONOF_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case SET_MONOF_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                monthoffer: action.payload,\r\n                loading: false,\r\n            };\r\n            case GET_MONTHJOIN_LIST_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    loading: true,\r\n                };\r\n            case SET_MONTHJOIN_LIST_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    monthtobejoin: action.payload,\r\n                    loading: false,\r\n                };\r\n                case GET_ATSACTI_LIST_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    loading: true,\r\n                };\r\n            case SET_ATSACTI_LIST_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    atsactivity: action.payload,\r\n                    loading: false,\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {CREATE_TEAM_SUCCESS, GET_TEAM_LIST_REQUEST,  SET_TEAM_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    teams: [],\r\n    createteam:{},\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_TEAM_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_TEAM_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                teams: action.payload,\r\n                loading:false\r\n            };\r\n            case  CREATE_TEAM_SUCCESS:\r\n                return{\r\n                    ...state,\r\n                    createteam: action.payload,\r\n                    loading:false\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { CREATE_ROLE_SUCCESS, GET_ROLE_LIST_REQUEST,  SET_ROLE_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    role: [],\r\n    loading:false,\r\n    createrole:{},\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_ROLE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_ROLE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                role: action.payload,\r\n                loading:false\r\n            };\r\n            case  CREATE_ROLE_SUCCESS:\r\n            return{\r\n                ...state,\r\n                createrole: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_LEAVE_LIST_REQUEST,  SET_LEAVE_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    leave: [],\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_LEAVE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_LEAVE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                leave: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_HOLIDAY_LIST_REQUEST,  SET_HOLIDAY_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    holiday: [],\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_HOLIDAY_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_HOLIDAY_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                holiday: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {CREATE_CWS_SUCCESS, GET_CWS_LIST_REQUEST,  SET_CWS_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    cws: [],\r\n    createcws:{},\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_CWS_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_CWS_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                cws: action.payload,\r\n                loading:false\r\n            };\r\n            case  CREATE_CWS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                createcws: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_SALESUSER_LIST_REQUEST,  SET_SALESUSER_LIST_REQUEST} from './constants'\r\nconst INIT_STATE = {\r\n    salesuser: [],\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_SALESUSER_LIST_REQUEST: \r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_SALESUSER_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                salesuser: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_RPR_LIST_REQUEST,  SET_RPR_LIST_REQUEST, GET_DATEWISE_LIST_REQUEST, SET_DATEWISE_LIST_REQUEST,\r\nGET_MONTHCOUNT_LIST_REQUEST, SET_MONTHCOUNT_LIST_REQUEST, GET_TODAY_LIST_REQUEST, SET_TODAY_LIST_REQUEST,\r\nGET_REVENU_LIST_REQUEST, SET_REVENU_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    reqreport: [],\r\n    datewsiereport: [],\r\n    loading:false,\r\n    monthcountreport:[],\r\n    todayrepoert:[],\r\n    revenureport:[],\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_RPR_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_RPR_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                reqreport: action.payload,\r\n                loading:false\r\n            };\r\n            case GET_DATEWISE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_DATEWISE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                datewsiereport: action.payload,\r\n                loading:false\r\n            };\r\n            case GET_MONTHCOUNT_LIST_REQUEST:\r\n                return{\r\n                    ...state,\r\n                    //requirement: action.payload,\r\n                    loading:true\r\n                };\r\n            case  SET_MONTHCOUNT_LIST_REQUEST:\r\n                return{\r\n                    ...state,\r\n                    monthcountreport: action.payload,\r\n                    loading:false\r\n                };\r\n                case GET_TODAY_LIST_REQUEST:\r\n                return{\r\n                    ...state,\r\n                    //requirement: action.payload,\r\n                    loading:true\r\n                };\r\n            case  SET_TODAY_LIST_REQUEST:\r\n                return{\r\n                    ...state,\r\n                    todayrepoert: action.payload,\r\n                    loading:false\r\n                };\r\n                case GET_REVENU_LIST_REQUEST:\r\n                    return{\r\n                        ...state,\r\n                        //requirement: action.payload,\r\n                        loading:true\r\n                    };\r\n                case  SET_REVENU_LIST_REQUEST:\r\n                    return{\r\n                        ...state,\r\n                        revenureport: action.payload,\r\n                        loading:false\r\n                    };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_TEAMLEAD_LIST_REQUEST,  SET_TEAMLEAD_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    teamlead: [],\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_TEAMLEAD_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_TEAMLEAD_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                teamlead: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","// @flow\r\n\r\nimport { combineReducers } from 'redux';\r\nimport Layout from './layout/reducers';\r\nimport Auth from './auth/reducers';\r\nimport AppMenu from './appMenu/reducers';\r\nimport Users from './user/reducers'\r\nimport Requirements from './requirement/reducers';\r\nimport Client from './client/reducers';\r\nimport Recruiter from './recruiter/reducers';\r\nimport Attendance from './attendance/reducers';\r\nimport List from './list/reducers';\r\nimport Activity from './activity/reducers';\r\nimport Teams from './teammaster/reducers';\r\nimport Role from './role/reducers';\r\nimport Leave from './leave/reducers';\r\nimport Holiday from './holiday/reducers';\r\nimport CWS from './clientwisesales/reducers';\r\nimport SalesUser from './salesuser/reducers';\r\nimport Report from'./allreport/reducers';\r\nimport TeamLead from'./teamLead/reducers';\r\nexport default combineReducers({\r\n    Auth,\r\n    AppMenu,\r\n    Layout,\r\n    Users,\r\n    Requirements,\r\n    Client,\r\n    Recruiter,\r\n    Attendance,\r\n    List,\r\n    Activity,\r\n    Teams,\r\n    Role,\r\n    Leave,\r\n    Holiday,\r\n    CWS,\r\n    SalesUser,\r\n    Report,\r\n    TeamLead\r\n});\r\n","/**\r\n * Fetch data from given url\r\n * @param {*} url\r\n * @param {*} options\r\n */\r\nconst fetchJSON = (url, options = {}) => {\r\n    return fetch(url, options)\r\n        .then(response => {\r\n            if (!response.status === 200) {\r\n                throw response.json();\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(json => {\r\n            return json;\r\n        })\r\n        .catch(error => {\r\n            throw error;\r\n        });\r\n};\r\n\r\nexport { fetchJSON };\r\n","// @flow\r\nimport { Cookies } from 'react-cookie';\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { fetchJSON } from '../../helpers/api';\r\n\r\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER, FORGET_PASSWORD } from './constants';\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    loginUserFailed,\r\n    registerUserSuccess,\r\n    registerUserFailed,\r\n    forgetPasswordSuccess,\r\n    forgetPasswordFailed,\r\n} from './actions';\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = user => {\r\n    let cookies = new Cookies();\r\n    if (user) cookies.set('user', JSON.stringify(user), { path: '/' });\r\n    else cookies.remove('user', { path: '/' });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n       // const response = yield call(fetchJSON, '/users/authenticate', options);\r\n       const response = yield call(fetchJSON, \"http://144.48.250.235:98/api/login\", options);\r\n        setSession(response.Data);\r\n        console.log(\"working\", response.Message);\r\n        yield put(loginUserSuccess(response.Data));\r\n    } catch (error) {\r\n        let message;\r\n        alert(error);\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(loginUserFailed(message));\r\n        setSession(null);\r\n    }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n    try {\r\n        setSession(null);\r\n        yield call(() => {\r\n            history.push('/account/login');\r\n        });\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ fullname, email, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/register', options);\r\n        yield put(registerUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(registerUserFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/password-reset', options);\r\n        yield put(forgetPasswordSuccess(response.message));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(forgetPasswordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchLoginUser() {\r\n    yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser() {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser() {\r\n    yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword() {\r\n    yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga() {\r\n    yield all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchRegisterUser), fork(watchForgetPassword)]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        if (width === layoutConstants.LAYOUT_WIDTH_BOXED) {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n            yield call(manageBodyClass, 'boxed-layout', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n            yield call(manageBodyClass, 'boxed-layout', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        if (theme === layoutConstants.LEFT_SIDEBAR_THEME_DARK) {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        switch (type) {\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n                break;\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'add');\r\n                break;\r\n            default:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'remove');\r\n                break;\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType() {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth() {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme() {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType() {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar() {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar() {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar() {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga() {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","\r\n/**\r\n * Flatten the nested list of menu items\r\n */\r\nlet uuid = 1;\r\n\r\nconst assignIdAndParent = (menuItems, parentId) => {\r\n    menuItems = menuItems || [];\r\n    menuItems.forEach(item => {\r\n        const id = item.id || uuid;\r\n        uuid += 1;\r\n        item.id = id;\r\n        item.parentId = item.parentId || parentId;\r\n        item.active = false;\r\n\r\n        if (typeof item.children !== 'undefined') {\r\n            assignIdAndParent(item.children, id);\r\n        }\r\n    });\r\n};\r\n\r\nexport default (menuItems) => {\r\n    assignIdAndParent(menuItems);\r\n    return menuItems;\r\n};\r\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        yield put(initMenuSuccess(menuItems));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit() {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange() {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga() {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","import axios from 'axios';\r\n//import { setSession } from './authUtils';\r\n\r\nconst api = axios.create( {\r\n    baseURL : process.env.REACT_APP_BACKEND_URL,\r\n} );\r\n\r\napi.interceptors.response.use( \r\n    ( response ) => {\r\n        return response;\r\n    },\r\n    ( error ) => {\r\n        const originalRequest = error.config;\r\n        let guid = localStorage.getItem( 'crolGUID' );\r\n        delete api.defaults.headers.common['Authorization'];\r\n\r\n        if( guid && error.response.status === 401 && !originalRequest._retry ) {\r\n            originalRequest._retry = true;\r\n            return axios\r\n                .post( `${process.env.REACT_APP_BACKEND_URL}/auth`, { GUID: guid } )\r\n                .then( ( res ) => {\r\n                    if( res.status === 200 ){\r\n                       // setSession( res.data.token, '' );\r\n                        originalRequest.headers.Authorization = `Bearer ` + res.data.token;\r\n                        return axios( originalRequest );\r\n                    }\r\n                } );\r\n        }\r\n\r\n        return Promise.reject( error );\r\n    }\r\n );\r\n\r\nexport default api;","import api from './axios';\r\n\r\n\r\n export const getRequirementList = () => {\r\n    return api.get( '/Requirement_Master' );\r\n };\r\n export const getCriticleRequirementList = () => {\r\n   return api.get( '/CriticalRequirement' );\r\n};\r\n\r\n export const editRequirement = () => {\r\n    return api.get( `/Requirement_Master` );\r\n };\r\n//Client\r\n export const getClientList = () => {\r\n   return api.get( '/client_master' );\r\n};\r\n\r\nexport const setClient = ( createclients ) => {\r\n   return api.post( '/client_master', createclients );\r\n};\r\n// recruter master\r\nexport const getRecruiterList = () => {\r\n   return api.get( '/Recruiter_Mst' );\r\n};\r\n\r\nexport const setRecruiter = ( recruiters ) => {\r\n   return api.post( '/Recruiter_Mst', recruiters );\r\n};\r\n\r\n\r\n/** Puestos endpoints */\r\n\r\nexport const getRqsList = () => {\r\n   return api.get( '/Recruiter_Mst' );\r\n};\r\n\r\nexport const setRqs = ( puesto ) => {\r\n   return api.post( '/Recruiter_Mst', puesto );\r\n};\r\nexport const getAttendance = () => {\r\n   return api.get( '/Attendance_Master' );\r\n};\r\nexport const setAttendance = ( attendance ) => {\r\n   return api.post( 'Attendance_Master', attendance );\r\n};\r\n\r\nexport const getListList = () => {\r\n   return api.get( '/OfferList' );\r\n};\r\n\r\n//offer List\r\nexport const getOfferList = () => {\r\n   return api.get( '/OfferList' );\r\n};\r\n//ViewToBeJoin\r\nexport const getViewToBeJoinList = () => {\r\n   return api.get( '/TobeJoinList' );\r\n};\r\n//JoinList\r\nexport const getJoinList = () => {\r\n   return api.get( '/GetStartList' );\r\n};\r\n//BDList\r\nexport const getBDList = () => {\r\n   return api.get( '/BDList' );\r\n};\r\n\r\n//ACtivity Pages Daily Target \r\n//Daily Target List\r\nexport const getDailyTargetList = () => {\r\n   return api.get( '/DailyTarget' );\r\n};\r\n//TodaysInterview\r\nexport const getTodaysInterviewtList = () => {\r\n   return api.get( '/TodaysInterview' );\r\n};\r\n//Month Offer\r\nexport const getMonthOfferList = () => {\r\n   return api.get( '/MonthOffer' );\r\n};\r\n//Month to Be Join\r\nexport const getMonthToBeJoinList = () => {\r\n   return api.get( '/MonthToBeJoin' );\r\n};\r\n//ATS Activity\r\nexport const getAtsActivityList = () => {\r\n   return api.get( '/ActivityMaster' );\r\n};\r\n//Team master\r\nexport const getTeamList = () => {\r\n   return api.get( '/TeamMaster' );\r\n};\r\nexport const setTeam = (createteam) => {\r\n   return api.post( '/TeamMaster',createteam );\r\n};\r\n//User master \r\nexport const getUserList = () => {\r\n   return api.get( '/User_Master' );\r\n};\r\nexport const setUser = (user) => {\r\n   return api.post( '/User_Master',user);\r\n};\r\n// Team Lead Master \r\nexport const getTeamLead = () => {\r\n   return api.get( '/TeamLead_Master' );\r\n};\r\n//Role master \r\nexport const getRoleList = () => {\r\n   return api.get( '/UserRole_Master' );\r\n};\r\n//Role master \r\nexport const createRole = (createrole) => {\r\n   return api.post( '/UserRole_Master',createrole );\r\n};\r\n//leave\r\nexport const getLeave = () => {\r\n   return api.get( '/LeaveMaster?username=ajay.zala@archesoftronix.com', );\r\n};\r\n//holiday\r\nexport const getHoliday = () => {\r\n   return api.get( '/HolidayMaster', );\r\n};\r\n//client wise sales\r\nexport const getCwsList = () => {\r\n   return api.get( '/SalesClientMaster' );\r\n};\r\nexport const setCws = ( createcws ) => {\r\n   return api.post( '/SalesClientMaster', createcws );\r\n};\r\n//sales user list\r\nexport const getSalesUserList=()=>{\r\n   return api.get('/SalesUser');\r\n}\r\n//requirement progress report \r\nexport const getReqReport=()=>{\r\n   return api.get('/RequirementProgressReport');\r\n}\r\n//datewsie report \r\nexport const getDatewiseReport=()=>{\r\n   return api.get('/DateWiseCountReportMaster?username=ajay.zala@archesoftronix.com&ssd=2021-01-12&eed=2021-02-12');\r\n}\r\n// month count report \r\n//datewsie report \r\nexport const getMonthCountReport=()=>{\r\n   return api.get('/MonthReport?username=ajay.zala@archesoftronix.com');\r\n}\r\n//today report \r\nexport const getTodayReport=()=>{\r\n   return api.get('/TodayReport?username=ajay.zala@archesoftronix.com');\r\n}\r\n//today report \r\nexport const getRevenuReport=()=>{\r\n   return api.get('/RevenueReportDateWise?username=ajay.zala@archesoftronix.com&ssd=2020-01-12&eed=2021-02-12');\r\n}\r\n\r\n/** Departamentos endpoints */\r\nexport const getDepartamentosList = () =>{\r\n    return api.get( '/Requirement_Master' );\r\n };\r\n \r\n export const setDepartamento = ( departamento ) => {\r\n    return api.post( '/Requirement_Master', departamento );\r\n };\r\n \r\n/** Auth */\r\nexport const loginUser = ( username,password) => {\r\n   return api.post( '/login',{username,password});\r\n}; \r\n\r\nexport const getUserImage = ( userId ) => {\r\n   return api.post( '/auth/userimage', { 'id': userId } );\r\n}\r\n\r\n/** Validate windows focus */\r\nexport const getWindowFocusRequest = ( token ) => {\r\n   return api.get( `/auth/verifysession/${token}` );\r\n};","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\n//import swal from 'sweetalert';\r\nimport {\r\n    ADD_USER,\r\n    GET_USER_LIST_REQUEST,\r\n    //SET_USER_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getUserList () {\r\n    try {\r\n        const response = yield  call( api.getUserList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.getUser( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.getUser( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* setUser( action ){\r\n    try {\r\n        const result = yield call( api.setUser, action.payload );\r\n        yield put( actions.setUserRquest( result.data ) );\r\n        yield call( getUserList );\r\n        console.log(result.data);\r\n    } catch (error) {\r\n        console.log(error);\r\n       \r\n    }\r\n}\r\nfunction* watchGetUserRequest(){\r\n    yield takeEvery( GET_USER_LIST_REQUEST, getUserList );\r\n}\r\nfunction* watchSetUser(){\r\n    yield takeEvery( ADD_USER, setUser );\r\n}\r\nfunction* userSagas() {\r\n    yield all([\r\n        fork( watchGetUserRequest ),\r\n        fork( watchSetUser ),\r\n    ]);\r\n}\r\n\r\nexport default userSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_REQUIREMENTS_LIST_REQUEST,\r\n    SET_SAVE_REQUIREMENTS,\r\n    GET_CRITICAL_REQUIREMENTS_LIST\r\n    //SET_CLIENT_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getRequirementList () {\r\n    try {\r\n        const response = yield  call( api.getRequirementList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setRequirement( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setRequirement( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* setSaveRequirement( action ){\r\n        let result = yield call( api.getRequirementList, action.payload, action.jid );\r\n        yield put( action.setSaveRequirement( result.data ) );\r\n    \r\n}\r\nfunction* watchGetRequirementRequest(){\r\n    yield takeEvery( GET_REQUIREMENTS_LIST_REQUEST, getRequirementList );\r\n}\r\nfunction* watchSetSaveRequirement(){\r\n    yield takeEvery( SET_SAVE_REQUIREMENTS, setSaveRequirement );\r\n}\r\nfunction* getCriticalRequirementList () {\r\n    try {\r\n        const response = yield  call( api.getCriticleRequirementList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setCriticalRequirement( response.data.Data ) );\r\n        //console.log(response.data, \"Critical saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setCriticalRequirement( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchCriticalRequirement(){\r\n    yield takeEvery( GET_CRITICAL_REQUIREMENTS_LIST, getCriticalRequirementList );\r\n}\r\nfunction* requirementSagas() {\r\n    yield all([\r\n        fork( watchGetRequirementRequest ),\r\n        fork(watchSetSaveRequirement ),\r\n        fork(watchCriticalRequirement)\r\n    ]);\r\n}\r\n\r\nexport default requirementSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    CREATE_CLIENT,\r\n    GET_CLIENT_LIST_REQUEST,\r\n    //SET_CLIENT_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getClientList () {\r\n    try {\r\n        const response = yield  call( api.getClientList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setClientList( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setClientList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* setClient( action ){\r\n    try {\r\n        const result = yield call( api.setClient, action.payload );\r\n        yield put( actions.createClientSuccess( result.data ) );\r\n        yield call( getClientList );\r\n        console.log(result);\r\n    } catch (error) {\r\n        console.log(error);\r\n       \r\n    }\r\n}\r\nfunction* watchGetClientRequest(){\r\n    yield takeEvery( GET_CLIENT_LIST_REQUEST, getClientList );\r\n}\r\nfunction* watchSetClientRequest(){\r\n    yield takeEvery( CREATE_CLIENT, setClient );\r\n}\r\n\r\n\r\nfunction* clientSagas() {\r\n    yield all([\r\n        fork( watchGetClientRequest ),\r\n        fork(watchSetClientRequest),\r\n    ]);\r\n}\r\n\r\nexport default clientSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_RECRUITER_LIST_REQUEST,\r\n   // SET_RECRUITER_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getRecruiterList () {\r\n    try {\r\n        const response = yield  call( api.getRecruiterList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setRecruiter( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setRecruiter( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n// function* setRecruiter( action ){\r\n//     try {\r\n//         const result = yield call( api.setRecruiter, action.payload );\r\n//         yield put( actions.setRecruiter( result.data ) );\r\n//         yield call( getRecruiterList );\r\n//     } catch (error) {\r\n//         console.log(error);\r\n       \r\n//     }\r\n// }\r\nfunction* watchGetRecruiterRequest(){\r\n    yield takeEvery( GET_RECRUITER_LIST_REQUEST, getRecruiterList );\r\n}\r\n\r\nfunction* recruiterSagas() {\r\n    yield all([\r\n        fork( watchGetRecruiterRequest ),\r\n    ]);\r\n}\r\n\r\nexport default recruiterSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_ATTENDANCE_LIST_REQUEST,\r\n    //SET_CLIENT_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getAttendanceList () {\r\n    try {\r\n        const response = yield  call( api.getAttendance );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setAttendance( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setAttendance( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n// function* setAttendance( action ){\r\n//     try {\r\n//         const result = yield call( api.setAttendance, action.payload );\r\n//         yield put( actions.setAttendance( result.data ) );\r\n//         yield call( getAttendanceList );\r\n//     } catch (error) {\r\n//         console.log(error);\r\n       \r\n//     }\r\n// }\r\nfunction* watchGetAttendanceRequest(){\r\n    yield takeEvery( GET_ATTENDANCE_LIST_REQUEST, getAttendanceList );\r\n}\r\n\r\nfunction* attendanceSagas() {\r\n    yield all([\r\n        fork( watchGetAttendanceRequest ),\r\n    ]);\r\n}\r\n\r\nexport default attendanceSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_LIST_LIST_REQUEST,\r\n    GET_OFFER_LIST_REQUEST,\r\n    GET_VTBJ_LIST_REQUEST,\r\n    GET_JOIN_LIST_REQUEST,\r\n    GET_BD_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getListList () {\r\n    try {\r\n        const response = yield  call( api.getListList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetListRequest(){\r\n    yield takeEvery( GET_LIST_LIST_REQUEST, getListList );\r\n}\r\n//offer\r\nfunction* getOfferList () {\r\n    try {\r\n        const response = yield  call( api.getOfferList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setOfferList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setOfferList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetOfferRequest(){\r\n    yield takeEvery( GET_OFFER_LIST_REQUEST, getOfferList );\r\n}\r\n//view to be join\r\nfunction* getViewToBeJoinList () {\r\n    try {\r\n        const response = yield  call( api.getViewToBeJoinList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setViewToBeJoinList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setViewToBeJoinList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetViewToBeJoinRequest(){\r\n    yield takeEvery( GET_VTBJ_LIST_REQUEST, getViewToBeJoinList );\r\n}\r\n\r\n//Join List\r\nfunction* getJoinList () {\r\n    try {\r\n        const response = yield  call( api.getJoinList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setJoinList( response.data.Data ) );\r\n        //console.log(response.data)\r\n       }\r\n       else{\r\n        yield put( actions.setJoinList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetJoinRequest(){\r\n    yield takeEvery( GET_JOIN_LIST_REQUEST, getJoinList );\r\n}\r\n\r\n//BD List\r\nfunction* getBDList () {\r\n    try {\r\n        const response = yield  call( api.getBDList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setBDList( response.data.Data ) );\r\n        //console.log(response.data)\r\n       }\r\n       else{\r\n        yield put( actions.setBDList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetBDRequest(){\r\n    yield takeEvery( GET_BD_LIST_REQUEST, getBDList );\r\n}\r\n\r\nfunction* listSagas() {\r\n    yield all([\r\n        fork( watchGetListRequest ),\r\n        fork( watchGetOfferRequest ),\r\n        fork( watchGetViewToBeJoinRequest ),\r\n        fork( watchGetJoinRequest ),\r\n        fork( watchGetBDRequest ),\r\n    ]);\r\n}\r\n\r\nexport default listSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_DT_LIST_REQUEST,\r\n    GET_TOIN_LIST_REQUEST,\r\n    GET_MONOF_LIST_REQUEST,\r\n    GET_MONTHJOIN_LIST_REQUEST,\r\n    GET_ATSACTI_LIST_REQUEST\r\n} from './constants'\r\n\r\n//Daily Target Submission\r\nfunction* getDailyTargetList () {\r\n    try {\r\n        const response = yield  call( api.getDailyTargetList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setDailyTargetList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setDailyTargetList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetDailyTargetRequest(){\r\n    yield takeEvery( GET_DT_LIST_REQUEST, getDailyTargetList );\r\n}\r\n// Todays Interview\r\nfunction* getTodaysInterviewList () {\r\n    try {\r\n        const response = yield  call( api.getTodaysInterviewtList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setTodaysInterviewList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setTodaysInterviewList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetTodaysInterviewRequest(){\r\n    yield takeEvery( GET_TOIN_LIST_REQUEST, getTodaysInterviewList );\r\n}\r\n// Month Offer\r\nfunction* getMonthOfferList () {\r\n    try {\r\n        const response = yield  call( api.getMonthOfferList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setMonthOfferList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setMonthOfferList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetMonthOfferRequest(){\r\n    yield takeEvery( GET_MONOF_LIST_REQUEST, getMonthOfferList );\r\n}\r\n\r\n// Month to be join\r\nfunction* getMonthToBeJoinList () {\r\n    try {\r\n        const response = yield  call( api.getMonthToBeJoinList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setMonthToBeJoinList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setMonthToBeJoinList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetMonthToBeJoinRequest(){\r\n    yield takeEvery( GET_MONTHJOIN_LIST_REQUEST, getMonthToBeJoinList );\r\n}\r\n// Ats activity\r\nfunction* getAtsActivityList () {\r\n    try {\r\n        const response = yield  call( api.getAtsActivityList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setAtsActivityList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setAtsActivityList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetAtsActivityRequest(){\r\n    yield takeEvery( GET_ATSACTI_LIST_REQUEST, getAtsActivityList );\r\n}\r\nfunction* activitySagas() {\r\n    yield all([\r\n        fork( watchGetDailyTargetRequest ),\r\n        fork( watchGetTodaysInterviewRequest ),\r\n        fork( watchGetMonthOfferRequest ),\r\n        fork(watchGetMonthToBeJoinRequest),\r\n        fork(watchGetAtsActivityRequest),\r\n    ]);\r\n}\r\n\r\nexport default activitySagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    CREATE_TEAM,\r\n    GET_TEAM_LIST_REQUEST,\r\n    //SET_TEAM_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getTeamList () {\r\n    try {\r\n        const response = yield  call( api.getTeamList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setTeam( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setTeam( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* setTeam( action ){\r\n    try {\r\n        const result = yield call( api.setTeam, action.payload );\r\n        yield put( actions.createTeamSuccess( result.data ) );\r\n        yield call( getTeamList );\r\n        console.log(result);\r\n    } catch (error) {\r\n        console.log(error);\r\n       \r\n    }\r\n}\r\nfunction* watchGetTeamRequest(){\r\n    yield takeEvery( GET_TEAM_LIST_REQUEST, getTeamList );\r\n}\r\nfunction* watchSetTeamRequest(){\r\n    yield takeEvery( CREATE_TEAM, setTeam );\r\n}\r\nfunction* teamSagas() {\r\n    yield all([\r\n        fork( watchGetTeamRequest ),\r\n        fork( watchSetTeamRequest ),\r\n    ]);\r\n}\r\n\r\nexport default teamSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    CREATE_ROLE,\r\n    //CREATE_ROLE_SUCCESS,\r\n    GET_ROLE_LIST_REQUEST,\r\n    //SET_ROLE_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getRoleList () {\r\n    try {\r\n        const response = yield  call( api.getRoleList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.getRolelistRequest( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.getRolelistRequest( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* createRole( action ){\r\n    try {\r\n        const result = yield call( api.createRole, action.payload );\r\n        yield put( actions.createRoleSuccess( result.data ) );\r\n        yield call( getRoleList );\r\n        console.log(result.data);\r\n    } catch (error) {\r\n        console.log(error);\r\n       \r\n    }\r\n}\r\nfunction* watchGetRoleRequest(){\r\n    yield takeEvery( GET_ROLE_LIST_REQUEST, getRoleList );\r\n}\r\nfunction* watchSetRoleRequest(){\r\n    yield takeEvery( CREATE_ROLE, createRole );\r\n}\r\n\r\nfunction* roleSagas() {\r\n    yield all([\r\n        fork( watchGetRoleRequest ),\r\n        fork( watchSetRoleRequest ),\r\n    ]);\r\n}\r\n\r\nexport default roleSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_LEAVE_LIST_REQUEST,\r\n    //SET_CLIENT_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getLeaveList () {\r\n    try {\r\n        const response = yield  call( api.getLeave );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setLeave( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setLeave( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n// function* setLeave( action ){\r\n//     try {\r\n//         const result = yield call( api.setLeave, action.payload );\r\n//         yield put( actions.setLeave( result.data ) );\r\n//         yield call( getLeaveList );\r\n//     } catch (error) {\r\n//         console.log(error);\r\n       \r\n//     }\r\n// }\r\nfunction* watchGetLeaveRequest(){\r\n    yield takeEvery( GET_LEAVE_LIST_REQUEST, getLeaveList );\r\n}\r\n\r\nfunction* leaveSagas() {\r\n    yield all([\r\n        fork( watchGetLeaveRequest ),\r\n    ]);\r\n}\r\n\r\nexport default leaveSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_HOLIDAY_LIST_REQUEST,\r\n    //SET_CLIENT_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getHolidayList () {\r\n    try {\r\n        const response = yield  call( api.getHoliday );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setHoliday( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setHoliday( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n// function* setHoliday( action ){\r\n//     try {\r\n//         const result = yield call( api.setHoliday, action.payload );\r\n//         yield put( actions.setHoliday( result.data ) );\r\n//         yield call( getHolidayList );\r\n//     } catch (error) {\r\n//         console.log(error);\r\n       \r\n//     }\r\n// }\r\nfunction* watchGetHolidayRequest(){\r\n    yield takeEvery( GET_HOLIDAY_LIST_REQUEST, getHolidayList );\r\n}\r\n\r\nfunction* holidaySagas() {\r\n    yield all([\r\n        fork( watchGetHolidayRequest ),\r\n    ]);\r\n}\r\n\r\nexport default holidaySagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    CREATE_CWS,\r\n    GET_CWS_LIST_REQUEST,\r\n    //SET_CWS_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getCwsList () {\r\n    try {\r\n        const response = yield  call( api.getCwsList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setCwsList( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setCwsList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* setCws( action ){\r\n    try {\r\n        const result = yield call( api.setCws, action.payload );\r\n        yield put( actions.createCwsSuccess( result.data ) );\r\n        yield call( getCwsList );\r\n        console.log(result);\r\n    } catch (error) {\r\n        console.log(error);\r\n       \r\n    }\r\n}\r\nfunction* watchGetCwsRequest(){\r\n    yield takeEvery( GET_CWS_LIST_REQUEST, getCwsList );\r\n}\r\nfunction* watchSetCwsRequest(){\r\n    yield takeEvery( CREATE_CWS, setCws );\r\n}\r\n\r\n\r\nfunction* cwsSagas() {\r\n    yield all([\r\n        fork( watchGetCwsRequest ),\r\n        fork(watchSetCwsRequest),\r\n    ]);\r\n}\r\n\r\nexport default cwsSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_SALESUSER_LIST_REQUEST,\r\n   // SET_SALESUSER_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getSalesUserList () {\r\n    try {\r\n        const response = yield  call( api.getSalesUserList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setSalesUser( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setSalesUser( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n// function* setSalesUser( action ){\r\n//     try {\r\n//         const result = yield call( api.setSalesUser, action.payload );\r\n//         yield put( actions.setSalesUser( result.data ) );\r\n//         yield call( getSalesUserList );\r\n//     } catch (error) {\r\n//         console.log(error);\r\n       \r\n//     }\r\n// }\r\nfunction* watchGetSalesUserRequest(){\r\n    yield takeEvery( GET_SALESUSER_LIST_REQUEST, getSalesUserList );\r\n}\r\n\r\nfunction* salesUserSagas() {\r\n    yield all([\r\n        fork( watchGetSalesUserRequest ),\r\n    ]);\r\n}\r\n\r\nexport default salesUserSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_RPR_LIST_REQUEST,\r\n    GET_DATEWISE_LIST_REQUEST,\r\n    GET_MONTHCOUNT_LIST_REQUEST,\r\n    GET_TODAY_LIST_REQUEST,\r\n    GET_REVENU_LIST_REQUEST\r\n    //SET_CLIENT_LIST_REQUEST\r\n} from './constants'\r\n\r\n// requirement report\r\nfunction* getReqReportList () {\r\n    try {\r\n        const response = yield  call( api.getReqReport );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setReqReport( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setReqReport( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetReqReportRequest(){\r\n    yield takeEvery( GET_RPR_LIST_REQUEST, getReqReportList );\r\n}\r\n// datewise report\r\nfunction* getDatewiseReportList () {\r\n    try {\r\n        const response = yield  call( api.getDatewiseReport );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setDatewiseReport( response.data.Data ) );\r\n        //console.log(response.data, \"Datewiseuire saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setDatewiseReport( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetDatewiseReportRequest(){\r\n    yield takeEvery( GET_DATEWISE_LIST_REQUEST, getDatewiseReportList );\r\n}\r\n// Month count report\r\nfunction* getMonthCountReportList () {\r\n    try {\r\n        const response = yield  call( api.getMonthCountReport );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setMonthCountReport( response.data.Data ) );\r\n        //console.log(response.data, \"MonthCountuire saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setMonthCountReport( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetMonthCountReportRequest(){\r\n    yield takeEvery( GET_MONTHCOUNT_LIST_REQUEST, getMonthCountReportList );\r\n}\r\n// Today report\r\nfunction* getTodayReportList () {\r\n    try {\r\n        const response = yield  call( api.getTodayReport );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setTodayReport( response.data.Data ) );\r\n        //console.log(response.data, \"Todayuire saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setTodayReport( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetTodayReportRequest(){\r\n    yield takeEvery( GET_TODAY_LIST_REQUEST, getTodayReportList );\r\n}\r\n// Revenu report\r\nfunction* getRevenuReportList () {\r\n    try {\r\n        const response = yield  call( api.getRevenuReport );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setRevenuReport( response.data.Data ) );\r\n        //console.log(response.data, \"Revenuuire saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setRevenuReport( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetRevenuReportRequest(){\r\n    yield takeEvery( GET_REVENU_LIST_REQUEST, getRevenuReportList );\r\n}\r\nfunction* reqReportSagas() {\r\n    yield all([\r\n        fork( watchGetReqReportRequest ),\r\n        fork( watchGetDatewiseReportRequest ),\r\n        fork(watchGetMonthCountReportRequest),\r\n        fork(watchGetTodayReportRequest),\r\n        fork(watchGetRevenuReportRequest),\r\n    ]);\r\n}\r\n\r\nexport default reqReportSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_TEAMLEAD_LIST_REQUEST,\r\n    //SET_CLIENT_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getTeamLeadList () {\r\n    try {\r\n        const response = yield  call( api.getTeamLead );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setTeamLead( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setTeamLead( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n// function* setTeamLead( action ){\r\n//     try {\r\n//         const result = yield call( api.setTeamLead, action.payload );\r\n//         yield put( actions.setTeamLead( result.data ) );\r\n//         yield call( getTeamLeadList );\r\n//     } catch (error) {\r\n//         console.log(error);\r\n       \r\n//     }\r\n// }\r\nfunction* watchGetTeamLeadRequest(){\r\n    yield takeEvery( GET_TEAMLEAD_LIST_REQUEST, getTeamLeadList );\r\n}\r\n\r\nfunction* teamLeadSagas() {\r\n    yield all([\r\n        fork( watchGetTeamLeadRequest ),\r\n    ]);\r\n}\r\n\r\nexport default teamLeadSagas;\r\n","// @flow\r\nimport { all } from 'redux-saga/effects';\r\nimport authSaga from './auth/saga';\r\nimport layoutSaga from './layout/saga';\r\nimport appMenuSaga from './appMenu/saga';\r\nimport userSaga from './user/sagas';\r\nimport requirementSagas from './requirement/sagas';\r\nimport clientSagas from './client/sagas';\r\nimport recruiterSagas from './recruiter/sagas';\r\nimport attendanceSagas from './attendance/sagas';\r\nimport listSagas from './list/sagas';\r\nimport activitySagas from './activity/sagas';\r\nimport teamSagas from './teammaster/sagas';\r\nimport roleSagas from './role/sagas';\r\nimport leaveSagas from './leave/sagas';\r\nimport holidaySagas from './holiday/sagas';\r\nimport cwsSagas from './clientwisesales/sagas';\r\nimport salesUserSagas from './salesuser/sagas';\r\nimport reqReportSagas from './allreport/sagas';\r\nimport teamLeadSagas from './teamLead/sagas';\r\nexport default function* rootSaga(getState: any): any {\r\n    yield all( [\r\n        authSaga(), \r\n        layoutSaga(), \r\n        appMenuSaga(), \r\n        userSaga(),\r\n        requirementSagas(),\r\n        clientSagas(),\r\n       recruiterSagas(),\r\n       attendanceSagas(),\r\n       listSagas(),\r\n       activitySagas(),\r\n       teamSagas(),\r\n       roleSagas(),\r\n       leaveSagas(),\r\n       holidaySagas(),\r\n       cwsSagas(),\r\n       salesUserSagas(),\r\n       reqReportSagas(),\r\n       teamLeadSagas(),\r\n    ] );\r\n}\r\n","// @flow\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducers from './reducers';\r\nimport sagas from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState: {}) {\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\r\n    sagaMiddleware.run(sagas);\r\n    return store;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './redux/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore()}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n","import {GET_ATTENDANCE_LIST_REQUEST, \r\n   SET_ATTENDANCE_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getAttendanceList =()=>({\r\n  type:GET_ATTENDANCE_LIST_REQUEST\r\n})\r\n\r\nexport const setAttendance = ( attendance ) => ( {\r\n  type: SET_ATTENDANCE_LIST_REQUEST,\r\n  payload: attendance\r\n} );","/* Layout types and other constants */\r\n\r\nexport const LAYOUT_VERTICAL = 'vertical';\r\nexport const LAYOUT_HORIZONTAL = 'topnav';\r\n\r\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\r\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\r\n\r\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\r\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\r\n\r\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\r\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\r\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\r\n","import {CREATE_ROLE, CREATE_ROLE_SUCCESS, GET_ROLE_LIST_REQUEST, \r\n   SET_ROLE_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getRoleList =()=>({\r\n  type:GET_ROLE_LIST_REQUEST\r\n})\r\n\r\nexport const getRolelistRequest = ( role ) => ( {\r\n  type: SET_ROLE_LIST_REQUEST,\r\n  payload: role\r\n} );\r\nexport const createRole = ( createrole ) => ( {\r\n  type: CREATE_ROLE,\r\n  payload: createrole\r\n} );\r\nexport const createRoleSuccess = ( createrole ) => ( {\r\n  type: CREATE_ROLE_SUCCESS,\r\n  payload: createrole\r\n} );","import {CREATE_CLIENT, CREATE_CLIENT_SUCCESS, GET_CLIENT_LIST_REQUEST, \r\n   SET_CLIENT_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getClientList =()=>({\r\n  type:GET_CLIENT_LIST_REQUEST\r\n})\r\n\r\nexport const setClientList = ( clients ) => ( {\r\n  type: SET_CLIENT_LIST_REQUEST,\r\n  payload: clients\r\n} );\r\n\r\nexport const createClient = ( clients ) => ( {\r\n  type: CREATE_CLIENT,\r\n  payload: clients\r\n} );\r\nexport const createClientSuccess = ( createclients ) => ( {\r\n  type: CREATE_CLIENT_SUCCESS,\r\n  payload: createclients\r\n} );","import {CREATE_TEAM, CREATE_TEAM_SUCCESS, GET_TEAM_LIST_REQUEST, \r\n   SET_TEAM_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getTeamList =()=>({\r\n  type:GET_TEAM_LIST_REQUEST\r\n})\r\n\r\nexport const setTeam = ( teams ) => ( {\r\n  type: SET_TEAM_LIST_REQUEST,\r\n  payload: teams\r\n} );\r\nexport const createTeam = ( createteam ) => ( {\r\n  type: CREATE_TEAM,\r\n  payload: createteam\r\n} );\r\nexport const createTeamSuccess = ( createteam ) => ( {\r\n  type: CREATE_TEAM_SUCCESS,\r\n  payload: createteam\r\n} );","\r\n/** List of Client */\r\nexport const GET_ATTENDANCE_LIST_REQUEST = 'GET_ATTENDANCE_LIST_REQUEST';\r\nexport const SET_ATTENDANCE_LIST_REQUEST = 'SET_ATTENDANCE_LIST_REQUEST';\r\n\r\n","\r\n/** List of Client */\r\nexport const GET_HOLIDAY_LIST_REQUEST = 'GET_HOLIDAY_LIST_REQUEST';\r\nexport const SET_HOLIDAY_LIST_REQUEST = 'SET_HOLIDAY_LIST_REQUEST';\r\n\r\n","\r\n/** List of Client */\r\nexport const GET_LEAVE_LIST_REQUEST = 'GET_LEAVE_LIST_REQUEST';\r\nexport const SET_LEAVE_LIST_REQUEST = 'SET_LEAVE_LIST_REQUEST';\r\n\r\n","\r\n/** List of Client */\r\nexport const GET_RECRUITER_LIST_REQUEST = 'GET_RECRUITER_LIST_REQUEST';\r\nexport const SET_RECRUITER_LIST_REQUEST = 'SET_RECRUITER_LIST_REQUEST';\r\n\r\n","\r\n/** List of Client */\r\nexport const GET_TEAMLEAD_LIST_REQUEST = 'GET_TEAMLEAD_LIST_REQUEST';\r\nexport const SET_TEAMLEAD_LIST_REQUEST = 'SET_TEAMLEAD_LIST_REQUEST';\r\n\r\n","\r\n/** List of Client */\r\nexport const GET_SALESUSER_LIST_REQUEST = 'GET_SALESUSER_LIST_REQUEST';\r\nexport const SET_SALESUSER_LIST_REQUEST = 'SET_SALESUSER_LIST_REQUEST';\r\n\r\n","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\n\r\nexport const loginUser = (username, password, rememberme) => ({\r\n    type: LOGIN_USER,\r\n    payload: { username, password, rememberme },\r\n});\r\n\r\nexport const loginUserSuccess = (user) => {\r\n    console.log('loginUserSuccess user==',user)\r\n     return {\r\n        type: LOGIN_USER_SUCCESS,\r\n        payload: user,\r\n    }\r\n\r\n}\r\n\r\nexport const loginUserFailed = (error) => ({\r\n    type: LOGIN_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const registerUser = (fullname, email, password) => ({\r\n    type: REGISTER_USER,\r\n    payload: { fullname, email, password },\r\n});\r\n\r\nexport const registerUserSuccess = (user) => ({\r\n    type: REGISTER_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const registerUserFailed = (error) => ({\r\n    type: REGISTER_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const logoutUser = (history) => ({\r\n    type: LOGOUT_USER,\r\n    payload: { history },\r\n});\r\n\r\nexport const forgetPassword = (username) => ({\r\n    type: FORGET_PASSWORD,\r\n    payload: { username },\r\n});\r\n\r\nexport const forgetPasswordSuccess = (passwordResetStatus) => ({\r\n    type: FORGET_PASSWORD_SUCCESS,\r\n    payload: passwordResetStatus,\r\n});\r\n\r\nexport const forgetPasswordFailed = (error) => ({\r\n    type: FORGET_PASSWORD_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\r\nimport jwtDecode from 'jwt-decode';\r\nimport { Cookies } from 'react-cookie';\r\n\r\n/**\r\n * Checks if user is authenticated\r\n */\r\nconst isUserAuthenticated = () => {\r\n   \r\n    const user = getLoggedInUser();\r\n    if (!user) {\r\n        return false;\r\n    }\r\n    //console.log(\"isUserAuthenticated\",user);\r\n    const decoded = jwtDecode(user.token);\r\n    const currentTime = Date.now() / 1000;\r\n    if (decoded.exp < currentTime) {\r\n        console.warn('access token expired');\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n};\r\n\r\n/**\r\n * Returns the logged in user\r\n */\r\nconst getLoggedInUser = () => {\r\n    const cookies = new Cookies();\r\n    const user = cookies.get('user');\r\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\r\n};\r\n\r\nexport { isUserAuthenticated, getLoggedInUser };\r\n","import {CREATE_CWS, CREATE_CWS_SUCCESS, GET_CWS_LIST_REQUEST, \r\n   SET_CWS_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getCwsList =()=>({\r\n  type:GET_CWS_LIST_REQUEST\r\n})\r\n\r\nexport const setCwsList = ( cws ) => ( {\r\n  type: SET_CWS_LIST_REQUEST,\r\n  payload: cws\r\n} );\r\n\r\nexport const createCws = ( cws ) => ( {\r\n  type: CREATE_CWS,\r\n  payload: cws\r\n} );\r\nexport const createCwsSuccess = ( createcws ) => ( {\r\n  type: CREATE_CWS_SUCCESS,\r\n  payload: createcws\r\n} );"],"sourceRoot":""}