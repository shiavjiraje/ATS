{"version":3,"sources":["redux/actions.js","assets/images/logo.png","components/Loader.js","../node_modules/react-feather/dist/icons/lock.js","pages/auth/Login.js"],"names":["module","exports","PreLoaderWidget","Component","render","className","role","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Lock","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","rx","ry","d","propTypes","PropTypes","string","oneOfType","number","displayName","Login","constructor","props","super","renderRedirectToRoot","isAuthTokenValid","isUserAuthenticated","console","log","to","handleValidSubmit","bind","state","username","password","rememberme","componentDidMount","document","body","classList","add","componentWillUnmount","remove","event","values","loginUser","history","push","Fragment","_isMounted","xl","md","loading","href","src","logo","alt","error","isOpen","onValidSubmit","htmlFor","addonType","type","name","id","placeholder","value","required","connect","Auth","user"],"mappings":"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","file":"static/js/7.105133da.chunk.js","sourcesContent":["export * from './auth/actions';\r\nexport * from './layout/actions';\r\nexport * from './appMenu/actions';\r\nexport * from './user/actions';\r\nexport * from './requirement/actions';\r\nexport * from './client/actions';\r\nexport * from './recruiter/actions';\r\nexport * from './attendance/actions'\r\nexport * from './list/actions';\r\nexport * from './activity/actions';\r\nexport * from './teammaster/actions';\r\nexport * from './role/actions';\r\nexport * from './leave/actions';\r\nexport * from './holiday/actions';\r\nexport * from './clientwisesales/actions';\r\nexport * from './salesuser/actions';\r\nexport * from './allreport/actions';\r\nexport * from './teamLead/actions';","module.exports = __webpack_public_path__ + \"static/media/logo.d67de05f.png\";","import React, { Component } from 'react';\r\n\r\n/**\r\n * Renders the preloader\r\n */\r\nclass PreLoaderWidget extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"preloader\">\r\n                <div className=\"status\">\r\n                    <div className=\"spinner-border avatar-sm text-primary m-2\" role=\"status\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PreLoaderWidget;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Lock = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"rect\", {\n    x: \"3\",\n    y: \"11\",\n    width: \"18\",\n    height: \"11\",\n    rx: \"2\",\n    ry: \"2\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 11V7a5 5 0 0 1 10 0v4\"\n  }));\n});\nLock.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nLock.displayName = 'Lock';\nexport default Lock;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Link } from 'react-router-dom'\r\n\r\nimport { Container, Row, Col,Label, FormGroup, Button, Alert, InputGroup, InputGroupAddon } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvFeedback } from 'availity-reactstrap-validation';\r\nimport { Mail, Lock } from 'react-feather';\r\n\r\nimport { loginUser } from '../../redux/actions';\r\nimport { isUserAuthenticated } from '../../helpers/authUtils';\r\nimport Loader from '../../components/Loader';\r\nimport logo from '../../assets/images/logo.png';\r\n//import logo2 from '../../assets/images/logo2.png';\r\n\r\nclass Login extends Component {\r\n    //_isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleValidSubmit = this.handleValidSubmit.bind(this);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            rememberme:true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n       // this._isMounted = true;\r\n        document.body.classList.add('authentication-bg');\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //this._isMounted = false;\r\n        document.body.classList.remove('authentication-bg');\r\n    }\r\n\r\n    /**\r\n     * Handles the submit\r\n     */\r\n    handleValidSubmit (event, values) {\r\n        this.props.loginUser(values.username, values.password, values.rememberme=true, this.props.history.push);\r\n    }\r\n\r\n\r\n    /**\r\n     * Redirect to root\r\n     */\r\n    renderRedirectToRoot = () => {\r\n        const isAuthTokenValid = isUserAuthenticated();\r\n        console.log(\"login isAuthTokenValid\", isAuthTokenValid)\r\n        if (isAuthTokenValid) {\r\n            return <Redirect to='/' />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const isAuthTokenValid = isUserAuthenticated();\r\n        return (\r\n            <React.Fragment>\r\n\r\n                {this.renderRedirectToRoot()}\r\n\r\n                {(this._isMounted || !isAuthTokenValid) && <div className=\"account-pages my-5\">\r\n                    <Container>\r\n                        <Row className=\"justify-content-center\">\r\n                            <Col xl={10}>\r\n                                        <Row>\r\n                                            \r\n\r\n                                            <Col md={6} className=\"d-none d-md-inline-block p-0\">\r\n                                                <div className=\"auth-page-sidebar\">\r\n                                                    </div>\r\n                                            </Col>\r\n                                            <Col md={6} className=\"p-5 position-relative\">\r\n                                                { /* preloader */}\r\n                                                <div className=\"card shadow p-4\">\r\n                                                {this.props.loading && <Loader />}\r\n                                                <div className=\"row\">\r\n                                                <div className=\"col-sm-12 mb-5\">\r\n                                                    <a href=\"/\">\r\n                                                        <img src={logo} alt=\"\" className=\"logo1\" />\r\n                                                    </a>\r\n                                                </div>\r\n                                                {/* <div className=\"col-sm-6 mb-5\">\r\n                                                    <a href=\"/\">\r\n                                                        <img src={logo2} alt=\"\" className=\"logo2 img-brd2\"  />\r\n                                                    </a>\r\n                                                </div> */}\r\n                                                </div>\r\n                                                <h6 className=\"h5 mb-0 mt-2\">Welcome back!</h6>\r\n\r\n\r\n                                                {this.props.error && <Alert color=\"danger\" isOpen={this.props.error ? true : false}>\r\n                                                    <div>{this.props.error}</div>\r\n                                                </Alert>}\r\n\r\n                                                <AvForm onValidSubmit={this.handleValidSubmit} className=\"authentication-form\">\r\n                                                    <AvGroup className=\"mt-3\">\r\n                                                        <Label htmlFor=\"username\">Username</Label>\r\n                                                        <InputGroup>\r\n                                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                                <span className=\"input-group-text\">\r\n                                                                    <Mail className=\"icon-dual\" />\r\n                                                                </span>\r\n                                                            </InputGroupAddon>\r\n                                                            <AvInput type=\"text\" name=\"username\" id=\"username\" placeholder=\"hello@coderthemes.com\" value={this.state.username} required />\r\n                                                        </InputGroup>\r\n                                                        \r\n                                                        <AvFeedback>This field is invalid</AvFeedback>\r\n                                                    </AvGroup>\r\n\r\n\r\n                                                    <AvGroup className=\"mb-3 mt-4\">\r\n                                                        <Label htmlFor=\"password\">Password</Label>                                                        \r\n                                                        <InputGroup>\r\n                                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                                <span className=\"input-group-text\">\r\n                                                                    <Lock className=\"icon-dual\" />\r\n                                                                </span>\r\n                                                            </InputGroupAddon>\r\n                                                            <AvInput type=\"password\" name=\"password\" id=\"password\" placeholder=\"Enter your password\" value={this.state.password} required />\r\n                                                        </InputGroup>\r\n                                                        <AvFeedback>This field is invalid</AvFeedback>\r\n                                                    </AvGroup>\r\n                                                    <div className=\"form-check mt-2\">\r\n                                                        <input type=\"checkbox\" className=\"form-check-input\" id=\"rememberme\" name=\"rememberme\" value={this.state.rememberme}/>\r\n                                                        <label className=\"form-check-label\" htmlFor=\"rememberme\">Remember Me</label>\r\n                                                        <Link to=\"/account/forget-password\" className=\"float-right text-muted text-unline-dashed ml-1\">Forgot your password?</Link>\r\n                                                    </div>\r\n                                                    \r\n                                                    <FormGroup className=\"form-group mb-0 mt-3 text-center\">\r\n                                                        <Button color=\"\" className=\"login-btn btn-block\">Log In</Button>\r\n                                                    </FormGroup>\r\n                                                </AvForm>\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        {/* <Row className=\"mt-3\">\r\n                            <Col className=\"col-12 text-center\">\r\n                                <p className=\"text-muted\">Don't have an account? <Link to=\"/account/register\" className=\"text-primary font-weight-bold ml-1\">Sign Up</Link></p>\r\n                            </Col>\r\n                        </Row> */}\r\n\r\n                    </Container>\r\n                </div>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { user, loading, error } = state.Auth;\r\n    return { user, loading, error };\r\n};\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);"],"sourceRoot":""}