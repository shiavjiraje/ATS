{"version":3,"sources":["redux/actions.js","components/ThemeCustomizer.js","layouts/Horizontal.js"],"names":["ThemeCustomizer","Component","constructor","props","super","componentDidMount","this","_loadStateFromProps","componentDidUpdate","prevProps","prevState","handleClose","e","preventDefault","hideRightSidebar","changeLayout","currentTarget","value","setState","isHorizontalLayout","state","isCondensed","isDetachedLayout","layoutConstants","changeWidthMode","isBoxed","changeLayoutWidth","changeTheme","isLight","isDark","changeSidebarTheme","changeLeftSiderbarType","isSidebarScrollable","changeSidebarType","bind","layoutType","layoutWidth","leftSideBarType","leftSideBarTheme","render","Fragment","className","role","type","name","id","onChange","checked","htmlFor","disabled","connect","showRightSidebar","Layout","Topbar","React","lazy","Navbar","RightSidebar","Footer","loading","HorizontalLayout","openMenu","isMenuOpened","children","fallback","openLeftMenuCallBack","fluid","title","layout","user","Auth"],"mappings":"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","file":"static/js/13.6ce0e2af.chunk.js","sourcesContent":["export * from './auth/actions';\r\nexport * from './layout/actions';\r\nexport * from './appMenu/actions';\r\nexport * from './user/actions';\r\nexport * from './requirement/actions';\r\nexport * from './client/actions';\r\nexport * from './recruiter/actions';\r\nexport * from './attendance/actions'\r\nexport * from './list/actions';\r\nexport * from './activity/actions';\r\nexport * from './teammaster/actions';\r\nexport * from './role/actions';\r\nexport * from './leave/actions';\r\nexport * from './holiday/actions';\r\nexport * from './clientwisesales/actions';\r\nexport * from './salesuser/actions';\r\nexport * from './allreport/actions';\r\nexport * from './teamLead/actions';","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n    hideRightSidebar,\r\n    changeLayout,\r\n    changeLayoutWidth,\r\n    changeSidebarTheme,\r\n    changeSidebarType,\r\n} from '../redux/actions';\r\n\r\nimport * as layoutConstants from '../constants/layout';\r\n\r\n\r\nclass ThemeCustomizer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.changeLayout = this.changeLayout.bind(this);\r\n        this.changeWidthMode = this.changeWidthMode.bind(this);\r\n        this.changeTheme = this.changeTheme.bind(this);\r\n        this.changeLeftSiderbarType = this.changeLeftSiderbarType.bind(this);\r\n\r\n        this.state = {\r\n            isHorizontalLayout: false,\r\n            isBoxed: false,\r\n            isSidebarScrollable: false,\r\n            isCondensed: false,\r\n            isLight: false,\r\n            isDark: false,\r\n        };\r\n    }\r\n\r\n    /**\r\n     *  component did mount hook\r\n     */\r\n    componentDidMount = () => {\r\n        this._loadStateFromProps();\r\n    };\r\n\r\n    /**\r\n     * component did update hook\r\n     */\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if (prevProps !== this.props) {\r\n            this._loadStateFromProps();\r\n        }\r\n    };\r\n    /**\r\n     * Handles the close\r\n     */\r\n    handleClose = e => {\r\n        e.preventDefault();\r\n        this.props.hideRightSidebar();\r\n    };\r\n\r\n    /**\r\n     * change state based on props changes\r\n     */\r\n    _loadStateFromProps() {\r\n        this.setState({\r\n            isHorizontalLayout: this.props.layoutType === layoutConstants.LAYOUT_HORIZONTAL,\r\n            isBoxed: this.props.layoutWidth === layoutConstants.LAYOUT_WIDTH_BOXED,\r\n            isSidebarScrollable: this.props.leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE,\r\n            isCondensed: this.props.leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED,\r\n            isDark: this.props.leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_DARK,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On layout change\r\n     */\r\n    changeLayout = e => {\r\n        var layout = e.currentTarget.value;\r\n        switch (layout) {\r\n            case 'horizontal':\r\n                this.setState({\r\n                    isHorizontalLayout: !this.state.isHorizontalLayout,\r\n                    isCondensed: false,\r\n                    isDetachedLayout: false,\r\n                });\r\n                this.props.changeLayout(layoutConstants.LAYOUT_HORIZONTAL);\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    isHorizontalLayout: false,\r\n                    isCondensed: false,\r\n                    isDetachedLayout: false,\r\n                });\r\n                this.props.changeLayout(layoutConstants.LAYOUT_VERTICAL);\r\n                break;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Change the width mode\r\n     */\r\n    changeWidthMode = e => {\r\n        var mode = e.currentTarget.value;\r\n        switch (mode) {\r\n            case 'boxed':\r\n                this.setState({ isBoxed: true });\r\n                this.props.changeLayoutWidth(layoutConstants.LAYOUT_WIDTH_BOXED);\r\n                break;\r\n            default:\r\n                this.setState({ isBoxed: false });\r\n                this.props.changeLayoutWidth(layoutConstants.LAYOUT_WIDTH_FLUID);\r\n                break;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Changes the theme\r\n     */\r\n    changeTheme = e => {\r\n        var theme = e.currentTarget.value;\r\n        switch (theme) {\r\n            case 'dark':\r\n                this.setState({ isLight: false, isDark: true });\r\n                this.props.changeSidebarTheme(layoutConstants.LEFT_SIDEBAR_THEME_DARK);\r\n                break;\r\n            default:\r\n                this.setState({ isLight: true, isDark: false });\r\n                this.props.changeSidebarTheme(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT);\r\n                break;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Change the type\r\n     */\r\n    changeLeftSiderbarType = e => {\r\n        var type = e.currentTarget.value;\r\n        switch (type) {\r\n            case 'condensed':\r\n                this.setState({ isCondensed: true, isSidebarScrollable: false, isLight: false, isDark: false });\r\n                this.props.changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED);\r\n                break;\r\n            case 'scrollable':\r\n                this.setState({ isCondensed: false, isSidebarScrollable: true });\r\n                this.props.changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE);\r\n                break;\r\n            default:\r\n                this.setState({ isCondensed: false, isSidebarScrollable: false });\r\n                this.props.changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED);\r\n                break;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"mt-2 p-2\">\r\n                    <div className=\"alert alert-primary\" role=\"alert\">\r\n                        <strong>Customize the layout, sidebar menu, etc</strong>\r\n                    </div>\r\n                </div>\r\n\r\n                <h5 className=\"pl-3 font-size-15\">Layout</h5>\r\n\r\n                <div className=\"pl-3\">\r\n                    <div className=\"pt-2\">\r\n                        <div className=\"custom-control custom-switch mb-1\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                className=\"custom-control-input\"\r\n                                name=\"layout\"\r\n                                value=\"vertical\"\r\n                                id=\"vertical-check\"\r\n                                onChange={this.changeLayout}\r\n                                checked={!this.state.isHorizontalLayout}\r\n                            />\r\n                            <label className=\"custom-control-label\" htmlFor=\"vertical-check\">\r\n                                Vertical Layout (Default)\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"custom-control custom-switch mb-1\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                className=\"custom-control-input\"\r\n                                name=\"layout\"\r\n                                value=\"horizontal\"\r\n                                id=\"horizontal-check\"\r\n                                onChange={this.changeLayout}\r\n                                checked={this.state.isHorizontalLayout}\r\n                            />\r\n                            <label className=\"custom-control-label\" htmlFor=\"horizontal-check\">\r\n                                Horizontal Layout\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <h5 className=\"pl-3 pt-3 border-top font-size-15\">Width</h5>\r\n\r\n                <div className=\"mt-2 pl-3\">\r\n                    <div className=\"custom-control custom-switch mb-1\">\r\n                        <input\r\n                            type=\"radio\"\r\n                            className=\"custom-control-input\"\r\n                            name=\"width\"\r\n                            value=\"fluid\"\r\n                            id=\"fluid-check\"\r\n                            checked={!this.state.isBoxed}\r\n                            onChange={this.changeWidthMode}\r\n                            disabled={this.state.isDetachedLayout}\r\n                        />\r\n                        <label className=\"custom-control-label\" htmlFor=\"fluid-check\">\r\n                            Fluid\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"custom-control custom-switch mb-1\">\r\n                        <input\r\n                            type=\"radio\"\r\n                            className=\"custom-control-input\"\r\n                            name=\"width\"\r\n                            value=\"boxed\"\r\n                            id=\"boxed-check\"\r\n                            checked={this.state.isBoxed}\r\n                            onChange={this.changeWidthMode}\r\n                            disabled={this.state.isDetachedLayout}\r\n                        />\r\n                        <label className=\"custom-control-label\" htmlFor=\"boxed-check\">\r\n                            Boxed\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr className=\"mb-0\" />\r\n                <h5 className=\"pl-3 pt-3 font-size-15\">Left Sidebar</h5>\r\n\r\n                <div className=\"pl-3\">\r\n                    <div className=\"pt-2\">\r\n                        <div className=\"custom-control custom-switch mb-1\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                className=\"custom-control-input\"\r\n                                name=\"theme\"\r\n                                value=\"default\"\r\n                                id=\"default-theme-check\"\r\n                                checked={!this.state.isDark}\r\n                                onChange={this.changeTheme}\r\n                                disabled={this.state.isDetachedLayout || this.state.isHorizontalLayout}\r\n                            />\r\n                            <label className=\"custom-control-label\" htmlFor=\"default-theme-check\">\r\n                                Default\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"custom-control custom-switch mb-1\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                className=\"custom-control-input\"\r\n                                name=\"theme\"\r\n                                value=\"dark\"\r\n                                id=\"dark-theme-check\"\r\n                                onChange={this.changeTheme}\r\n                                checked={this.state.isDark}\r\n                                disabled={this.state.isDetachedLayout || this.state.isHorizontalLayout}\r\n                            />\r\n                            <label className=\"custom-control-label\" htmlFor=\"dark-theme-check\">\r\n                                Dark\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"pl-3\">\r\n                    <div className=\"pt-2\">\r\n                        <div className=\"custom-control custom-switch mb-1\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                className=\"custom-control-input\"\r\n                                name=\"left-sidebar-width\"\r\n                                value=\"fixed\"\r\n                                id=\"left-sidebar-width-fixed\"\r\n                                checked={!this.state.isCondensed && !this.state.isSidebarScrollable}\r\n                                onChange={this.changeLeftSiderbarType}\r\n                                disabled={this.state.isDetachedLayout || this.state.isHorizontalLayout}\r\n                            />\r\n                            <label className=\"custom-control-label\" htmlFor=\"left-sidebar-width-fixed\">\r\n                                Fixed (Default)\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"custom-control custom-switch mb-1\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                className=\"custom-control-input\"\r\n                                name=\"left-sidebar-width\"\r\n                                value=\"condensed\"\r\n                                id=\"left-sidebar-width-condensed\"\r\n                                onChange={this.changeLeftSiderbarType}\r\n                                checked={this.state.isCondensed}\r\n                                disabled={this.state.isHorizontalLayout}\r\n                            />\r\n                            <label className=\"custom-control-label\" htmlFor=\"left-sidebar-width-condensed\">\r\n                                Condensed\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"custom-control custom-switch mb-1\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                className=\"custom-control-input\"\r\n                                name=\"left-sidebar-width\"\r\n                                value=\"scrollable\"\r\n                                id=\"left-sidebar-width-scrollable\"\r\n                                onChange={this.changeLeftSiderbarType}\r\n                                checked={this.state.isSidebarScrollable}\r\n                                disabled={this.state.isHorizontalLayout}\r\n                            />\r\n                            <label className=\"custom-control-label\" htmlFor=\"left-sidebar-width-scrollable\">\r\n                                Scrollable\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        showRightSidebar: state.Layout.showRightSidebar,\r\n        layoutType: state.Layout.layoutType,\r\n        layoutWidth: state.Layout.layoutWidth,\r\n        leftSideBarTheme: state.Layout.leftSideBarTheme,\r\n        leftSideBarType: state.Layout.leftSideBarType,\r\n    };\r\n};\r\nexport default connect(\r\n    mapStateToProps,\r\n    { hideRightSidebar, changeLayout, changeLayoutWidth, changeSidebarType, changeSidebarTheme }\r\n)(ThemeCustomizer);\r\n","import React, { Component, Suspense } from \"react\";\r\nimport { Container } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { changeLayout } from '../redux/actions';\r\nimport * as layoutConstants from '../constants/layout';\r\n\r\nimport ThemeCustomizer from '../components/ThemeCustomizer';\r\n\r\n// code splitting and lazy loading\r\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\r\nconst Topbar = React.lazy(() => import(\"../components/Topbar\"));\r\nconst Navbar = React.lazy(() => import(\"../components/Navbar\"));\r\nconst RightSidebar = React.lazy(() => import(\"../components/RightSidebar\"));\r\nconst Footer = React.lazy(() => import(\"../components/Footer\"));\r\nconst loading = () => <div className=\"text-center\"></div>;\r\n\r\n\r\nclass HorizontalLayout extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.openMenu = this.openMenu.bind(this);\r\n        this.state = {\r\n            isMenuOpened: false,\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    componentDidMount = () => {\r\n        this.props.changeLayout(layoutConstants.LAYOUT_HORIZONTAL);\r\n    }\r\n\r\n    /**\r\n     * Opens the menu - mobile\r\n     */\r\n    openMenu = e => {\r\n        e.preventDefault();\r\n        this.setState({ isMenuOpened: !this.state.isMenuOpened });\r\n    };\r\n\r\n    render() {\r\n        // get the child view which we would like to render\r\n        const children = this.props.children || null;\r\n        return (\r\n            <React.Fragment>\r\n                <div id=\"wrapper\">\r\n                    <Suspense fallback={loading()}>\r\n                        <Topbar openLeftMenuCallBack={this.openMenu} {...this.props} />\r\n                    </Suspense>\r\n                    <Suspense fallback={loading()}>\r\n                        <Navbar isMenuOpened={this.state.isMenuOpened} {...this.props} />\r\n                    </Suspense>\r\n\r\n                    <div className=\"content-page\">\r\n                        <div className=\"content\">\r\n                            <Container fluid>\r\n                                <Suspense fallback={loading()}>\r\n                                    {children}\r\n                                </Suspense>\r\n                            </Container>\r\n                        </div>\r\n\r\n                        <Suspense fallback={loading()}>\r\n                            <Footer />\r\n                        </Suspense>\r\n                    </div>\r\n                </div>\r\n\r\n                <Suspense fallback={loading()}>\r\n                    <RightSidebar title=\"Customize\" {...this.props}>\r\n                        <ThemeCustomizer />\r\n                    </RightSidebar>\r\n                </Suspense>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.Layout,\r\n        user: state.Auth.user\r\n    };\r\n};\r\nexport default connect(\r\n    mapStateToProps,\r\n    { changeLayout }\r\n)(HorizontalLayout);"],"sourceRoot":""}