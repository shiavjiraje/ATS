{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","pages/report/revenureport/Revenureport.js","pages/report/clientreport/TeamLeadwise.js","pages/report/clientreport/Datewise.js","pages/report/clientreport/Monthcount.js","pages/report/clientreport/Todaycount.js","pages/report/clientreport/ClientReportNav.js","pages/report/ViewRequirement.js","pages/report/Report.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","defaultSorted","dataField","order","sizePerPageRenderer","options","currSizePerPage","onSizePerPageChange","Fragment","className","Input","type","name","id","defaultValue","onChange","e","target","map","option","idx","text","TableWithSearch","props","SearchBar","Search","useState","rowData","setrowData","rowEvent","onDoubleClick","row","alert","console","log","NoDataIndication","bootstrap4","keyField","data","records","columns","search","Row","Col","md","searchProps","baseProps","bordered","rowEvents","noDataIndication","pagination","paginationFactory","sizePerPage","sizePerPageList","length","Revenureport","dispatch","useDispatch","useSelector","state","Report","revenureport","useEffect","getRevenuReportList","hidden","sort","selected","TeamLeadwise","Users","users","getUserList","Datewise","datewsiereport","getDatewiseReportList","Monthcount","monthcountreport","getMonthCountReportList","Todaycount","todayrepoert","getTodayReportList","ClientReportNav","activeTab","setActiveTab","toggle","tab","Nav","tabs","NavItem","NavLink","classnames","active","onClick","TabContent","TabPane","tabId","ExportCSVButton","CSVExport","modal","setModal","file","setFile","handleSubmit","a","preventDefault","uploadFile","res","formData","FormData","append","axios","post","headers","handleOnChange","files","UncontrolledDropdown","DropdownToggle","data-toggle","tag","DropdownMenu","right","csvProps","Modal","isOpen","onSubmit","ModalHeader","ModalBody","ModalFooter","Button","color","class","ViewRequirement","reqreport","getReqReportList","PageTitle","breadCrumbItems","label","path"],"mappings":"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","file":"static/js/19.836e40db.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { useEffect,useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import * as FeatherIcon from 'react-feather';\r\nimport { getRevenuReportList } from '../../../redux/allreport/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\n\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                    \r\n                            </Row>\r\n                            <Row className=\"mt-3\">\r\n                            <Col md={3} className=\"\">\r\n                                    <input type=\"date\" className=\"form-control style-input\"/>\r\n                                </Col>   \r\n                                <Col md={3} className=\"\">\r\n                                    <input type=\"date\" className=\"form-control style-input\"/>\r\n                                </Col>   \r\n                                <Col md={3} className=\"\">\r\n                                    <button className=\"btn btn-primary\">Search</button>\r\n                                </Col>                     \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst Revenureport = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Report.revenureport);\r\n  // console.log(records, 'join list');\r\n    useEffect(() => {\r\n        dispatch(getRevenuReportList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField:'id',\r\n            text:'ID',\r\n            hidden: true\r\n        },\r\n        {\r\n            dataField: 'Name',\r\n            text: 'Name.',\r\n            //sort: true,\r\n        },\r\n        {\r\n            dataField: 'Client',\r\n            text: 'Client',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'Location',\r\n            text: 'Location',\r\n        },\r\n        {\r\n            dataField: 'Skill',\r\n            text: 'Skill',\r\n        },\r\n        {\r\n            dataField: 'Type',\r\n            text: 'Type',\r\n        },\r\n        {\r\n            dataField: 'CTC',\r\n            text: 'CTC',\r\n        },\r\n        {\r\n            dataField: 'DR',\r\n            text: 'DR',\r\n        },\r\n        {\r\n            dataField: 'PR',\r\n            text: 'PR',\r\n        },\r\n        {\r\n            dataField: 'GP',\r\n            text: 'GP',\r\n        },\r\n        {\r\n            dataField: 'GPM',\r\n            text: 'GPM',\r\n        },\r\n        {\r\n            dataField: 'Recruiter',\r\n            text: 'Recruiter',\r\n        }\r\n    ]\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Revenureport;\r\n\r\n\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import * as FeatherIcon from 'react-feather';\r\nimport { getUserList } from '../../../redux/user/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\n\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                    \r\n                            </Row>\r\n                            <Row className=\"mt-3\">\r\n                            <Col md={3} className=\"\">\r\n                                    <select className=\"form-control style-input\">\r\n                                        <option selected>Select Name Here</option>\r\n                                    </select>\r\n                                </Col>   \r\n                            <Col md={3} className=\"\">\r\n                                    <input type=\"date\" className=\"form-control style-input\"/>\r\n                                </Col>   \r\n                                <Col md={3} className=\"\">\r\n                                    <input type=\"date\" className=\"form-control style-input\"/>\r\n                                </Col>   \r\n                                <Col md={3} className=\"\">\r\n                                    <button className=\"btn btn-primary\">Search</button>\r\n                                </Col>                     \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst TeamLeadwise = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Users.users);\r\n  // console.log(records, 'join list');\r\n    useEffect(() => {\r\n        dispatch(getUserList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField:'id',\r\n            text:'ID',\r\n            hidden: true\r\n        },\r\n        {\r\n            dataField: 'ECode',\r\n            text: 'Name.',\r\n            //sort: true,\r\n        },\r\n        {\r\n            dataField: 'EFullname',\r\n            text: 'Submission',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'ECompany_Name',\r\n            text: 'Interview',\r\n        },\r\n        {\r\n            dataField: 'EDesignation',\r\n            text: 'Offer',\r\n        },\r\n        {\r\n            dataField: 'ELocation',\r\n            text: 'Start',\r\n        }\r\n    ]\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TeamLeadwise;\r\n\r\n\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import * as FeatherIcon from 'react-feather';\r\nimport { getDatewiseReportList } from '../../../redux/allreport/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\n\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                    \r\n                            </Row>\r\n                            <Row className=\"mt-3\">\r\n                            <Col md={3} className=\"\">\r\n                                    <input type=\"date\" className=\"form-control style-input\"/>\r\n                                </Col>   \r\n                                <Col md={3} className=\"\">\r\n                                    <input type=\"date\" className=\"form-control style-input\"/>\r\n                                </Col>   \r\n                                <Col md={3} className=\"\">\r\n                                    <button className=\"btn btn-primary\">Search</button>\r\n                                </Col>                     \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst Datewise = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Report.datewsiereport);\r\n  // console.log(records, 'join list');\r\n    useEffect(() => {\r\n        dispatch(getDatewiseReportList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField:'id',\r\n            text:'ID',\r\n            hidden: true\r\n        },\r\n        {\r\n            dataField: 'name',\r\n            text: 'Name.',\r\n            //sort: true,\r\n        },\r\n        {\r\n            dataField: 'submission',\r\n            text: 'Submission',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'interview',\r\n            text: 'Interview',\r\n        },\r\n        {\r\n            dataField: 'offer',\r\n            text: 'Offer',\r\n        },\r\n        {\r\n            dataField: 'start',\r\n            text: 'Start',\r\n        }\r\n    ]\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Datewise;\r\n\r\n\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import * as FeatherIcon from 'react-feather';\r\nimport { getMonthCountReportList } from '../../../redux/allreport/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\n\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                    \r\n                            </Row>\r\n                           \r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst Monthcount = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Report.monthcountreport);\r\n  // console.log(records, 'join list');\r\n    useEffect(() => {\r\n        dispatch(getMonthCountReportList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField:'id',\r\n            text:'ID',\r\n            hidden: true\r\n        },\r\n        {\r\n            dataField: 'name',\r\n            text: 'Name.',\r\n            //sort: true,\r\n        },\r\n        {\r\n            dataField: 'submission',\r\n            text: 'Submission',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'interview',\r\n            text: 'Interview',\r\n        },\r\n        {\r\n            dataField: 'offer',\r\n            text: 'Offer',\r\n        },\r\n        {\r\n            dataField: 'start',\r\n            text: 'Start',\r\n        }\r\n    ]\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Monthcount;\r\n\r\n\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import * as FeatherIcon from 'react-feather';\r\nimport { getTodayReportList } from '../../../redux/allreport/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\n\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                    \r\n                            </Row>\r\n                           \r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst Todaycount = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Report.todayrepoert);\r\n  // console.log(records, 'join list');\r\n    useEffect(() => {\r\n        dispatch(getTodayReportList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField:'id',\r\n            text:'ID',\r\n            hidden: true\r\n        },\r\n        {\r\n            dataField: 'name',\r\n            text: 'Name.',\r\n            //sort: true,\r\n        },\r\n        {\r\n            dataField: 'submission',\r\n            text: 'Submission',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'interview',\r\n            text: 'Interview',\r\n        },\r\n        {\r\n            dataField: 'offer',\r\n            text: 'Offer',\r\n        },\r\n        {\r\n            dataField: 'start',\r\n            text: 'Start',\r\n        }\r\n    ]\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Todaycount;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink} from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport TeamLeadwise from './TeamLeadwise';\r\nimport Datewise from './Datewise';\r\nimport Monthcount from './Monthcount';\r\nimport Todaycount from './Todaycount';\r\n\r\nconst ClientReportNav = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Nav tabs className=\"second-level-tab nav nav-tabs justify-content-end\">\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Team Leadwise\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Datewise\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Monthcount\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '4' })}\r\n            onClick={() => { toggle('4'); }}\r\n          >\r\n            Today\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <TeamLeadwise/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <Datewise/> \r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n         <Monthcount/>\r\n        </TabPane >\r\n        <TabPane tabId=\"4\">\r\n         <Todaycount/>\r\n        </TabPane >\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ClientReportNav;","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search,CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getReqReportList } from '../../redux/allreport/actions';\r\n//import EditRequirementmodal from './EditRequirementmodal';\r\nimport axios from 'axios';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n//import { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n//import PageTitle from '../../components/PageTitle';\r\n//import AddUserModal from '../user/AddUserModal';\r\n//import EditRequirementmodal from './EditRequirementmodal';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n\r\nconst { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onClick: (e, row, rowIndex) => {\r\n    //       console.log(`clicked on row with index: ${rowIndex} ${row.jobcode}`);\r\n    //     }\r\n    //   };\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n      const {\r\n        //buttonLabel,\r\n        className\r\n      } = props;\r\n    \r\n      const [modal, setModal] = useState(false);\r\n      const [file, setFile] = useState(null);\r\n      const toggle = () => setModal(!modal);\r\n      const UPLOAD_ENDPOINT =\r\n      \"http://144.48.250.235:98/api/UploadFile\";\r\n  \r\n    const handleSubmit = async e => {\r\n      e.preventDefault();\r\n      //if await is removed, console log will be called before the uploadFile() is executed completely.\r\n      //since the await is added, this will pause here then console log will be called\r\n      let res = await uploadFile(file);\r\n      console.log(res.data);\r\n    };\r\n  \r\n    const uploadFile = async file => {\r\n      const formData = new FormData();\r\n      formData.append(\"avatar\", file);\r\n  \r\n      return await axios.post(UPLOAD_ENDPOINT, formData, {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\"\r\n        }\r\n      });\r\n    };\r\n  \r\n    const handleOnChange = e => {\r\n      console.log(e.target.files[0]);\r\n      setFile(e.target.files[0]);\r\n    };\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                \r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                <UncontrolledDropdown className=\" profile-dropdown-menu\">\r\n                                <button className=\"btn btn-secondary bg-secondary upbtn  mr-0\" onClick={toggle}>Upload New</button>\r\n                <DropdownToggle\r\n                    data-toggle=\"dropdown\"\r\n                    tag=\"button\"\r\n                    className=\"btn btn-secondary dropdown-toggle bg-secondary  mr-0\">\r\n                    Download <FeatherIcon.ChevronDown />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"topbar-dropdown-menu profile-dropdown-items\">\r\n                    <div className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export PDF</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export EXCEL</ExportCSVButton>\r\n                    </div>\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            <Modal isOpen={modal} toggle={toggle} className={className}>\r\n            <form onSubmit={handleSubmit}>\r\n                        <ModalHeader toggle={toggle}>Upload </ModalHeader>\r\n                        <ModalBody>\r\n                          <Row>\r\n                            <input type=\"file\" className=\"form-control\" onChange={handleOnChange} />\r\n                         </Row>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                        <Button color=\"primary\" type=\"submit\">Upload File</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                        </ModalFooter>\r\n                        </form>\r\n                    </Modal>\r\n                                {/* <ExportCSVButton className=\"btn-primary\" { ...props.csvProps }>Export CSV!!</ExportCSVButton> */}\r\n                                </Col>                            \r\n                            </Row>\r\n                            {/* <EditRequirementmodal modalToggle={toggle}/> */}\r\n                            <div class=\"table-responsive\">\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                //rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            /></div>\r\n                        </React.Fragment>\r\n                    )}\r\n                  \r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewRequirement = (props) => {\r\n    \r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Report.reqreport);\r\n   console.log(records, 'requirement')\r\n    useEffect(() => {\r\n        dispatch(getReqReportList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n   \r\n    const columns = [\r\n        {\r\n            dataField: 'jobcode',\r\n            text: 'Job Code.',\r\n        },\r\n        {\r\n            dataField:'client',\r\n            text:\"Client Name\"\r\n        },\r\n        {\r\n            dataField: 'skill',\r\n            text: 'Skill',\r\n        },\r\n        {\r\n            dataField: 'position',\r\n            text: 'Position',\r\n        },\r\n        {\r\n            dataField: 'location',\r\n            text: 'Location',\r\n        },\r\n        {\r\n            dataField: 'type',\r\n            text: 'Type',\r\n        },\r\n        {\r\n            dataField: 'status',\r\n            text: 'Status',\r\n        },\r\n        {\r\n            dataField: 'createdon',\r\n            text: 'Created On',\r\n        },\r\n        {\r\n            dataField: 'submission',\r\n            text: 'Submission',\r\n        },  \r\n        {\r\n            dataField: 'interview',\r\n            text: 'Interview',\r\n        },\r\n        {\r\n            dataField: 'offer',\r\n            text: 'Offer',\r\n        },\r\n        {\r\n            dataField: 'hire',\r\n            text: 'Hire',\r\n        },\r\n        {\r\n            dataField: 'bd',\r\n            text: 'BD',\r\n        },\r\n    ]\r\n        return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                {/* <EditRequirementmodal/> */}\r\n               \r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewRequirement;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button,  Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport Revenureport from './revenureport/Revenureport';\r\nimport ClientReportNav from './clientreport/ClientReportNav';\r\nimport ViewRequirement from './ViewRequirement';\r\nconst Report = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"page-title\">\r\n                <Col md={6}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Report', path: '/report', active: true },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"text-right\">\r\n                <Button color=\"primary\"><i className=\"uil uil-plus\"></i>ADD ITEM</Button>\r\n                </Col>\r\n            </Row>\r\n      <Nav tabs className=\"requirement-tab pt-3 pb-3 nav nav-tabs row bg-white\">\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Client Report\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Revenue\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Requirement\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <ClientReportNav/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <Revenureport/>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n          <ViewRequirement/>\r\n        </TabPane >\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Report;"],"sourceRoot":""}